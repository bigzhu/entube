// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const Garticles_constraint _$garticlesConstraintarticle_pkey =
    const Garticles_constraint._('article_pkey');

Garticles_constraint _$garticlesConstraintValueOf(String name) {
  switch (name) {
    case 'article_pkey':
      return _$garticlesConstraintarticle_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Garticles_constraint> _$garticlesConstraintValues =
    new BuiltSet<Garticles_constraint>(const <Garticles_constraint>[
  _$garticlesConstraintarticle_pkey,
]);

const Garticles_select_column _$garticlesSelectColumncreated_at =
    const Garticles_select_column._('created_at');
const Garticles_select_column _$garticlesSelectColumncreated_by =
    const Garticles_select_column._('created_by');
const Garticles_select_column _$garticlesSelectColumndeleted_at =
    const Garticles_select_column._('deleted_at');
const Garticles_select_column _$garticlesSelectColumnfavicon =
    const Garticles_select_column._('favicon');
const Garticles_select_column _$garticlesSelectColumnid =
    const Garticles_select_column._('id');
const Garticles_select_column _$garticlesSelectColumnsentences =
    const Garticles_select_column._('sentences');
const Garticles_select_column _$garticlesSelectColumnthumbnail =
    const Garticles_select_column._('thumbnail');
const Garticles_select_column _$garticlesSelectColumntitle =
    const Garticles_select_column._('title');
const Garticles_select_column _$garticlesSelectColumnupdated_at =
    const Garticles_select_column._('updated_at');
const Garticles_select_column _$garticlesSelectColumnupdated_by =
    const Garticles_select_column._('updated_by');
const Garticles_select_column _$garticlesSelectColumnurl =
    const Garticles_select_column._('url');

Garticles_select_column _$garticlesSelectColumnValueOf(String name) {
  switch (name) {
    case 'created_at':
      return _$garticlesSelectColumncreated_at;
    case 'created_by':
      return _$garticlesSelectColumncreated_by;
    case 'deleted_at':
      return _$garticlesSelectColumndeleted_at;
    case 'favicon':
      return _$garticlesSelectColumnfavicon;
    case 'id':
      return _$garticlesSelectColumnid;
    case 'sentences':
      return _$garticlesSelectColumnsentences;
    case 'thumbnail':
      return _$garticlesSelectColumnthumbnail;
    case 'title':
      return _$garticlesSelectColumntitle;
    case 'updated_at':
      return _$garticlesSelectColumnupdated_at;
    case 'updated_by':
      return _$garticlesSelectColumnupdated_by;
    case 'url':
      return _$garticlesSelectColumnurl;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Garticles_select_column> _$garticlesSelectColumnValues =
    new BuiltSet<Garticles_select_column>(const <Garticles_select_column>[
  _$garticlesSelectColumncreated_at,
  _$garticlesSelectColumncreated_by,
  _$garticlesSelectColumndeleted_at,
  _$garticlesSelectColumnfavicon,
  _$garticlesSelectColumnid,
  _$garticlesSelectColumnsentences,
  _$garticlesSelectColumnthumbnail,
  _$garticlesSelectColumntitle,
  _$garticlesSelectColumnupdated_at,
  _$garticlesSelectColumnupdated_by,
  _$garticlesSelectColumnurl,
]);

const Garticles_update_column _$garticlesUpdateColumncreated_at =
    const Garticles_update_column._('created_at');
const Garticles_update_column _$garticlesUpdateColumncreated_by =
    const Garticles_update_column._('created_by');
const Garticles_update_column _$garticlesUpdateColumndeleted_at =
    const Garticles_update_column._('deleted_at');
const Garticles_update_column _$garticlesUpdateColumnfavicon =
    const Garticles_update_column._('favicon');
const Garticles_update_column _$garticlesUpdateColumnid =
    const Garticles_update_column._('id');
const Garticles_update_column _$garticlesUpdateColumnsentences =
    const Garticles_update_column._('sentences');
const Garticles_update_column _$garticlesUpdateColumnthumbnail =
    const Garticles_update_column._('thumbnail');
const Garticles_update_column _$garticlesUpdateColumntitle =
    const Garticles_update_column._('title');
const Garticles_update_column _$garticlesUpdateColumnupdated_at =
    const Garticles_update_column._('updated_at');
const Garticles_update_column _$garticlesUpdateColumnupdated_by =
    const Garticles_update_column._('updated_by');
const Garticles_update_column _$garticlesUpdateColumnurl =
    const Garticles_update_column._('url');

Garticles_update_column _$garticlesUpdateColumnValueOf(String name) {
  switch (name) {
    case 'created_at':
      return _$garticlesUpdateColumncreated_at;
    case 'created_by':
      return _$garticlesUpdateColumncreated_by;
    case 'deleted_at':
      return _$garticlesUpdateColumndeleted_at;
    case 'favicon':
      return _$garticlesUpdateColumnfavicon;
    case 'id':
      return _$garticlesUpdateColumnid;
    case 'sentences':
      return _$garticlesUpdateColumnsentences;
    case 'thumbnail':
      return _$garticlesUpdateColumnthumbnail;
    case 'title':
      return _$garticlesUpdateColumntitle;
    case 'updated_at':
      return _$garticlesUpdateColumnupdated_at;
    case 'updated_by':
      return _$garticlesUpdateColumnupdated_by;
    case 'url':
      return _$garticlesUpdateColumnurl;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Garticles_update_column> _$garticlesUpdateColumnValues =
    new BuiltSet<Garticles_update_column>(const <Garticles_update_column>[
  _$garticlesUpdateColumncreated_at,
  _$garticlesUpdateColumncreated_by,
  _$garticlesUpdateColumndeleted_at,
  _$garticlesUpdateColumnfavicon,
  _$garticlesUpdateColumnid,
  _$garticlesUpdateColumnsentences,
  _$garticlesUpdateColumnthumbnail,
  _$garticlesUpdateColumntitle,
  _$garticlesUpdateColumnupdated_at,
  _$garticlesUpdateColumnupdated_by,
  _$garticlesUpdateColumnurl,
]);

const GauthProviderRequests_constraint
    _$gauthProviderRequestsConstraintprovider_requests_pkey =
    const GauthProviderRequests_constraint._('provider_requests_pkey');

GauthProviderRequests_constraint _$gauthProviderRequestsConstraintValueOf(
    String name) {
  switch (name) {
    case 'provider_requests_pkey':
      return _$gauthProviderRequestsConstraintprovider_requests_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviderRequests_constraint>
    _$gauthProviderRequestsConstraintValues =
    new BuiltSet<GauthProviderRequests_constraint>(const <
        GauthProviderRequests_constraint>[
  _$gauthProviderRequestsConstraintprovider_requests_pkey,
]);

const GauthProviderRequests_select_column
    _$gauthProviderRequestsSelectColumnid =
    const GauthProviderRequests_select_column._('id');
const GauthProviderRequests_select_column
    _$gauthProviderRequestsSelectColumnoptions =
    const GauthProviderRequests_select_column._('options');

GauthProviderRequests_select_column _$gauthProviderRequestsSelectColumnValueOf(
    String name) {
  switch (name) {
    case 'id':
      return _$gauthProviderRequestsSelectColumnid;
    case 'options':
      return _$gauthProviderRequestsSelectColumnoptions;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviderRequests_select_column>
    _$gauthProviderRequestsSelectColumnValues =
    new BuiltSet<GauthProviderRequests_select_column>(const <
        GauthProviderRequests_select_column>[
  _$gauthProviderRequestsSelectColumnid,
  _$gauthProviderRequestsSelectColumnoptions,
]);

const GauthProviderRequests_update_column
    _$gauthProviderRequestsUpdateColumnid =
    const GauthProviderRequests_update_column._('id');
const GauthProviderRequests_update_column
    _$gauthProviderRequestsUpdateColumnoptions =
    const GauthProviderRequests_update_column._('options');

GauthProviderRequests_update_column _$gauthProviderRequestsUpdateColumnValueOf(
    String name) {
  switch (name) {
    case 'id':
      return _$gauthProviderRequestsUpdateColumnid;
    case 'options':
      return _$gauthProviderRequestsUpdateColumnoptions;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviderRequests_update_column>
    _$gauthProviderRequestsUpdateColumnValues =
    new BuiltSet<GauthProviderRequests_update_column>(const <
        GauthProviderRequests_update_column>[
  _$gauthProviderRequestsUpdateColumnid,
  _$gauthProviderRequestsUpdateColumnoptions,
]);

const GauthProviders_constraint _$gauthProvidersConstraintproviders_pkey =
    const GauthProviders_constraint._('providers_pkey');

GauthProviders_constraint _$gauthProvidersConstraintValueOf(String name) {
  switch (name) {
    case 'providers_pkey':
      return _$gauthProvidersConstraintproviders_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviders_constraint> _$gauthProvidersConstraintValues =
    new BuiltSet<GauthProviders_constraint>(const <GauthProviders_constraint>[
  _$gauthProvidersConstraintproviders_pkey,
]);

const GauthProviders_select_column _$gauthProvidersSelectColumnid =
    const GauthProviders_select_column._('id');

GauthProviders_select_column _$gauthProvidersSelectColumnValueOf(String name) {
  switch (name) {
    case 'id':
      return _$gauthProvidersSelectColumnid;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviders_select_column>
    _$gauthProvidersSelectColumnValues = new BuiltSet<
        GauthProviders_select_column>(const <GauthProviders_select_column>[
  _$gauthProvidersSelectColumnid,
]);

const GauthProviders_update_column _$gauthProvidersUpdateColumnid =
    const GauthProviders_update_column._('id');

GauthProviders_update_column _$gauthProvidersUpdateColumnValueOf(String name) {
  switch (name) {
    case 'id':
      return _$gauthProvidersUpdateColumnid;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthProviders_update_column>
    _$gauthProvidersUpdateColumnValues = new BuiltSet<
        GauthProviders_update_column>(const <GauthProviders_update_column>[
  _$gauthProvidersUpdateColumnid,
]);

const GauthRefreshTokens_constraint
    _$gauthRefreshTokensConstraintrefresh_tokens_pkey =
    const GauthRefreshTokens_constraint._('refresh_tokens_pkey');

GauthRefreshTokens_constraint _$gauthRefreshTokensConstraintValueOf(
    String name) {
  switch (name) {
    case 'refresh_tokens_pkey':
      return _$gauthRefreshTokensConstraintrefresh_tokens_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRefreshTokens_constraint>
    _$gauthRefreshTokensConstraintValues = new BuiltSet<
        GauthRefreshTokens_constraint>(const <GauthRefreshTokens_constraint>[
  _$gauthRefreshTokensConstraintrefresh_tokens_pkey,
]);

const GauthRefreshTokens_select_column
    _$gauthRefreshTokensSelectColumncreatedAt =
    const GauthRefreshTokens_select_column._('createdAt');
const GauthRefreshTokens_select_column
    _$gauthRefreshTokensSelectColumnexpiresAt =
    const GauthRefreshTokens_select_column._('expiresAt');
const GauthRefreshTokens_select_column
    _$gauthRefreshTokensSelectColumnrefreshToken =
    const GauthRefreshTokens_select_column._('refreshToken');
const GauthRefreshTokens_select_column _$gauthRefreshTokensSelectColumnuserId =
    const GauthRefreshTokens_select_column._('userId');

GauthRefreshTokens_select_column _$gauthRefreshTokensSelectColumnValueOf(
    String name) {
  switch (name) {
    case 'createdAt':
      return _$gauthRefreshTokensSelectColumncreatedAt;
    case 'expiresAt':
      return _$gauthRefreshTokensSelectColumnexpiresAt;
    case 'refreshToken':
      return _$gauthRefreshTokensSelectColumnrefreshToken;
    case 'userId':
      return _$gauthRefreshTokensSelectColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRefreshTokens_select_column>
    _$gauthRefreshTokensSelectColumnValues =
    new BuiltSet<GauthRefreshTokens_select_column>(const <
        GauthRefreshTokens_select_column>[
  _$gauthRefreshTokensSelectColumncreatedAt,
  _$gauthRefreshTokensSelectColumnexpiresAt,
  _$gauthRefreshTokensSelectColumnrefreshToken,
  _$gauthRefreshTokensSelectColumnuserId,
]);

const GauthRefreshTokens_update_column
    _$gauthRefreshTokensUpdateColumncreatedAt =
    const GauthRefreshTokens_update_column._('createdAt');
const GauthRefreshTokens_update_column
    _$gauthRefreshTokensUpdateColumnexpiresAt =
    const GauthRefreshTokens_update_column._('expiresAt');
const GauthRefreshTokens_update_column
    _$gauthRefreshTokensUpdateColumnrefreshToken =
    const GauthRefreshTokens_update_column._('refreshToken');
const GauthRefreshTokens_update_column _$gauthRefreshTokensUpdateColumnuserId =
    const GauthRefreshTokens_update_column._('userId');

GauthRefreshTokens_update_column _$gauthRefreshTokensUpdateColumnValueOf(
    String name) {
  switch (name) {
    case 'createdAt':
      return _$gauthRefreshTokensUpdateColumncreatedAt;
    case 'expiresAt':
      return _$gauthRefreshTokensUpdateColumnexpiresAt;
    case 'refreshToken':
      return _$gauthRefreshTokensUpdateColumnrefreshToken;
    case 'userId':
      return _$gauthRefreshTokensUpdateColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRefreshTokens_update_column>
    _$gauthRefreshTokensUpdateColumnValues =
    new BuiltSet<GauthRefreshTokens_update_column>(const <
        GauthRefreshTokens_update_column>[
  _$gauthRefreshTokensUpdateColumncreatedAt,
  _$gauthRefreshTokensUpdateColumnexpiresAt,
  _$gauthRefreshTokensUpdateColumnrefreshToken,
  _$gauthRefreshTokensUpdateColumnuserId,
]);

const GauthRoles_constraint _$gauthRolesConstraintroles_pkey =
    const GauthRoles_constraint._('roles_pkey');

GauthRoles_constraint _$gauthRolesConstraintValueOf(String name) {
  switch (name) {
    case 'roles_pkey':
      return _$gauthRolesConstraintroles_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRoles_constraint> _$gauthRolesConstraintValues =
    new BuiltSet<GauthRoles_constraint>(const <GauthRoles_constraint>[
  _$gauthRolesConstraintroles_pkey,
]);

const GauthRoles_select_column _$gauthRolesSelectColumnrole =
    const GauthRoles_select_column._('role');

GauthRoles_select_column _$gauthRolesSelectColumnValueOf(String name) {
  switch (name) {
    case 'role':
      return _$gauthRolesSelectColumnrole;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRoles_select_column> _$gauthRolesSelectColumnValues =
    new BuiltSet<GauthRoles_select_column>(const <GauthRoles_select_column>[
  _$gauthRolesSelectColumnrole,
]);

const GauthRoles_update_column _$gauthRolesUpdateColumnrole =
    const GauthRoles_update_column._('role');

GauthRoles_update_column _$gauthRolesUpdateColumnValueOf(String name) {
  switch (name) {
    case 'role':
      return _$gauthRolesUpdateColumnrole;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthRoles_update_column> _$gauthRolesUpdateColumnValues =
    new BuiltSet<GauthRoles_update_column>(const <GauthRoles_update_column>[
  _$gauthRolesUpdateColumnrole,
]);

const GauthUserProviders_constraint
    _$gauthUserProvidersConstraintuser_providers_pkey =
    const GauthUserProviders_constraint._('user_providers_pkey');
const GauthUserProviders_constraint
    _$gauthUserProvidersConstraintuser_providers_provider_id_provider_user_id_key =
    const GauthUserProviders_constraint._(
        'user_providers_provider_id_provider_user_id_key');
const GauthUserProviders_constraint
    _$gauthUserProvidersConstraintuser_providers_user_id_provider_id_key =
    const GauthUserProviders_constraint._(
        'user_providers_user_id_provider_id_key');

GauthUserProviders_constraint _$gauthUserProvidersConstraintValueOf(
    String name) {
  switch (name) {
    case 'user_providers_pkey':
      return _$gauthUserProvidersConstraintuser_providers_pkey;
    case 'user_providers_provider_id_provider_user_id_key':
      return _$gauthUserProvidersConstraintuser_providers_provider_id_provider_user_id_key;
    case 'user_providers_user_id_provider_id_key':
      return _$gauthUserProvidersConstraintuser_providers_user_id_provider_id_key;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserProviders_constraint>
    _$gauthUserProvidersConstraintValues = new BuiltSet<
        GauthUserProviders_constraint>(const <GauthUserProviders_constraint>[
  _$gauthUserProvidersConstraintuser_providers_pkey,
  _$gauthUserProvidersConstraintuser_providers_provider_id_provider_user_id_key,
  _$gauthUserProvidersConstraintuser_providers_user_id_provider_id_key,
]);

const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumnaccessToken =
    const GauthUserProviders_select_column._('accessToken');
const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumncreatedAt =
    const GauthUserProviders_select_column._('createdAt');
const GauthUserProviders_select_column _$gauthUserProvidersSelectColumnid =
    const GauthUserProviders_select_column._('id');
const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumnproviderId =
    const GauthUserProviders_select_column._('providerId');
const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumnproviderUserId =
    const GauthUserProviders_select_column._('providerUserId');
const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumnrefreshToken =
    const GauthUserProviders_select_column._('refreshToken');
const GauthUserProviders_select_column
    _$gauthUserProvidersSelectColumnupdatedAt =
    const GauthUserProviders_select_column._('updatedAt');
const GauthUserProviders_select_column _$gauthUserProvidersSelectColumnuserId =
    const GauthUserProviders_select_column._('userId');

GauthUserProviders_select_column _$gauthUserProvidersSelectColumnValueOf(
    String name) {
  switch (name) {
    case 'accessToken':
      return _$gauthUserProvidersSelectColumnaccessToken;
    case 'createdAt':
      return _$gauthUserProvidersSelectColumncreatedAt;
    case 'id':
      return _$gauthUserProvidersSelectColumnid;
    case 'providerId':
      return _$gauthUserProvidersSelectColumnproviderId;
    case 'providerUserId':
      return _$gauthUserProvidersSelectColumnproviderUserId;
    case 'refreshToken':
      return _$gauthUserProvidersSelectColumnrefreshToken;
    case 'updatedAt':
      return _$gauthUserProvidersSelectColumnupdatedAt;
    case 'userId':
      return _$gauthUserProvidersSelectColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserProviders_select_column>
    _$gauthUserProvidersSelectColumnValues =
    new BuiltSet<GauthUserProviders_select_column>(const <
        GauthUserProviders_select_column>[
  _$gauthUserProvidersSelectColumnaccessToken,
  _$gauthUserProvidersSelectColumncreatedAt,
  _$gauthUserProvidersSelectColumnid,
  _$gauthUserProvidersSelectColumnproviderId,
  _$gauthUserProvidersSelectColumnproviderUserId,
  _$gauthUserProvidersSelectColumnrefreshToken,
  _$gauthUserProvidersSelectColumnupdatedAt,
  _$gauthUserProvidersSelectColumnuserId,
]);

const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumnaccessToken =
    const GauthUserProviders_update_column._('accessToken');
const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumncreatedAt =
    const GauthUserProviders_update_column._('createdAt');
const GauthUserProviders_update_column _$gauthUserProvidersUpdateColumnid =
    const GauthUserProviders_update_column._('id');
const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumnproviderId =
    const GauthUserProviders_update_column._('providerId');
const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumnproviderUserId =
    const GauthUserProviders_update_column._('providerUserId');
const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumnrefreshToken =
    const GauthUserProviders_update_column._('refreshToken');
const GauthUserProviders_update_column
    _$gauthUserProvidersUpdateColumnupdatedAt =
    const GauthUserProviders_update_column._('updatedAt');
const GauthUserProviders_update_column _$gauthUserProvidersUpdateColumnuserId =
    const GauthUserProviders_update_column._('userId');

GauthUserProviders_update_column _$gauthUserProvidersUpdateColumnValueOf(
    String name) {
  switch (name) {
    case 'accessToken':
      return _$gauthUserProvidersUpdateColumnaccessToken;
    case 'createdAt':
      return _$gauthUserProvidersUpdateColumncreatedAt;
    case 'id':
      return _$gauthUserProvidersUpdateColumnid;
    case 'providerId':
      return _$gauthUserProvidersUpdateColumnproviderId;
    case 'providerUserId':
      return _$gauthUserProvidersUpdateColumnproviderUserId;
    case 'refreshToken':
      return _$gauthUserProvidersUpdateColumnrefreshToken;
    case 'updatedAt':
      return _$gauthUserProvidersUpdateColumnupdatedAt;
    case 'userId':
      return _$gauthUserProvidersUpdateColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserProviders_update_column>
    _$gauthUserProvidersUpdateColumnValues =
    new BuiltSet<GauthUserProviders_update_column>(const <
        GauthUserProviders_update_column>[
  _$gauthUserProvidersUpdateColumnaccessToken,
  _$gauthUserProvidersUpdateColumncreatedAt,
  _$gauthUserProvidersUpdateColumnid,
  _$gauthUserProvidersUpdateColumnproviderId,
  _$gauthUserProvidersUpdateColumnproviderUserId,
  _$gauthUserProvidersUpdateColumnrefreshToken,
  _$gauthUserProvidersUpdateColumnupdatedAt,
  _$gauthUserProvidersUpdateColumnuserId,
]);

const GauthUserRoles_constraint _$gauthUserRolesConstraintuser_roles_pkey =
    const GauthUserRoles_constraint._('user_roles_pkey');
const GauthUserRoles_constraint
    _$gauthUserRolesConstraintuser_roles_user_id_role_key =
    const GauthUserRoles_constraint._('user_roles_user_id_role_key');

GauthUserRoles_constraint _$gauthUserRolesConstraintValueOf(String name) {
  switch (name) {
    case 'user_roles_pkey':
      return _$gauthUserRolesConstraintuser_roles_pkey;
    case 'user_roles_user_id_role_key':
      return _$gauthUserRolesConstraintuser_roles_user_id_role_key;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserRoles_constraint> _$gauthUserRolesConstraintValues =
    new BuiltSet<GauthUserRoles_constraint>(const <GauthUserRoles_constraint>[
  _$gauthUserRolesConstraintuser_roles_pkey,
  _$gauthUserRolesConstraintuser_roles_user_id_role_key,
]);

const GauthUserRoles_select_column _$gauthUserRolesSelectColumncreatedAt =
    const GauthUserRoles_select_column._('createdAt');
const GauthUserRoles_select_column _$gauthUserRolesSelectColumnid =
    const GauthUserRoles_select_column._('id');
const GauthUserRoles_select_column _$gauthUserRolesSelectColumnrole =
    const GauthUserRoles_select_column._('role');
const GauthUserRoles_select_column _$gauthUserRolesSelectColumnuserId =
    const GauthUserRoles_select_column._('userId');

GauthUserRoles_select_column _$gauthUserRolesSelectColumnValueOf(String name) {
  switch (name) {
    case 'createdAt':
      return _$gauthUserRolesSelectColumncreatedAt;
    case 'id':
      return _$gauthUserRolesSelectColumnid;
    case 'role':
      return _$gauthUserRolesSelectColumnrole;
    case 'userId':
      return _$gauthUserRolesSelectColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserRoles_select_column>
    _$gauthUserRolesSelectColumnValues = new BuiltSet<
        GauthUserRoles_select_column>(const <GauthUserRoles_select_column>[
  _$gauthUserRolesSelectColumncreatedAt,
  _$gauthUserRolesSelectColumnid,
  _$gauthUserRolesSelectColumnrole,
  _$gauthUserRolesSelectColumnuserId,
]);

const GauthUserRoles_update_column _$gauthUserRolesUpdateColumncreatedAt =
    const GauthUserRoles_update_column._('createdAt');
const GauthUserRoles_update_column _$gauthUserRolesUpdateColumnid =
    const GauthUserRoles_update_column._('id');
const GauthUserRoles_update_column _$gauthUserRolesUpdateColumnrole =
    const GauthUserRoles_update_column._('role');
const GauthUserRoles_update_column _$gauthUserRolesUpdateColumnuserId =
    const GauthUserRoles_update_column._('userId');

GauthUserRoles_update_column _$gauthUserRolesUpdateColumnValueOf(String name) {
  switch (name) {
    case 'createdAt':
      return _$gauthUserRolesUpdateColumncreatedAt;
    case 'id':
      return _$gauthUserRolesUpdateColumnid;
    case 'role':
      return _$gauthUserRolesUpdateColumnrole;
    case 'userId':
      return _$gauthUserRolesUpdateColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserRoles_update_column>
    _$gauthUserRolesUpdateColumnValues = new BuiltSet<
        GauthUserRoles_update_column>(const <GauthUserRoles_update_column>[
  _$gauthUserRolesUpdateColumncreatedAt,
  _$gauthUserRolesUpdateColumnid,
  _$gauthUserRolesUpdateColumnrole,
  _$gauthUserRolesUpdateColumnuserId,
]);

const GauthUserSecurityKeys_constraint
    _$gauthUserSecurityKeysConstraintuser_security_key_credential_id_key =
    const GauthUserSecurityKeys_constraint._(
        'user_security_key_credential_id_key');
const GauthUserSecurityKeys_constraint
    _$gauthUserSecurityKeysConstraintuser_security_keys_pkey =
    const GauthUserSecurityKeys_constraint._('user_security_keys_pkey');

GauthUserSecurityKeys_constraint _$gauthUserSecurityKeysConstraintValueOf(
    String name) {
  switch (name) {
    case 'user_security_key_credential_id_key':
      return _$gauthUserSecurityKeysConstraintuser_security_key_credential_id_key;
    case 'user_security_keys_pkey':
      return _$gauthUserSecurityKeysConstraintuser_security_keys_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserSecurityKeys_constraint>
    _$gauthUserSecurityKeysConstraintValues =
    new BuiltSet<GauthUserSecurityKeys_constraint>(const <
        GauthUserSecurityKeys_constraint>[
  _$gauthUserSecurityKeysConstraintuser_security_key_credential_id_key,
  _$gauthUserSecurityKeysConstraintuser_security_keys_pkey,
]);

const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumncounter =
    const GauthUserSecurityKeys_select_column._('counter');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumncredentialId =
    const GauthUserSecurityKeys_select_column._('credentialId');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumncredentialPublicKey =
    const GauthUserSecurityKeys_select_column._('credentialPublicKey');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumnid =
    const GauthUserSecurityKeys_select_column._('id');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumnnickname =
    const GauthUserSecurityKeys_select_column._('nickname');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumntransports =
    const GauthUserSecurityKeys_select_column._('transports');
const GauthUserSecurityKeys_select_column
    _$gauthUserSecurityKeysSelectColumnuserId =
    const GauthUserSecurityKeys_select_column._('userId');

GauthUserSecurityKeys_select_column _$gauthUserSecurityKeysSelectColumnValueOf(
    String name) {
  switch (name) {
    case 'counter':
      return _$gauthUserSecurityKeysSelectColumncounter;
    case 'credentialId':
      return _$gauthUserSecurityKeysSelectColumncredentialId;
    case 'credentialPublicKey':
      return _$gauthUserSecurityKeysSelectColumncredentialPublicKey;
    case 'id':
      return _$gauthUserSecurityKeysSelectColumnid;
    case 'nickname':
      return _$gauthUserSecurityKeysSelectColumnnickname;
    case 'transports':
      return _$gauthUserSecurityKeysSelectColumntransports;
    case 'userId':
      return _$gauthUserSecurityKeysSelectColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserSecurityKeys_select_column>
    _$gauthUserSecurityKeysSelectColumnValues =
    new BuiltSet<GauthUserSecurityKeys_select_column>(const <
        GauthUserSecurityKeys_select_column>[
  _$gauthUserSecurityKeysSelectColumncounter,
  _$gauthUserSecurityKeysSelectColumncredentialId,
  _$gauthUserSecurityKeysSelectColumncredentialPublicKey,
  _$gauthUserSecurityKeysSelectColumnid,
  _$gauthUserSecurityKeysSelectColumnnickname,
  _$gauthUserSecurityKeysSelectColumntransports,
  _$gauthUserSecurityKeysSelectColumnuserId,
]);

const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumncounter =
    const GauthUserSecurityKeys_update_column._('counter');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumncredentialId =
    const GauthUserSecurityKeys_update_column._('credentialId');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumncredentialPublicKey =
    const GauthUserSecurityKeys_update_column._('credentialPublicKey');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumnid =
    const GauthUserSecurityKeys_update_column._('id');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumnnickname =
    const GauthUserSecurityKeys_update_column._('nickname');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumntransports =
    const GauthUserSecurityKeys_update_column._('transports');
const GauthUserSecurityKeys_update_column
    _$gauthUserSecurityKeysUpdateColumnuserId =
    const GauthUserSecurityKeys_update_column._('userId');

GauthUserSecurityKeys_update_column _$gauthUserSecurityKeysUpdateColumnValueOf(
    String name) {
  switch (name) {
    case 'counter':
      return _$gauthUserSecurityKeysUpdateColumncounter;
    case 'credentialId':
      return _$gauthUserSecurityKeysUpdateColumncredentialId;
    case 'credentialPublicKey':
      return _$gauthUserSecurityKeysUpdateColumncredentialPublicKey;
    case 'id':
      return _$gauthUserSecurityKeysUpdateColumnid;
    case 'nickname':
      return _$gauthUserSecurityKeysUpdateColumnnickname;
    case 'transports':
      return _$gauthUserSecurityKeysUpdateColumntransports;
    case 'userId':
      return _$gauthUserSecurityKeysUpdateColumnuserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GauthUserSecurityKeys_update_column>
    _$gauthUserSecurityKeysUpdateColumnValues =
    new BuiltSet<GauthUserSecurityKeys_update_column>(const <
        GauthUserSecurityKeys_update_column>[
  _$gauthUserSecurityKeysUpdateColumncounter,
  _$gauthUserSecurityKeysUpdateColumncredentialId,
  _$gauthUserSecurityKeysUpdateColumncredentialPublicKey,
  _$gauthUserSecurityKeysUpdateColumnid,
  _$gauthUserSecurityKeysUpdateColumnnickname,
  _$gauthUserSecurityKeysUpdateColumntransports,
  _$gauthUserSecurityKeysUpdateColumnuserId,
]);

const Gbuckets_constraint _$gbucketsConstraintbuckets_pkey =
    const Gbuckets_constraint._('buckets_pkey');

Gbuckets_constraint _$gbucketsConstraintValueOf(String name) {
  switch (name) {
    case 'buckets_pkey':
      return _$gbucketsConstraintbuckets_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gbuckets_constraint> _$gbucketsConstraintValues =
    new BuiltSet<Gbuckets_constraint>(const <Gbuckets_constraint>[
  _$gbucketsConstraintbuckets_pkey,
]);

const Gbuckets_select_column _$gbucketsSelectColumncacheControl =
    const Gbuckets_select_column._('cacheControl');
const Gbuckets_select_column _$gbucketsSelectColumncreatedAt =
    const Gbuckets_select_column._('createdAt');
const Gbuckets_select_column _$gbucketsSelectColumndownloadExpiration =
    const Gbuckets_select_column._('downloadExpiration');
const Gbuckets_select_column _$gbucketsSelectColumnid =
    const Gbuckets_select_column._('id');
const Gbuckets_select_column _$gbucketsSelectColumnmaxUploadFileSize =
    const Gbuckets_select_column._('maxUploadFileSize');
const Gbuckets_select_column _$gbucketsSelectColumnminUploadFileSize =
    const Gbuckets_select_column._('minUploadFileSize');
const Gbuckets_select_column _$gbucketsSelectColumnpresignedUrlsEnabled =
    const Gbuckets_select_column._('presignedUrlsEnabled');
const Gbuckets_select_column _$gbucketsSelectColumnupdatedAt =
    const Gbuckets_select_column._('updatedAt');

Gbuckets_select_column _$gbucketsSelectColumnValueOf(String name) {
  switch (name) {
    case 'cacheControl':
      return _$gbucketsSelectColumncacheControl;
    case 'createdAt':
      return _$gbucketsSelectColumncreatedAt;
    case 'downloadExpiration':
      return _$gbucketsSelectColumndownloadExpiration;
    case 'id':
      return _$gbucketsSelectColumnid;
    case 'maxUploadFileSize':
      return _$gbucketsSelectColumnmaxUploadFileSize;
    case 'minUploadFileSize':
      return _$gbucketsSelectColumnminUploadFileSize;
    case 'presignedUrlsEnabled':
      return _$gbucketsSelectColumnpresignedUrlsEnabled;
    case 'updatedAt':
      return _$gbucketsSelectColumnupdatedAt;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gbuckets_select_column> _$gbucketsSelectColumnValues =
    new BuiltSet<Gbuckets_select_column>(const <Gbuckets_select_column>[
  _$gbucketsSelectColumncacheControl,
  _$gbucketsSelectColumncreatedAt,
  _$gbucketsSelectColumndownloadExpiration,
  _$gbucketsSelectColumnid,
  _$gbucketsSelectColumnmaxUploadFileSize,
  _$gbucketsSelectColumnminUploadFileSize,
  _$gbucketsSelectColumnpresignedUrlsEnabled,
  _$gbucketsSelectColumnupdatedAt,
]);

const Gbuckets_update_column _$gbucketsUpdateColumncacheControl =
    const Gbuckets_update_column._('cacheControl');
const Gbuckets_update_column _$gbucketsUpdateColumncreatedAt =
    const Gbuckets_update_column._('createdAt');
const Gbuckets_update_column _$gbucketsUpdateColumndownloadExpiration =
    const Gbuckets_update_column._('downloadExpiration');
const Gbuckets_update_column _$gbucketsUpdateColumnid =
    const Gbuckets_update_column._('id');
const Gbuckets_update_column _$gbucketsUpdateColumnmaxUploadFileSize =
    const Gbuckets_update_column._('maxUploadFileSize');
const Gbuckets_update_column _$gbucketsUpdateColumnminUploadFileSize =
    const Gbuckets_update_column._('minUploadFileSize');
const Gbuckets_update_column _$gbucketsUpdateColumnpresignedUrlsEnabled =
    const Gbuckets_update_column._('presignedUrlsEnabled');
const Gbuckets_update_column _$gbucketsUpdateColumnupdatedAt =
    const Gbuckets_update_column._('updatedAt');

Gbuckets_update_column _$gbucketsUpdateColumnValueOf(String name) {
  switch (name) {
    case 'cacheControl':
      return _$gbucketsUpdateColumncacheControl;
    case 'createdAt':
      return _$gbucketsUpdateColumncreatedAt;
    case 'downloadExpiration':
      return _$gbucketsUpdateColumndownloadExpiration;
    case 'id':
      return _$gbucketsUpdateColumnid;
    case 'maxUploadFileSize':
      return _$gbucketsUpdateColumnmaxUploadFileSize;
    case 'minUploadFileSize':
      return _$gbucketsUpdateColumnminUploadFileSize;
    case 'presignedUrlsEnabled':
      return _$gbucketsUpdateColumnpresignedUrlsEnabled;
    case 'updatedAt':
      return _$gbucketsUpdateColumnupdatedAt;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gbuckets_update_column> _$gbucketsUpdateColumnValues =
    new BuiltSet<Gbuckets_update_column>(const <Gbuckets_update_column>[
  _$gbucketsUpdateColumncacheControl,
  _$gbucketsUpdateColumncreatedAt,
  _$gbucketsUpdateColumndownloadExpiration,
  _$gbucketsUpdateColumnid,
  _$gbucketsUpdateColumnmaxUploadFileSize,
  _$gbucketsUpdateColumnminUploadFileSize,
  _$gbucketsUpdateColumnpresignedUrlsEnabled,
  _$gbucketsUpdateColumnupdatedAt,
]);

const Gcursor_ordering _$gcursorOrderingASC = const Gcursor_ordering._('ASC');
const Gcursor_ordering _$gcursorOrderingDESC = const Gcursor_ordering._('DESC');

Gcursor_ordering _$gcursorOrderingValueOf(String name) {
  switch (name) {
    case 'ASC':
      return _$gcursorOrderingASC;
    case 'DESC':
      return _$gcursorOrderingDESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gcursor_ordering> _$gcursorOrderingValues =
    new BuiltSet<Gcursor_ordering>(const <Gcursor_ordering>[
  _$gcursorOrderingASC,
  _$gcursorOrderingDESC,
]);

const Gfiles_constraint _$gfilesConstraintfiles_pkey =
    const Gfiles_constraint._('files_pkey');

Gfiles_constraint _$gfilesConstraintValueOf(String name) {
  switch (name) {
    case 'files_pkey':
      return _$gfilesConstraintfiles_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gfiles_constraint> _$gfilesConstraintValues =
    new BuiltSet<Gfiles_constraint>(const <Gfiles_constraint>[
  _$gfilesConstraintfiles_pkey,
]);

const Gfiles_select_column _$gfilesSelectColumnbucketId =
    const Gfiles_select_column._('bucketId');
const Gfiles_select_column _$gfilesSelectColumncreatedAt =
    const Gfiles_select_column._('createdAt');
const Gfiles_select_column _$gfilesSelectColumnetag =
    const Gfiles_select_column._('etag');
const Gfiles_select_column _$gfilesSelectColumnid =
    const Gfiles_select_column._('id');
const Gfiles_select_column _$gfilesSelectColumnisUploaded =
    const Gfiles_select_column._('isUploaded');
const Gfiles_select_column _$gfilesSelectColumnmimeType =
    const Gfiles_select_column._('mimeType');
const Gfiles_select_column _$gfilesSelectColumnGname =
    const Gfiles_select_column._('Gname');
const Gfiles_select_column _$gfilesSelectColumnsize =
    const Gfiles_select_column._('size');
const Gfiles_select_column _$gfilesSelectColumnupdatedAt =
    const Gfiles_select_column._('updatedAt');
const Gfiles_select_column _$gfilesSelectColumnuploadedByUserId =
    const Gfiles_select_column._('uploadedByUserId');

Gfiles_select_column _$gfilesSelectColumnValueOf(String name) {
  switch (name) {
    case 'bucketId':
      return _$gfilesSelectColumnbucketId;
    case 'createdAt':
      return _$gfilesSelectColumncreatedAt;
    case 'etag':
      return _$gfilesSelectColumnetag;
    case 'id':
      return _$gfilesSelectColumnid;
    case 'isUploaded':
      return _$gfilesSelectColumnisUploaded;
    case 'mimeType':
      return _$gfilesSelectColumnmimeType;
    case 'Gname':
      return _$gfilesSelectColumnGname;
    case 'size':
      return _$gfilesSelectColumnsize;
    case 'updatedAt':
      return _$gfilesSelectColumnupdatedAt;
    case 'uploadedByUserId':
      return _$gfilesSelectColumnuploadedByUserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gfiles_select_column> _$gfilesSelectColumnValues =
    new BuiltSet<Gfiles_select_column>(const <Gfiles_select_column>[
  _$gfilesSelectColumnbucketId,
  _$gfilesSelectColumncreatedAt,
  _$gfilesSelectColumnetag,
  _$gfilesSelectColumnid,
  _$gfilesSelectColumnisUploaded,
  _$gfilesSelectColumnmimeType,
  _$gfilesSelectColumnGname,
  _$gfilesSelectColumnsize,
  _$gfilesSelectColumnupdatedAt,
  _$gfilesSelectColumnuploadedByUserId,
]);

const Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
    _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsisUploaded =
    const Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
        ._('isUploaded');

Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
    _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsValueOf(
        String name) {
  switch (name) {
    case 'isUploaded':
      return _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsisUploaded;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<
        Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns>
    _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsValues =
    new BuiltSet<Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns>(const <
        Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns>[
  _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsisUploaded,
]);

const Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
    _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsisUploaded =
    const Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
        ._('isUploaded');

Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
    _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsValueOf(
        String name) {
  switch (name) {
    case 'isUploaded':
      return _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsisUploaded;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<
        Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns>
    _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsValues =
    new BuiltSet<Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns>(const <
        Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns>[
  _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsisUploaded,
]);

const Gfiles_update_column _$gfilesUpdateColumnbucketId =
    const Gfiles_update_column._('bucketId');
const Gfiles_update_column _$gfilesUpdateColumncreatedAt =
    const Gfiles_update_column._('createdAt');
const Gfiles_update_column _$gfilesUpdateColumnetag =
    const Gfiles_update_column._('etag');
const Gfiles_update_column _$gfilesUpdateColumnid =
    const Gfiles_update_column._('id');
const Gfiles_update_column _$gfilesUpdateColumnisUploaded =
    const Gfiles_update_column._('isUploaded');
const Gfiles_update_column _$gfilesUpdateColumnmimeType =
    const Gfiles_update_column._('mimeType');
const Gfiles_update_column _$gfilesUpdateColumnGname =
    const Gfiles_update_column._('Gname');
const Gfiles_update_column _$gfilesUpdateColumnsize =
    const Gfiles_update_column._('size');
const Gfiles_update_column _$gfilesUpdateColumnupdatedAt =
    const Gfiles_update_column._('updatedAt');
const Gfiles_update_column _$gfilesUpdateColumnuploadedByUserId =
    const Gfiles_update_column._('uploadedByUserId');

Gfiles_update_column _$gfilesUpdateColumnValueOf(String name) {
  switch (name) {
    case 'bucketId':
      return _$gfilesUpdateColumnbucketId;
    case 'createdAt':
      return _$gfilesUpdateColumncreatedAt;
    case 'etag':
      return _$gfilesUpdateColumnetag;
    case 'id':
      return _$gfilesUpdateColumnid;
    case 'isUploaded':
      return _$gfilesUpdateColumnisUploaded;
    case 'mimeType':
      return _$gfilesUpdateColumnmimeType;
    case 'Gname':
      return _$gfilesUpdateColumnGname;
    case 'size':
      return _$gfilesUpdateColumnsize;
    case 'updatedAt':
      return _$gfilesUpdateColumnupdatedAt;
    case 'uploadedByUserId':
      return _$gfilesUpdateColumnuploadedByUserId;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gfiles_update_column> _$gfilesUpdateColumnValues =
    new BuiltSet<Gfiles_update_column>(const <Gfiles_update_column>[
  _$gfilesUpdateColumnbucketId,
  _$gfilesUpdateColumncreatedAt,
  _$gfilesUpdateColumnetag,
  _$gfilesUpdateColumnid,
  _$gfilesUpdateColumnisUploaded,
  _$gfilesUpdateColumnmimeType,
  _$gfilesUpdateColumnGname,
  _$gfilesUpdateColumnsize,
  _$gfilesUpdateColumnupdatedAt,
  _$gfilesUpdateColumnuploadedByUserId,
]);

const Gorder_by _$gorderByasc = const Gorder_by._('asc');
const Gorder_by _$gorderByasc_nulls_first =
    const Gorder_by._('asc_nulls_first');
const Gorder_by _$gorderByasc_nulls_last = const Gorder_by._('asc_nulls_last');
const Gorder_by _$gorderBydesc = const Gorder_by._('desc');
const Gorder_by _$gorderBydesc_nulls_first =
    const Gorder_by._('desc_nulls_first');
const Gorder_by _$gorderBydesc_nulls_last =
    const Gorder_by._('desc_nulls_last');

Gorder_by _$gorderByValueOf(String name) {
  switch (name) {
    case 'asc':
      return _$gorderByasc;
    case 'asc_nulls_first':
      return _$gorderByasc_nulls_first;
    case 'asc_nulls_last':
      return _$gorderByasc_nulls_last;
    case 'desc':
      return _$gorderBydesc;
    case 'desc_nulls_first':
      return _$gorderBydesc_nulls_first;
    case 'desc_nulls_last':
      return _$gorderBydesc_nulls_last;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gorder_by> _$gorderByValues =
    new BuiltSet<Gorder_by>(const <Gorder_by>[
  _$gorderByasc,
  _$gorderByasc_nulls_first,
  _$gorderByasc_nulls_last,
  _$gorderBydesc,
  _$gorderBydesc_nulls_first,
  _$gorderBydesc_nulls_last,
]);

const Guser_articles_constraint _$guserArticlesConstraintuser_articles_pkey =
    const Guser_articles_constraint._('user_articles_pkey');

Guser_articles_constraint _$guserArticlesConstraintValueOf(String name) {
  switch (name) {
    case 'user_articles_pkey':
      return _$guserArticlesConstraintuser_articles_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Guser_articles_constraint> _$guserArticlesConstraintValues =
    new BuiltSet<Guser_articles_constraint>(const <Guser_articles_constraint>[
  _$guserArticlesConstraintuser_articles_pkey,
]);

const Guser_articles_select_column _$guserArticlesSelectColumnarticle_id =
    const Guser_articles_select_column._('article_id');
const Guser_articles_select_column _$guserArticlesSelectColumncreated_at =
    const Guser_articles_select_column._('created_at');
const Guser_articles_select_column _$guserArticlesSelectColumncreated_by =
    const Guser_articles_select_column._('created_by');
const Guser_articles_select_column _$guserArticlesSelectColumndeleted_at =
    const Guser_articles_select_column._('deleted_at');
const Guser_articles_select_column _$guserArticlesSelectColumnid =
    const Guser_articles_select_column._('id');
const Guser_articles_select_column _$guserArticlesSelectColumnplay_at =
    const Guser_articles_select_column._('play_at');
const Guser_articles_select_column _$guserArticlesSelectColumnupdated_at =
    const Guser_articles_select_column._('updated_at');
const Guser_articles_select_column _$guserArticlesSelectColumnupdated_by =
    const Guser_articles_select_column._('updated_by');
const Guser_articles_select_column _$guserArticlesSelectColumnuser_id =
    const Guser_articles_select_column._('user_id');

Guser_articles_select_column _$guserArticlesSelectColumnValueOf(String name) {
  switch (name) {
    case 'article_id':
      return _$guserArticlesSelectColumnarticle_id;
    case 'created_at':
      return _$guserArticlesSelectColumncreated_at;
    case 'created_by':
      return _$guserArticlesSelectColumncreated_by;
    case 'deleted_at':
      return _$guserArticlesSelectColumndeleted_at;
    case 'id':
      return _$guserArticlesSelectColumnid;
    case 'play_at':
      return _$guserArticlesSelectColumnplay_at;
    case 'updated_at':
      return _$guserArticlesSelectColumnupdated_at;
    case 'updated_by':
      return _$guserArticlesSelectColumnupdated_by;
    case 'user_id':
      return _$guserArticlesSelectColumnuser_id;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Guser_articles_select_column> _$guserArticlesSelectColumnValues =
    new BuiltSet<Guser_articles_select_column>(const <
        Guser_articles_select_column>[
  _$guserArticlesSelectColumnarticle_id,
  _$guserArticlesSelectColumncreated_at,
  _$guserArticlesSelectColumncreated_by,
  _$guserArticlesSelectColumndeleted_at,
  _$guserArticlesSelectColumnid,
  _$guserArticlesSelectColumnplay_at,
  _$guserArticlesSelectColumnupdated_at,
  _$guserArticlesSelectColumnupdated_by,
  _$guserArticlesSelectColumnuser_id,
]);

const Guser_articles_update_column _$guserArticlesUpdateColumnarticle_id =
    const Guser_articles_update_column._('article_id');
const Guser_articles_update_column _$guserArticlesUpdateColumncreated_at =
    const Guser_articles_update_column._('created_at');
const Guser_articles_update_column _$guserArticlesUpdateColumncreated_by =
    const Guser_articles_update_column._('created_by');
const Guser_articles_update_column _$guserArticlesUpdateColumndeleted_at =
    const Guser_articles_update_column._('deleted_at');
const Guser_articles_update_column _$guserArticlesUpdateColumnid =
    const Guser_articles_update_column._('id');
const Guser_articles_update_column _$guserArticlesUpdateColumnplay_at =
    const Guser_articles_update_column._('play_at');
const Guser_articles_update_column _$guserArticlesUpdateColumnupdated_at =
    const Guser_articles_update_column._('updated_at');
const Guser_articles_update_column _$guserArticlesUpdateColumnupdated_by =
    const Guser_articles_update_column._('updated_by');
const Guser_articles_update_column _$guserArticlesUpdateColumnuser_id =
    const Guser_articles_update_column._('user_id');

Guser_articles_update_column _$guserArticlesUpdateColumnValueOf(String name) {
  switch (name) {
    case 'article_id':
      return _$guserArticlesUpdateColumnarticle_id;
    case 'created_at':
      return _$guserArticlesUpdateColumncreated_at;
    case 'created_by':
      return _$guserArticlesUpdateColumncreated_by;
    case 'deleted_at':
      return _$guserArticlesUpdateColumndeleted_at;
    case 'id':
      return _$guserArticlesUpdateColumnid;
    case 'play_at':
      return _$guserArticlesUpdateColumnplay_at;
    case 'updated_at':
      return _$guserArticlesUpdateColumnupdated_at;
    case 'updated_by':
      return _$guserArticlesUpdateColumnupdated_by;
    case 'user_id':
      return _$guserArticlesUpdateColumnuser_id;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Guser_articles_update_column> _$guserArticlesUpdateColumnValues =
    new BuiltSet<Guser_articles_update_column>(const <
        Guser_articles_update_column>[
  _$guserArticlesUpdateColumnarticle_id,
  _$guserArticlesUpdateColumncreated_at,
  _$guserArticlesUpdateColumncreated_by,
  _$guserArticlesUpdateColumndeleted_at,
  _$guserArticlesUpdateColumnid,
  _$guserArticlesUpdateColumnplay_at,
  _$guserArticlesUpdateColumnupdated_at,
  _$guserArticlesUpdateColumnupdated_by,
  _$guserArticlesUpdateColumnuser_id,
]);

const Gusers_constraint _$gusersConstraintusers_email_key =
    const Gusers_constraint._('users_email_key');
const Gusers_constraint _$gusersConstraintusers_phone_number_key =
    const Gusers_constraint._('users_phone_number_key');
const Gusers_constraint _$gusersConstraintusers_pkey =
    const Gusers_constraint._('users_pkey');

Gusers_constraint _$gusersConstraintValueOf(String name) {
  switch (name) {
    case 'users_email_key':
      return _$gusersConstraintusers_email_key;
    case 'users_phone_number_key':
      return _$gusersConstraintusers_phone_number_key;
    case 'users_pkey':
      return _$gusersConstraintusers_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gusers_constraint> _$gusersConstraintValues =
    new BuiltSet<Gusers_constraint>(const <Gusers_constraint>[
  _$gusersConstraintusers_email_key,
  _$gusersConstraintusers_phone_number_key,
  _$gusersConstraintusers_pkey,
]);

const Gusers_select_column _$gusersSelectColumnactiveMfaType =
    const Gusers_select_column._('activeMfaType');
const Gusers_select_column _$gusersSelectColumnavatarUrl =
    const Gusers_select_column._('avatarUrl');
const Gusers_select_column _$gusersSelectColumncreatedAt =
    const Gusers_select_column._('createdAt');
const Gusers_select_column _$gusersSelectColumncurrentChallenge =
    const Gusers_select_column._('currentChallenge');
const Gusers_select_column _$gusersSelectColumndefaultRole =
    const Gusers_select_column._('defaultRole');
const Gusers_select_column _$gusersSelectColumndisabled =
    const Gusers_select_column._('disabled');
const Gusers_select_column _$gusersSelectColumndisplayName =
    const Gusers_select_column._('displayName');
const Gusers_select_column _$gusersSelectColumnemail =
    const Gusers_select_column._('email');
const Gusers_select_column _$gusersSelectColumnemailVerified =
    const Gusers_select_column._('emailVerified');
const Gusers_select_column _$gusersSelectColumnid =
    const Gusers_select_column._('id');
const Gusers_select_column _$gusersSelectColumnisAnonymous =
    const Gusers_select_column._('isAnonymous');
const Gusers_select_column _$gusersSelectColumnlastSeen =
    const Gusers_select_column._('lastSeen');
const Gusers_select_column _$gusersSelectColumnlocale =
    const Gusers_select_column._('locale');
const Gusers_select_column _$gusersSelectColumnmetadata =
    const Gusers_select_column._('metadata');
const Gusers_select_column _$gusersSelectColumnnewEmail =
    const Gusers_select_column._('newEmail');
const Gusers_select_column _$gusersSelectColumnotpHash =
    const Gusers_select_column._('otpHash');
const Gusers_select_column _$gusersSelectColumnotpHashExpiresAt =
    const Gusers_select_column._('otpHashExpiresAt');
const Gusers_select_column _$gusersSelectColumnotpMethodLastUsed =
    const Gusers_select_column._('otpMethodLastUsed');
const Gusers_select_column _$gusersSelectColumnpasswordHash =
    const Gusers_select_column._('passwordHash');
const Gusers_select_column _$gusersSelectColumnphoneNumber =
    const Gusers_select_column._('phoneNumber');
const Gusers_select_column _$gusersSelectColumnphoneNumberVerified =
    const Gusers_select_column._('phoneNumberVerified');
const Gusers_select_column _$gusersSelectColumnticket =
    const Gusers_select_column._('ticket');
const Gusers_select_column _$gusersSelectColumnticketExpiresAt =
    const Gusers_select_column._('ticketExpiresAt');
const Gusers_select_column _$gusersSelectColumntotpSecret =
    const Gusers_select_column._('totpSecret');
const Gusers_select_column _$gusersSelectColumnupdatedAt =
    const Gusers_select_column._('updatedAt');

Gusers_select_column _$gusersSelectColumnValueOf(String name) {
  switch (name) {
    case 'activeMfaType':
      return _$gusersSelectColumnactiveMfaType;
    case 'avatarUrl':
      return _$gusersSelectColumnavatarUrl;
    case 'createdAt':
      return _$gusersSelectColumncreatedAt;
    case 'currentChallenge':
      return _$gusersSelectColumncurrentChallenge;
    case 'defaultRole':
      return _$gusersSelectColumndefaultRole;
    case 'disabled':
      return _$gusersSelectColumndisabled;
    case 'displayName':
      return _$gusersSelectColumndisplayName;
    case 'email':
      return _$gusersSelectColumnemail;
    case 'emailVerified':
      return _$gusersSelectColumnemailVerified;
    case 'id':
      return _$gusersSelectColumnid;
    case 'isAnonymous':
      return _$gusersSelectColumnisAnonymous;
    case 'lastSeen':
      return _$gusersSelectColumnlastSeen;
    case 'locale':
      return _$gusersSelectColumnlocale;
    case 'metadata':
      return _$gusersSelectColumnmetadata;
    case 'newEmail':
      return _$gusersSelectColumnnewEmail;
    case 'otpHash':
      return _$gusersSelectColumnotpHash;
    case 'otpHashExpiresAt':
      return _$gusersSelectColumnotpHashExpiresAt;
    case 'otpMethodLastUsed':
      return _$gusersSelectColumnotpMethodLastUsed;
    case 'passwordHash':
      return _$gusersSelectColumnpasswordHash;
    case 'phoneNumber':
      return _$gusersSelectColumnphoneNumber;
    case 'phoneNumberVerified':
      return _$gusersSelectColumnphoneNumberVerified;
    case 'ticket':
      return _$gusersSelectColumnticket;
    case 'ticketExpiresAt':
      return _$gusersSelectColumnticketExpiresAt;
    case 'totpSecret':
      return _$gusersSelectColumntotpSecret;
    case 'updatedAt':
      return _$gusersSelectColumnupdatedAt;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gusers_select_column> _$gusersSelectColumnValues =
    new BuiltSet<Gusers_select_column>(const <Gusers_select_column>[
  _$gusersSelectColumnactiveMfaType,
  _$gusersSelectColumnavatarUrl,
  _$gusersSelectColumncreatedAt,
  _$gusersSelectColumncurrentChallenge,
  _$gusersSelectColumndefaultRole,
  _$gusersSelectColumndisabled,
  _$gusersSelectColumndisplayName,
  _$gusersSelectColumnemail,
  _$gusersSelectColumnemailVerified,
  _$gusersSelectColumnid,
  _$gusersSelectColumnisAnonymous,
  _$gusersSelectColumnlastSeen,
  _$gusersSelectColumnlocale,
  _$gusersSelectColumnmetadata,
  _$gusersSelectColumnnewEmail,
  _$gusersSelectColumnotpHash,
  _$gusersSelectColumnotpHashExpiresAt,
  _$gusersSelectColumnotpMethodLastUsed,
  _$gusersSelectColumnpasswordHash,
  _$gusersSelectColumnphoneNumber,
  _$gusersSelectColumnphoneNumberVerified,
  _$gusersSelectColumnticket,
  _$gusersSelectColumnticketExpiresAt,
  _$gusersSelectColumntotpSecret,
  _$gusersSelectColumnupdatedAt,
]);

const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsdisabled =
    const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
        ._('disabled');
const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsemailVerified =
    const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
        ._('emailVerified');
const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsisAnonymous =
    const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
        ._('isAnonymous');
const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsphoneNumberVerified =
    const Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
        ._('phoneNumberVerified');

Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsValueOf(
        String name) {
  switch (name) {
    case 'disabled':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsdisabled;
    case 'emailVerified':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsemailVerified;
    case 'isAnonymous':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsisAnonymous;
    case 'phoneNumberVerified':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsphoneNumberVerified;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<
        Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns>
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsValues =
    new BuiltSet<Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns>(const <
        Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns>[
  _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsdisabled,
  _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsemailVerified,
  _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsisAnonymous,
  _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsphoneNumberVerified,
]);

const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsdisabled =
    const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
        ._('disabled');
const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsemailVerified =
    const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
        ._('emailVerified');
const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsisAnonymous =
    const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
        ._('isAnonymous');
const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsphoneNumberVerified =
    const Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
        ._('phoneNumberVerified');

Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsValueOf(
        String name) {
  switch (name) {
    case 'disabled':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsdisabled;
    case 'emailVerified':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsemailVerified;
    case 'isAnonymous':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsisAnonymous;
    case 'phoneNumberVerified':
      return _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsphoneNumberVerified;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<
        Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns>
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsValues =
    new BuiltSet<Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns>(const <
        Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns>[
  _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsdisabled,
  _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsemailVerified,
  _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsisAnonymous,
  _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsphoneNumberVerified,
]);

const Gusers_update_column _$gusersUpdateColumnactiveMfaType =
    const Gusers_update_column._('activeMfaType');
const Gusers_update_column _$gusersUpdateColumnavatarUrl =
    const Gusers_update_column._('avatarUrl');
const Gusers_update_column _$gusersUpdateColumncreatedAt =
    const Gusers_update_column._('createdAt');
const Gusers_update_column _$gusersUpdateColumncurrentChallenge =
    const Gusers_update_column._('currentChallenge');
const Gusers_update_column _$gusersUpdateColumndefaultRole =
    const Gusers_update_column._('defaultRole');
const Gusers_update_column _$gusersUpdateColumndisabled =
    const Gusers_update_column._('disabled');
const Gusers_update_column _$gusersUpdateColumndisplayName =
    const Gusers_update_column._('displayName');
const Gusers_update_column _$gusersUpdateColumnemail =
    const Gusers_update_column._('email');
const Gusers_update_column _$gusersUpdateColumnemailVerified =
    const Gusers_update_column._('emailVerified');
const Gusers_update_column _$gusersUpdateColumnid =
    const Gusers_update_column._('id');
const Gusers_update_column _$gusersUpdateColumnisAnonymous =
    const Gusers_update_column._('isAnonymous');
const Gusers_update_column _$gusersUpdateColumnlastSeen =
    const Gusers_update_column._('lastSeen');
const Gusers_update_column _$gusersUpdateColumnlocale =
    const Gusers_update_column._('locale');
const Gusers_update_column _$gusersUpdateColumnmetadata =
    const Gusers_update_column._('metadata');
const Gusers_update_column _$gusersUpdateColumnnewEmail =
    const Gusers_update_column._('newEmail');
const Gusers_update_column _$gusersUpdateColumnotpHash =
    const Gusers_update_column._('otpHash');
const Gusers_update_column _$gusersUpdateColumnotpHashExpiresAt =
    const Gusers_update_column._('otpHashExpiresAt');
const Gusers_update_column _$gusersUpdateColumnotpMethodLastUsed =
    const Gusers_update_column._('otpMethodLastUsed');
const Gusers_update_column _$gusersUpdateColumnpasswordHash =
    const Gusers_update_column._('passwordHash');
const Gusers_update_column _$gusersUpdateColumnphoneNumber =
    const Gusers_update_column._('phoneNumber');
const Gusers_update_column _$gusersUpdateColumnphoneNumberVerified =
    const Gusers_update_column._('phoneNumberVerified');
const Gusers_update_column _$gusersUpdateColumnticket =
    const Gusers_update_column._('ticket');
const Gusers_update_column _$gusersUpdateColumnticketExpiresAt =
    const Gusers_update_column._('ticketExpiresAt');
const Gusers_update_column _$gusersUpdateColumntotpSecret =
    const Gusers_update_column._('totpSecret');
const Gusers_update_column _$gusersUpdateColumnupdatedAt =
    const Gusers_update_column._('updatedAt');

Gusers_update_column _$gusersUpdateColumnValueOf(String name) {
  switch (name) {
    case 'activeMfaType':
      return _$gusersUpdateColumnactiveMfaType;
    case 'avatarUrl':
      return _$gusersUpdateColumnavatarUrl;
    case 'createdAt':
      return _$gusersUpdateColumncreatedAt;
    case 'currentChallenge':
      return _$gusersUpdateColumncurrentChallenge;
    case 'defaultRole':
      return _$gusersUpdateColumndefaultRole;
    case 'disabled':
      return _$gusersUpdateColumndisabled;
    case 'displayName':
      return _$gusersUpdateColumndisplayName;
    case 'email':
      return _$gusersUpdateColumnemail;
    case 'emailVerified':
      return _$gusersUpdateColumnemailVerified;
    case 'id':
      return _$gusersUpdateColumnid;
    case 'isAnonymous':
      return _$gusersUpdateColumnisAnonymous;
    case 'lastSeen':
      return _$gusersUpdateColumnlastSeen;
    case 'locale':
      return _$gusersUpdateColumnlocale;
    case 'metadata':
      return _$gusersUpdateColumnmetadata;
    case 'newEmail':
      return _$gusersUpdateColumnnewEmail;
    case 'otpHash':
      return _$gusersUpdateColumnotpHash;
    case 'otpHashExpiresAt':
      return _$gusersUpdateColumnotpHashExpiresAt;
    case 'otpMethodLastUsed':
      return _$gusersUpdateColumnotpMethodLastUsed;
    case 'passwordHash':
      return _$gusersUpdateColumnpasswordHash;
    case 'phoneNumber':
      return _$gusersUpdateColumnphoneNumber;
    case 'phoneNumberVerified':
      return _$gusersUpdateColumnphoneNumberVerified;
    case 'ticket':
      return _$gusersUpdateColumnticket;
    case 'ticketExpiresAt':
      return _$gusersUpdateColumnticketExpiresAt;
    case 'totpSecret':
      return _$gusersUpdateColumntotpSecret;
    case 'updatedAt':
      return _$gusersUpdateColumnupdatedAt;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gusers_update_column> _$gusersUpdateColumnValues =
    new BuiltSet<Gusers_update_column>(const <Gusers_update_column>[
  _$gusersUpdateColumnactiveMfaType,
  _$gusersUpdateColumnavatarUrl,
  _$gusersUpdateColumncreatedAt,
  _$gusersUpdateColumncurrentChallenge,
  _$gusersUpdateColumndefaultRole,
  _$gusersUpdateColumndisabled,
  _$gusersUpdateColumndisplayName,
  _$gusersUpdateColumnemail,
  _$gusersUpdateColumnemailVerified,
  _$gusersUpdateColumnid,
  _$gusersUpdateColumnisAnonymous,
  _$gusersUpdateColumnlastSeen,
  _$gusersUpdateColumnlocale,
  _$gusersUpdateColumnmetadata,
  _$gusersUpdateColumnnewEmail,
  _$gusersUpdateColumnotpHash,
  _$gusersUpdateColumnotpHashExpiresAt,
  _$gusersUpdateColumnotpMethodLastUsed,
  _$gusersUpdateColumnpasswordHash,
  _$gusersUpdateColumnphoneNumber,
  _$gusersUpdateColumnphoneNumberVerified,
  _$gusersUpdateColumnticket,
  _$gusersUpdateColumnticketExpiresAt,
  _$gusersUpdateColumntotpSecret,
  _$gusersUpdateColumnupdatedAt,
]);

const Gwords_constraint _$gwordsConstraintwords_pkey =
    const Gwords_constraint._('words_pkey');

Gwords_constraint _$gwordsConstraintValueOf(String name) {
  switch (name) {
    case 'words_pkey':
      return _$gwordsConstraintwords_pkey;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gwords_constraint> _$gwordsConstraintValues =
    new BuiltSet<Gwords_constraint>(const <Gwords_constraint>[
  _$gwordsConstraintwords_pkey,
]);

const Gwords_select_column _$gwordsSelectColumncreated_at =
    const Gwords_select_column._('created_at');
const Gwords_select_column _$gwordsSelectColumncreated_by =
    const Gwords_select_column._('created_by');
const Gwords_select_column _$gwordsSelectColumndeleted_at =
    const Gwords_select_column._('deleted_at');
const Gwords_select_column _$gwordsSelectColumnid =
    const Gwords_select_column._('id');
const Gwords_select_column _$gwordsSelectColumnis_done =
    const Gwords_select_column._('is_done');
const Gwords_select_column _$gwordsSelectColumntimes =
    const Gwords_select_column._('times');
const Gwords_select_column _$gwordsSelectColumnupdated_at =
    const Gwords_select_column._('updated_at');
const Gwords_select_column _$gwordsSelectColumnupdated_by =
    const Gwords_select_column._('updated_by');
const Gwords_select_column _$gwordsSelectColumnword =
    const Gwords_select_column._('word');

Gwords_select_column _$gwordsSelectColumnValueOf(String name) {
  switch (name) {
    case 'created_at':
      return _$gwordsSelectColumncreated_at;
    case 'created_by':
      return _$gwordsSelectColumncreated_by;
    case 'deleted_at':
      return _$gwordsSelectColumndeleted_at;
    case 'id':
      return _$gwordsSelectColumnid;
    case 'is_done':
      return _$gwordsSelectColumnis_done;
    case 'times':
      return _$gwordsSelectColumntimes;
    case 'updated_at':
      return _$gwordsSelectColumnupdated_at;
    case 'updated_by':
      return _$gwordsSelectColumnupdated_by;
    case 'word':
      return _$gwordsSelectColumnword;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gwords_select_column> _$gwordsSelectColumnValues =
    new BuiltSet<Gwords_select_column>(const <Gwords_select_column>[
  _$gwordsSelectColumncreated_at,
  _$gwordsSelectColumncreated_by,
  _$gwordsSelectColumndeleted_at,
  _$gwordsSelectColumnid,
  _$gwordsSelectColumnis_done,
  _$gwordsSelectColumntimes,
  _$gwordsSelectColumnupdated_at,
  _$gwordsSelectColumnupdated_by,
  _$gwordsSelectColumnword,
]);

const Gwords_update_column _$gwordsUpdateColumncreated_at =
    const Gwords_update_column._('created_at');
const Gwords_update_column _$gwordsUpdateColumncreated_by =
    const Gwords_update_column._('created_by');
const Gwords_update_column _$gwordsUpdateColumndeleted_at =
    const Gwords_update_column._('deleted_at');
const Gwords_update_column _$gwordsUpdateColumnid =
    const Gwords_update_column._('id');
const Gwords_update_column _$gwordsUpdateColumnis_done =
    const Gwords_update_column._('is_done');
const Gwords_update_column _$gwordsUpdateColumntimes =
    const Gwords_update_column._('times');
const Gwords_update_column _$gwordsUpdateColumnupdated_at =
    const Gwords_update_column._('updated_at');
const Gwords_update_column _$gwordsUpdateColumnupdated_by =
    const Gwords_update_column._('updated_by');
const Gwords_update_column _$gwordsUpdateColumnword =
    const Gwords_update_column._('word');

Gwords_update_column _$gwordsUpdateColumnValueOf(String name) {
  switch (name) {
    case 'created_at':
      return _$gwordsUpdateColumncreated_at;
    case 'created_by':
      return _$gwordsUpdateColumncreated_by;
    case 'deleted_at':
      return _$gwordsUpdateColumndeleted_at;
    case 'id':
      return _$gwordsUpdateColumnid;
    case 'is_done':
      return _$gwordsUpdateColumnis_done;
    case 'times':
      return _$gwordsUpdateColumntimes;
    case 'updated_at':
      return _$gwordsUpdateColumnupdated_at;
    case 'updated_by':
      return _$gwordsUpdateColumnupdated_by;
    case 'word':
      return _$gwordsUpdateColumnword;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<Gwords_update_column> _$gwordsUpdateColumnValues =
    new BuiltSet<Gwords_update_column>(const <Gwords_update_column>[
  _$gwordsUpdateColumncreated_at,
  _$gwordsUpdateColumncreated_by,
  _$gwordsUpdateColumndeleted_at,
  _$gwordsUpdateColumnid,
  _$gwordsUpdateColumnis_done,
  _$gwordsUpdateColumntimes,
  _$gwordsUpdateColumnupdated_at,
  _$gwordsUpdateColumnupdated_by,
  _$gwordsUpdateColumnword,
]);

Serializer<GBoolean_comparison_exp> _$gBooleanComparisonExpSerializer =
    new _$GBoolean_comparison_expSerializer();
Serializer<GInt_comparison_exp> _$gIntComparisonExpSerializer =
    new _$GInt_comparison_expSerializer();
Serializer<GString_comparison_exp> _$gStringComparisonExpSerializer =
    new _$GString_comparison_expSerializer();
Serializer<Garticles_append_input> _$garticlesAppendInputSerializer =
    new _$Garticles_append_inputSerializer();
Serializer<Garticles_bool_exp> _$garticlesBoolExpSerializer =
    new _$Garticles_bool_expSerializer();
Serializer<Garticles_constraint> _$garticlesConstraintSerializer =
    new _$Garticles_constraintSerializer();
Serializer<Garticles_delete_at_path_input>
    _$garticlesDeleteAtPathInputSerializer =
    new _$Garticles_delete_at_path_inputSerializer();
Serializer<Garticles_delete_elem_input> _$garticlesDeleteElemInputSerializer =
    new _$Garticles_delete_elem_inputSerializer();
Serializer<Garticles_delete_key_input> _$garticlesDeleteKeyInputSerializer =
    new _$Garticles_delete_key_inputSerializer();
Serializer<Garticles_insert_input> _$garticlesInsertInputSerializer =
    new _$Garticles_insert_inputSerializer();
Serializer<Garticles_on_conflict> _$garticlesOnConflictSerializer =
    new _$Garticles_on_conflictSerializer();
Serializer<Garticles_order_by> _$garticlesOrderBySerializer =
    new _$Garticles_order_bySerializer();
Serializer<Garticles_pk_columns_input> _$garticlesPkColumnsInputSerializer =
    new _$Garticles_pk_columns_inputSerializer();
Serializer<Garticles_prepend_input> _$garticlesPrependInputSerializer =
    new _$Garticles_prepend_inputSerializer();
Serializer<Garticles_select_column> _$garticlesSelectColumnSerializer =
    new _$Garticles_select_columnSerializer();
Serializer<Garticles_set_input> _$garticlesSetInputSerializer =
    new _$Garticles_set_inputSerializer();
Serializer<Garticles_stream_cursor_input>
    _$garticlesStreamCursorInputSerializer =
    new _$Garticles_stream_cursor_inputSerializer();
Serializer<Garticles_stream_cursor_value_input>
    _$garticlesStreamCursorValueInputSerializer =
    new _$Garticles_stream_cursor_value_inputSerializer();
Serializer<Garticles_update_column> _$garticlesUpdateColumnSerializer =
    new _$Garticles_update_columnSerializer();
Serializer<Garticles_updates> _$garticlesUpdatesSerializer =
    new _$Garticles_updatesSerializer();
Serializer<GauthProviderRequests_append_input>
    _$gauthProviderRequestsAppendInputSerializer =
    new _$GauthProviderRequests_append_inputSerializer();
Serializer<GauthProviderRequests_bool_exp>
    _$gauthProviderRequestsBoolExpSerializer =
    new _$GauthProviderRequests_bool_expSerializer();
Serializer<GauthProviderRequests_constraint>
    _$gauthProviderRequestsConstraintSerializer =
    new _$GauthProviderRequests_constraintSerializer();
Serializer<GauthProviderRequests_delete_at_path_input>
    _$gauthProviderRequestsDeleteAtPathInputSerializer =
    new _$GauthProviderRequests_delete_at_path_inputSerializer();
Serializer<GauthProviderRequests_delete_elem_input>
    _$gauthProviderRequestsDeleteElemInputSerializer =
    new _$GauthProviderRequests_delete_elem_inputSerializer();
Serializer<GauthProviderRequests_delete_key_input>
    _$gauthProviderRequestsDeleteKeyInputSerializer =
    new _$GauthProviderRequests_delete_key_inputSerializer();
Serializer<GauthProviderRequests_insert_input>
    _$gauthProviderRequestsInsertInputSerializer =
    new _$GauthProviderRequests_insert_inputSerializer();
Serializer<GauthProviderRequests_on_conflict>
    _$gauthProviderRequestsOnConflictSerializer =
    new _$GauthProviderRequests_on_conflictSerializer();
Serializer<GauthProviderRequests_order_by>
    _$gauthProviderRequestsOrderBySerializer =
    new _$GauthProviderRequests_order_bySerializer();
Serializer<GauthProviderRequests_pk_columns_input>
    _$gauthProviderRequestsPkColumnsInputSerializer =
    new _$GauthProviderRequests_pk_columns_inputSerializer();
Serializer<GauthProviderRequests_prepend_input>
    _$gauthProviderRequestsPrependInputSerializer =
    new _$GauthProviderRequests_prepend_inputSerializer();
Serializer<GauthProviderRequests_select_column>
    _$gauthProviderRequestsSelectColumnSerializer =
    new _$GauthProviderRequests_select_columnSerializer();
Serializer<GauthProviderRequests_set_input>
    _$gauthProviderRequestsSetInputSerializer =
    new _$GauthProviderRequests_set_inputSerializer();
Serializer<GauthProviderRequests_stream_cursor_input>
    _$gauthProviderRequestsStreamCursorInputSerializer =
    new _$GauthProviderRequests_stream_cursor_inputSerializer();
Serializer<GauthProviderRequests_stream_cursor_value_input>
    _$gauthProviderRequestsStreamCursorValueInputSerializer =
    new _$GauthProviderRequests_stream_cursor_value_inputSerializer();
Serializer<GauthProviderRequests_update_column>
    _$gauthProviderRequestsUpdateColumnSerializer =
    new _$GauthProviderRequests_update_columnSerializer();
Serializer<GauthProviderRequests_updates>
    _$gauthProviderRequestsUpdatesSerializer =
    new _$GauthProviderRequests_updatesSerializer();
Serializer<GauthProviders_bool_exp> _$gauthProvidersBoolExpSerializer =
    new _$GauthProviders_bool_expSerializer();
Serializer<GauthProviders_constraint> _$gauthProvidersConstraintSerializer =
    new _$GauthProviders_constraintSerializer();
Serializer<GauthProviders_insert_input> _$gauthProvidersInsertInputSerializer =
    new _$GauthProviders_insert_inputSerializer();
Serializer<GauthProviders_obj_rel_insert_input>
    _$gauthProvidersObjRelInsertInputSerializer =
    new _$GauthProviders_obj_rel_insert_inputSerializer();
Serializer<GauthProviders_on_conflict> _$gauthProvidersOnConflictSerializer =
    new _$GauthProviders_on_conflictSerializer();
Serializer<GauthProviders_order_by> _$gauthProvidersOrderBySerializer =
    new _$GauthProviders_order_bySerializer();
Serializer<GauthProviders_pk_columns_input>
    _$gauthProvidersPkColumnsInputSerializer =
    new _$GauthProviders_pk_columns_inputSerializer();
Serializer<GauthProviders_select_column>
    _$gauthProvidersSelectColumnSerializer =
    new _$GauthProviders_select_columnSerializer();
Serializer<GauthProviders_set_input> _$gauthProvidersSetInputSerializer =
    new _$GauthProviders_set_inputSerializer();
Serializer<GauthProviders_stream_cursor_input>
    _$gauthProvidersStreamCursorInputSerializer =
    new _$GauthProviders_stream_cursor_inputSerializer();
Serializer<GauthProviders_stream_cursor_value_input>
    _$gauthProvidersStreamCursorValueInputSerializer =
    new _$GauthProviders_stream_cursor_value_inputSerializer();
Serializer<GauthProviders_update_column>
    _$gauthProvidersUpdateColumnSerializer =
    new _$GauthProviders_update_columnSerializer();
Serializer<GauthProviders_updates> _$gauthProvidersUpdatesSerializer =
    new _$GauthProviders_updatesSerializer();
Serializer<GauthRefreshTokens_aggregate_bool_exp>
    _$gauthRefreshTokensAggregateBoolExpSerializer =
    new _$GauthRefreshTokens_aggregate_bool_expSerializer();
Serializer<GauthRefreshTokens_aggregate_bool_exp_count>
    _$gauthRefreshTokensAggregateBoolExpCountSerializer =
    new _$GauthRefreshTokens_aggregate_bool_exp_countSerializer();
Serializer<GauthRefreshTokens_aggregate_order_by>
    _$gauthRefreshTokensAggregateOrderBySerializer =
    new _$GauthRefreshTokens_aggregate_order_bySerializer();
Serializer<GauthRefreshTokens_arr_rel_insert_input>
    _$gauthRefreshTokensArrRelInsertInputSerializer =
    new _$GauthRefreshTokens_arr_rel_insert_inputSerializer();
Serializer<GauthRefreshTokens_bool_exp> _$gauthRefreshTokensBoolExpSerializer =
    new _$GauthRefreshTokens_bool_expSerializer();
Serializer<GauthRefreshTokens_constraint>
    _$gauthRefreshTokensConstraintSerializer =
    new _$GauthRefreshTokens_constraintSerializer();
Serializer<GauthRefreshTokens_insert_input>
    _$gauthRefreshTokensInsertInputSerializer =
    new _$GauthRefreshTokens_insert_inputSerializer();
Serializer<GauthRefreshTokens_max_order_by>
    _$gauthRefreshTokensMaxOrderBySerializer =
    new _$GauthRefreshTokens_max_order_bySerializer();
Serializer<GauthRefreshTokens_min_order_by>
    _$gauthRefreshTokensMinOrderBySerializer =
    new _$GauthRefreshTokens_min_order_bySerializer();
Serializer<GauthRefreshTokens_on_conflict>
    _$gauthRefreshTokensOnConflictSerializer =
    new _$GauthRefreshTokens_on_conflictSerializer();
Serializer<GauthRefreshTokens_order_by> _$gauthRefreshTokensOrderBySerializer =
    new _$GauthRefreshTokens_order_bySerializer();
Serializer<GauthRefreshTokens_pk_columns_input>
    _$gauthRefreshTokensPkColumnsInputSerializer =
    new _$GauthRefreshTokens_pk_columns_inputSerializer();
Serializer<GauthRefreshTokens_select_column>
    _$gauthRefreshTokensSelectColumnSerializer =
    new _$GauthRefreshTokens_select_columnSerializer();
Serializer<GauthRefreshTokens_set_input>
    _$gauthRefreshTokensSetInputSerializer =
    new _$GauthRefreshTokens_set_inputSerializer();
Serializer<GauthRefreshTokens_stream_cursor_input>
    _$gauthRefreshTokensStreamCursorInputSerializer =
    new _$GauthRefreshTokens_stream_cursor_inputSerializer();
Serializer<GauthRefreshTokens_stream_cursor_value_input>
    _$gauthRefreshTokensStreamCursorValueInputSerializer =
    new _$GauthRefreshTokens_stream_cursor_value_inputSerializer();
Serializer<GauthRefreshTokens_update_column>
    _$gauthRefreshTokensUpdateColumnSerializer =
    new _$GauthRefreshTokens_update_columnSerializer();
Serializer<GauthRefreshTokens_updates> _$gauthRefreshTokensUpdatesSerializer =
    new _$GauthRefreshTokens_updatesSerializer();
Serializer<GauthRoles_bool_exp> _$gauthRolesBoolExpSerializer =
    new _$GauthRoles_bool_expSerializer();
Serializer<GauthRoles_constraint> _$gauthRolesConstraintSerializer =
    new _$GauthRoles_constraintSerializer();
Serializer<GauthRoles_insert_input> _$gauthRolesInsertInputSerializer =
    new _$GauthRoles_insert_inputSerializer();
Serializer<GauthRoles_obj_rel_insert_input>
    _$gauthRolesObjRelInsertInputSerializer =
    new _$GauthRoles_obj_rel_insert_inputSerializer();
Serializer<GauthRoles_on_conflict> _$gauthRolesOnConflictSerializer =
    new _$GauthRoles_on_conflictSerializer();
Serializer<GauthRoles_order_by> _$gauthRolesOrderBySerializer =
    new _$GauthRoles_order_bySerializer();
Serializer<GauthRoles_pk_columns_input> _$gauthRolesPkColumnsInputSerializer =
    new _$GauthRoles_pk_columns_inputSerializer();
Serializer<GauthRoles_select_column> _$gauthRolesSelectColumnSerializer =
    new _$GauthRoles_select_columnSerializer();
Serializer<GauthRoles_set_input> _$gauthRolesSetInputSerializer =
    new _$GauthRoles_set_inputSerializer();
Serializer<GauthRoles_stream_cursor_input>
    _$gauthRolesStreamCursorInputSerializer =
    new _$GauthRoles_stream_cursor_inputSerializer();
Serializer<GauthRoles_stream_cursor_value_input>
    _$gauthRolesStreamCursorValueInputSerializer =
    new _$GauthRoles_stream_cursor_value_inputSerializer();
Serializer<GauthRoles_update_column> _$gauthRolesUpdateColumnSerializer =
    new _$GauthRoles_update_columnSerializer();
Serializer<GauthRoles_updates> _$gauthRolesUpdatesSerializer =
    new _$GauthRoles_updatesSerializer();
Serializer<GauthUserProviders_aggregate_bool_exp>
    _$gauthUserProvidersAggregateBoolExpSerializer =
    new _$GauthUserProviders_aggregate_bool_expSerializer();
Serializer<GauthUserProviders_aggregate_bool_exp_count>
    _$gauthUserProvidersAggregateBoolExpCountSerializer =
    new _$GauthUserProviders_aggregate_bool_exp_countSerializer();
Serializer<GauthUserProviders_aggregate_order_by>
    _$gauthUserProvidersAggregateOrderBySerializer =
    new _$GauthUserProviders_aggregate_order_bySerializer();
Serializer<GauthUserProviders_arr_rel_insert_input>
    _$gauthUserProvidersArrRelInsertInputSerializer =
    new _$GauthUserProviders_arr_rel_insert_inputSerializer();
Serializer<GauthUserProviders_bool_exp> _$gauthUserProvidersBoolExpSerializer =
    new _$GauthUserProviders_bool_expSerializer();
Serializer<GauthUserProviders_constraint>
    _$gauthUserProvidersConstraintSerializer =
    new _$GauthUserProviders_constraintSerializer();
Serializer<GauthUserProviders_insert_input>
    _$gauthUserProvidersInsertInputSerializer =
    new _$GauthUserProviders_insert_inputSerializer();
Serializer<GauthUserProviders_max_order_by>
    _$gauthUserProvidersMaxOrderBySerializer =
    new _$GauthUserProviders_max_order_bySerializer();
Serializer<GauthUserProviders_min_order_by>
    _$gauthUserProvidersMinOrderBySerializer =
    new _$GauthUserProviders_min_order_bySerializer();
Serializer<GauthUserProviders_on_conflict>
    _$gauthUserProvidersOnConflictSerializer =
    new _$GauthUserProviders_on_conflictSerializer();
Serializer<GauthUserProviders_order_by> _$gauthUserProvidersOrderBySerializer =
    new _$GauthUserProviders_order_bySerializer();
Serializer<GauthUserProviders_pk_columns_input>
    _$gauthUserProvidersPkColumnsInputSerializer =
    new _$GauthUserProviders_pk_columns_inputSerializer();
Serializer<GauthUserProviders_select_column>
    _$gauthUserProvidersSelectColumnSerializer =
    new _$GauthUserProviders_select_columnSerializer();
Serializer<GauthUserProviders_set_input>
    _$gauthUserProvidersSetInputSerializer =
    new _$GauthUserProviders_set_inputSerializer();
Serializer<GauthUserProviders_stream_cursor_input>
    _$gauthUserProvidersStreamCursorInputSerializer =
    new _$GauthUserProviders_stream_cursor_inputSerializer();
Serializer<GauthUserProviders_stream_cursor_value_input>
    _$gauthUserProvidersStreamCursorValueInputSerializer =
    new _$GauthUserProviders_stream_cursor_value_inputSerializer();
Serializer<GauthUserProviders_update_column>
    _$gauthUserProvidersUpdateColumnSerializer =
    new _$GauthUserProviders_update_columnSerializer();
Serializer<GauthUserProviders_updates> _$gauthUserProvidersUpdatesSerializer =
    new _$GauthUserProviders_updatesSerializer();
Serializer<GauthUserRoles_aggregate_bool_exp>
    _$gauthUserRolesAggregateBoolExpSerializer =
    new _$GauthUserRoles_aggregate_bool_expSerializer();
Serializer<GauthUserRoles_aggregate_bool_exp_count>
    _$gauthUserRolesAggregateBoolExpCountSerializer =
    new _$GauthUserRoles_aggregate_bool_exp_countSerializer();
Serializer<GauthUserRoles_aggregate_order_by>
    _$gauthUserRolesAggregateOrderBySerializer =
    new _$GauthUserRoles_aggregate_order_bySerializer();
Serializer<GauthUserRoles_arr_rel_insert_input>
    _$gauthUserRolesArrRelInsertInputSerializer =
    new _$GauthUserRoles_arr_rel_insert_inputSerializer();
Serializer<GauthUserRoles_bool_exp> _$gauthUserRolesBoolExpSerializer =
    new _$GauthUserRoles_bool_expSerializer();
Serializer<GauthUserRoles_constraint> _$gauthUserRolesConstraintSerializer =
    new _$GauthUserRoles_constraintSerializer();
Serializer<GauthUserRoles_insert_input> _$gauthUserRolesInsertInputSerializer =
    new _$GauthUserRoles_insert_inputSerializer();
Serializer<GauthUserRoles_max_order_by> _$gauthUserRolesMaxOrderBySerializer =
    new _$GauthUserRoles_max_order_bySerializer();
Serializer<GauthUserRoles_min_order_by> _$gauthUserRolesMinOrderBySerializer =
    new _$GauthUserRoles_min_order_bySerializer();
Serializer<GauthUserRoles_on_conflict> _$gauthUserRolesOnConflictSerializer =
    new _$GauthUserRoles_on_conflictSerializer();
Serializer<GauthUserRoles_order_by> _$gauthUserRolesOrderBySerializer =
    new _$GauthUserRoles_order_bySerializer();
Serializer<GauthUserRoles_pk_columns_input>
    _$gauthUserRolesPkColumnsInputSerializer =
    new _$GauthUserRoles_pk_columns_inputSerializer();
Serializer<GauthUserRoles_select_column>
    _$gauthUserRolesSelectColumnSerializer =
    new _$GauthUserRoles_select_columnSerializer();
Serializer<GauthUserRoles_set_input> _$gauthUserRolesSetInputSerializer =
    new _$GauthUserRoles_set_inputSerializer();
Serializer<GauthUserRoles_stream_cursor_input>
    _$gauthUserRolesStreamCursorInputSerializer =
    new _$GauthUserRoles_stream_cursor_inputSerializer();
Serializer<GauthUserRoles_stream_cursor_value_input>
    _$gauthUserRolesStreamCursorValueInputSerializer =
    new _$GauthUserRoles_stream_cursor_value_inputSerializer();
Serializer<GauthUserRoles_update_column>
    _$gauthUserRolesUpdateColumnSerializer =
    new _$GauthUserRoles_update_columnSerializer();
Serializer<GauthUserRoles_updates> _$gauthUserRolesUpdatesSerializer =
    new _$GauthUserRoles_updatesSerializer();
Serializer<GauthUserSecurityKeys_aggregate_bool_exp>
    _$gauthUserSecurityKeysAggregateBoolExpSerializer =
    new _$GauthUserSecurityKeys_aggregate_bool_expSerializer();
Serializer<GauthUserSecurityKeys_aggregate_bool_exp_count>
    _$gauthUserSecurityKeysAggregateBoolExpCountSerializer =
    new _$GauthUserSecurityKeys_aggregate_bool_exp_countSerializer();
Serializer<GauthUserSecurityKeys_aggregate_order_by>
    _$gauthUserSecurityKeysAggregateOrderBySerializer =
    new _$GauthUserSecurityKeys_aggregate_order_bySerializer();
Serializer<GauthUserSecurityKeys_arr_rel_insert_input>
    _$gauthUserSecurityKeysArrRelInsertInputSerializer =
    new _$GauthUserSecurityKeys_arr_rel_insert_inputSerializer();
Serializer<GauthUserSecurityKeys_avg_order_by>
    _$gauthUserSecurityKeysAvgOrderBySerializer =
    new _$GauthUserSecurityKeys_avg_order_bySerializer();
Serializer<GauthUserSecurityKeys_bool_exp>
    _$gauthUserSecurityKeysBoolExpSerializer =
    new _$GauthUserSecurityKeys_bool_expSerializer();
Serializer<GauthUserSecurityKeys_constraint>
    _$gauthUserSecurityKeysConstraintSerializer =
    new _$GauthUserSecurityKeys_constraintSerializer();
Serializer<GauthUserSecurityKeys_inc_input>
    _$gauthUserSecurityKeysIncInputSerializer =
    new _$GauthUserSecurityKeys_inc_inputSerializer();
Serializer<GauthUserSecurityKeys_insert_input>
    _$gauthUserSecurityKeysInsertInputSerializer =
    new _$GauthUserSecurityKeys_insert_inputSerializer();
Serializer<GauthUserSecurityKeys_max_order_by>
    _$gauthUserSecurityKeysMaxOrderBySerializer =
    new _$GauthUserSecurityKeys_max_order_bySerializer();
Serializer<GauthUserSecurityKeys_min_order_by>
    _$gauthUserSecurityKeysMinOrderBySerializer =
    new _$GauthUserSecurityKeys_min_order_bySerializer();
Serializer<GauthUserSecurityKeys_on_conflict>
    _$gauthUserSecurityKeysOnConflictSerializer =
    new _$GauthUserSecurityKeys_on_conflictSerializer();
Serializer<GauthUserSecurityKeys_order_by>
    _$gauthUserSecurityKeysOrderBySerializer =
    new _$GauthUserSecurityKeys_order_bySerializer();
Serializer<GauthUserSecurityKeys_pk_columns_input>
    _$gauthUserSecurityKeysPkColumnsInputSerializer =
    new _$GauthUserSecurityKeys_pk_columns_inputSerializer();
Serializer<GauthUserSecurityKeys_select_column>
    _$gauthUserSecurityKeysSelectColumnSerializer =
    new _$GauthUserSecurityKeys_select_columnSerializer();
Serializer<GauthUserSecurityKeys_set_input>
    _$gauthUserSecurityKeysSetInputSerializer =
    new _$GauthUserSecurityKeys_set_inputSerializer();
Serializer<GauthUserSecurityKeys_stddev_order_by>
    _$gauthUserSecurityKeysStddevOrderBySerializer =
    new _$GauthUserSecurityKeys_stddev_order_bySerializer();
Serializer<GauthUserSecurityKeys_stddev_pop_order_by>
    _$gauthUserSecurityKeysStddevPopOrderBySerializer =
    new _$GauthUserSecurityKeys_stddev_pop_order_bySerializer();
Serializer<GauthUserSecurityKeys_stddev_samp_order_by>
    _$gauthUserSecurityKeysStddevSampOrderBySerializer =
    new _$GauthUserSecurityKeys_stddev_samp_order_bySerializer();
Serializer<GauthUserSecurityKeys_stream_cursor_input>
    _$gauthUserSecurityKeysStreamCursorInputSerializer =
    new _$GauthUserSecurityKeys_stream_cursor_inputSerializer();
Serializer<GauthUserSecurityKeys_stream_cursor_value_input>
    _$gauthUserSecurityKeysStreamCursorValueInputSerializer =
    new _$GauthUserSecurityKeys_stream_cursor_value_inputSerializer();
Serializer<GauthUserSecurityKeys_sum_order_by>
    _$gauthUserSecurityKeysSumOrderBySerializer =
    new _$GauthUserSecurityKeys_sum_order_bySerializer();
Serializer<GauthUserSecurityKeys_update_column>
    _$gauthUserSecurityKeysUpdateColumnSerializer =
    new _$GauthUserSecurityKeys_update_columnSerializer();
Serializer<GauthUserSecurityKeys_updates>
    _$gauthUserSecurityKeysUpdatesSerializer =
    new _$GauthUserSecurityKeys_updatesSerializer();
Serializer<GauthUserSecurityKeys_var_pop_order_by>
    _$gauthUserSecurityKeysVarPopOrderBySerializer =
    new _$GauthUserSecurityKeys_var_pop_order_bySerializer();
Serializer<GauthUserSecurityKeys_var_samp_order_by>
    _$gauthUserSecurityKeysVarSampOrderBySerializer =
    new _$GauthUserSecurityKeys_var_samp_order_bySerializer();
Serializer<GauthUserSecurityKeys_variance_order_by>
    _$gauthUserSecurityKeysVarianceOrderBySerializer =
    new _$GauthUserSecurityKeys_variance_order_bySerializer();
Serializer<Gbigint_comparison_exp> _$gbigintComparisonExpSerializer =
    new _$Gbigint_comparison_expSerializer();
Serializer<Gbuckets_bool_exp> _$gbucketsBoolExpSerializer =
    new _$Gbuckets_bool_expSerializer();
Serializer<Gbuckets_constraint> _$gbucketsConstraintSerializer =
    new _$Gbuckets_constraintSerializer();
Serializer<Gbuckets_inc_input> _$gbucketsIncInputSerializer =
    new _$Gbuckets_inc_inputSerializer();
Serializer<Gbuckets_insert_input> _$gbucketsInsertInputSerializer =
    new _$Gbuckets_insert_inputSerializer();
Serializer<Gbuckets_obj_rel_insert_input>
    _$gbucketsObjRelInsertInputSerializer =
    new _$Gbuckets_obj_rel_insert_inputSerializer();
Serializer<Gbuckets_on_conflict> _$gbucketsOnConflictSerializer =
    new _$Gbuckets_on_conflictSerializer();
Serializer<Gbuckets_order_by> _$gbucketsOrderBySerializer =
    new _$Gbuckets_order_bySerializer();
Serializer<Gbuckets_pk_columns_input> _$gbucketsPkColumnsInputSerializer =
    new _$Gbuckets_pk_columns_inputSerializer();
Serializer<Gbuckets_select_column> _$gbucketsSelectColumnSerializer =
    new _$Gbuckets_select_columnSerializer();
Serializer<Gbuckets_set_input> _$gbucketsSetInputSerializer =
    new _$Gbuckets_set_inputSerializer();
Serializer<Gbuckets_stream_cursor_input> _$gbucketsStreamCursorInputSerializer =
    new _$Gbuckets_stream_cursor_inputSerializer();
Serializer<Gbuckets_stream_cursor_value_input>
    _$gbucketsStreamCursorValueInputSerializer =
    new _$Gbuckets_stream_cursor_value_inputSerializer();
Serializer<Gbuckets_update_column> _$gbucketsUpdateColumnSerializer =
    new _$Gbuckets_update_columnSerializer();
Serializer<Gbuckets_updates> _$gbucketsUpdatesSerializer =
    new _$Gbuckets_updatesSerializer();
Serializer<Gbytea_comparison_exp> _$gbyteaComparisonExpSerializer =
    new _$Gbytea_comparison_expSerializer();
Serializer<Gcitext_comparison_exp> _$gcitextComparisonExpSerializer =
    new _$Gcitext_comparison_expSerializer();
Serializer<Gcursor_ordering> _$gcursorOrderingSerializer =
    new _$Gcursor_orderingSerializer();
Serializer<Gfiles_aggregate_bool_exp> _$gfilesAggregateBoolExpSerializer =
    new _$Gfiles_aggregate_bool_expSerializer();
Serializer<Gfiles_aggregate_bool_exp_bool_and>
    _$gfilesAggregateBoolExpBoolAndSerializer =
    new _$Gfiles_aggregate_bool_exp_bool_andSerializer();
Serializer<Gfiles_aggregate_bool_exp_bool_or>
    _$gfilesAggregateBoolExpBoolOrSerializer =
    new _$Gfiles_aggregate_bool_exp_bool_orSerializer();
Serializer<Gfiles_aggregate_bool_exp_count>
    _$gfilesAggregateBoolExpCountSerializer =
    new _$Gfiles_aggregate_bool_exp_countSerializer();
Serializer<Gfiles_aggregate_order_by> _$gfilesAggregateOrderBySerializer =
    new _$Gfiles_aggregate_order_bySerializer();
Serializer<Gfiles_arr_rel_insert_input> _$gfilesArrRelInsertInputSerializer =
    new _$Gfiles_arr_rel_insert_inputSerializer();
Serializer<Gfiles_avg_order_by> _$gfilesAvgOrderBySerializer =
    new _$Gfiles_avg_order_bySerializer();
Serializer<Gfiles_bool_exp> _$gfilesBoolExpSerializer =
    new _$Gfiles_bool_expSerializer();
Serializer<Gfiles_constraint> _$gfilesConstraintSerializer =
    new _$Gfiles_constraintSerializer();
Serializer<Gfiles_inc_input> _$gfilesIncInputSerializer =
    new _$Gfiles_inc_inputSerializer();
Serializer<Gfiles_insert_input> _$gfilesInsertInputSerializer =
    new _$Gfiles_insert_inputSerializer();
Serializer<Gfiles_max_order_by> _$gfilesMaxOrderBySerializer =
    new _$Gfiles_max_order_bySerializer();
Serializer<Gfiles_min_order_by> _$gfilesMinOrderBySerializer =
    new _$Gfiles_min_order_bySerializer();
Serializer<Gfiles_on_conflict> _$gfilesOnConflictSerializer =
    new _$Gfiles_on_conflictSerializer();
Serializer<Gfiles_order_by> _$gfilesOrderBySerializer =
    new _$Gfiles_order_bySerializer();
Serializer<Gfiles_pk_columns_input> _$gfilesPkColumnsInputSerializer =
    new _$Gfiles_pk_columns_inputSerializer();
Serializer<Gfiles_select_column> _$gfilesSelectColumnSerializer =
    new _$Gfiles_select_columnSerializer();
Serializer<
        Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns>
    _$gfilesSelectColumnFilesAggregateBoolExpBoolAndArgumentsColumnsSerializer =
    new _$Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columnsSerializer();
Serializer<
        Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns>
    _$gfilesSelectColumnFilesAggregateBoolExpBoolOrArgumentsColumnsSerializer =
    new _$Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columnsSerializer();
Serializer<Gfiles_set_input> _$gfilesSetInputSerializer =
    new _$Gfiles_set_inputSerializer();
Serializer<Gfiles_stddev_order_by> _$gfilesStddevOrderBySerializer =
    new _$Gfiles_stddev_order_bySerializer();
Serializer<Gfiles_stddev_pop_order_by> _$gfilesStddevPopOrderBySerializer =
    new _$Gfiles_stddev_pop_order_bySerializer();
Serializer<Gfiles_stddev_samp_order_by> _$gfilesStddevSampOrderBySerializer =
    new _$Gfiles_stddev_samp_order_bySerializer();
Serializer<Gfiles_stream_cursor_input> _$gfilesStreamCursorInputSerializer =
    new _$Gfiles_stream_cursor_inputSerializer();
Serializer<Gfiles_stream_cursor_value_input>
    _$gfilesStreamCursorValueInputSerializer =
    new _$Gfiles_stream_cursor_value_inputSerializer();
Serializer<Gfiles_sum_order_by> _$gfilesSumOrderBySerializer =
    new _$Gfiles_sum_order_bySerializer();
Serializer<Gfiles_update_column> _$gfilesUpdateColumnSerializer =
    new _$Gfiles_update_columnSerializer();
Serializer<Gfiles_updates> _$gfilesUpdatesSerializer =
    new _$Gfiles_updatesSerializer();
Serializer<Gfiles_var_pop_order_by> _$gfilesVarPopOrderBySerializer =
    new _$Gfiles_var_pop_order_bySerializer();
Serializer<Gfiles_var_samp_order_by> _$gfilesVarSampOrderBySerializer =
    new _$Gfiles_var_samp_order_bySerializer();
Serializer<Gfiles_variance_order_by> _$gfilesVarianceOrderBySerializer =
    new _$Gfiles_variance_order_bySerializer();
Serializer<Gjsonb_cast_exp> _$gjsonbCastExpSerializer =
    new _$Gjsonb_cast_expSerializer();
Serializer<Gjsonb_comparison_exp> _$gjsonbComparisonExpSerializer =
    new _$Gjsonb_comparison_expSerializer();
Serializer<Gorder_by> _$gorderBySerializer = new _$Gorder_bySerializer();
Serializer<Gtimestamptz_comparison_exp> _$gtimestamptzComparisonExpSerializer =
    new _$Gtimestamptz_comparison_expSerializer();
Serializer<Guser_articles_bool_exp> _$guserArticlesBoolExpSerializer =
    new _$Guser_articles_bool_expSerializer();
Serializer<Guser_articles_constraint> _$guserArticlesConstraintSerializer =
    new _$Guser_articles_constraintSerializer();
Serializer<Guser_articles_inc_input> _$guserArticlesIncInputSerializer =
    new _$Guser_articles_inc_inputSerializer();
Serializer<Guser_articles_insert_input> _$guserArticlesInsertInputSerializer =
    new _$Guser_articles_insert_inputSerializer();
Serializer<Guser_articles_on_conflict> _$guserArticlesOnConflictSerializer =
    new _$Guser_articles_on_conflictSerializer();
Serializer<Guser_articles_order_by> _$guserArticlesOrderBySerializer =
    new _$Guser_articles_order_bySerializer();
Serializer<Guser_articles_pk_columns_input>
    _$guserArticlesPkColumnsInputSerializer =
    new _$Guser_articles_pk_columns_inputSerializer();
Serializer<Guser_articles_select_column> _$guserArticlesSelectColumnSerializer =
    new _$Guser_articles_select_columnSerializer();
Serializer<Guser_articles_set_input> _$guserArticlesSetInputSerializer =
    new _$Guser_articles_set_inputSerializer();
Serializer<Guser_articles_stream_cursor_input>
    _$guserArticlesStreamCursorInputSerializer =
    new _$Guser_articles_stream_cursor_inputSerializer();
Serializer<Guser_articles_stream_cursor_value_input>
    _$guserArticlesStreamCursorValueInputSerializer =
    new _$Guser_articles_stream_cursor_value_inputSerializer();
Serializer<Guser_articles_update_column> _$guserArticlesUpdateColumnSerializer =
    new _$Guser_articles_update_columnSerializer();
Serializer<Guser_articles_updates> _$guserArticlesUpdatesSerializer =
    new _$Guser_articles_updatesSerializer();
Serializer<Gusers_aggregate_bool_exp> _$gusersAggregateBoolExpSerializer =
    new _$Gusers_aggregate_bool_expSerializer();
Serializer<Gusers_aggregate_bool_exp_bool_and>
    _$gusersAggregateBoolExpBoolAndSerializer =
    new _$Gusers_aggregate_bool_exp_bool_andSerializer();
Serializer<Gusers_aggregate_bool_exp_bool_or>
    _$gusersAggregateBoolExpBoolOrSerializer =
    new _$Gusers_aggregate_bool_exp_bool_orSerializer();
Serializer<Gusers_aggregate_bool_exp_count>
    _$gusersAggregateBoolExpCountSerializer =
    new _$Gusers_aggregate_bool_exp_countSerializer();
Serializer<Gusers_aggregate_order_by> _$gusersAggregateOrderBySerializer =
    new _$Gusers_aggregate_order_bySerializer();
Serializer<Gusers_append_input> _$gusersAppendInputSerializer =
    new _$Gusers_append_inputSerializer();
Serializer<Gusers_arr_rel_insert_input> _$gusersArrRelInsertInputSerializer =
    new _$Gusers_arr_rel_insert_inputSerializer();
Serializer<Gusers_bool_exp> _$gusersBoolExpSerializer =
    new _$Gusers_bool_expSerializer();
Serializer<Gusers_constraint> _$gusersConstraintSerializer =
    new _$Gusers_constraintSerializer();
Serializer<Gusers_delete_at_path_input> _$gusersDeleteAtPathInputSerializer =
    new _$Gusers_delete_at_path_inputSerializer();
Serializer<Gusers_delete_elem_input> _$gusersDeleteElemInputSerializer =
    new _$Gusers_delete_elem_inputSerializer();
Serializer<Gusers_delete_key_input> _$gusersDeleteKeyInputSerializer =
    new _$Gusers_delete_key_inputSerializer();
Serializer<Gusers_insert_input> _$gusersInsertInputSerializer =
    new _$Gusers_insert_inputSerializer();
Serializer<Gusers_max_order_by> _$gusersMaxOrderBySerializer =
    new _$Gusers_max_order_bySerializer();
Serializer<Gusers_min_order_by> _$gusersMinOrderBySerializer =
    new _$Gusers_min_order_bySerializer();
Serializer<Gusers_obj_rel_insert_input> _$gusersObjRelInsertInputSerializer =
    new _$Gusers_obj_rel_insert_inputSerializer();
Serializer<Gusers_on_conflict> _$gusersOnConflictSerializer =
    new _$Gusers_on_conflictSerializer();
Serializer<Gusers_order_by> _$gusersOrderBySerializer =
    new _$Gusers_order_bySerializer();
Serializer<Gusers_pk_columns_input> _$gusersPkColumnsInputSerializer =
    new _$Gusers_pk_columns_inputSerializer();
Serializer<Gusers_prepend_input> _$gusersPrependInputSerializer =
    new _$Gusers_prepend_inputSerializer();
Serializer<Gusers_select_column> _$gusersSelectColumnSerializer =
    new _$Gusers_select_columnSerializer();
Serializer<
        Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns>
    _$gusersSelectColumnUsersAggregateBoolExpBoolAndArgumentsColumnsSerializer =
    new _$Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columnsSerializer();
Serializer<
        Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns>
    _$gusersSelectColumnUsersAggregateBoolExpBoolOrArgumentsColumnsSerializer =
    new _$Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columnsSerializer();
Serializer<Gusers_set_input> _$gusersSetInputSerializer =
    new _$Gusers_set_inputSerializer();
Serializer<Gusers_stream_cursor_input> _$gusersStreamCursorInputSerializer =
    new _$Gusers_stream_cursor_inputSerializer();
Serializer<Gusers_stream_cursor_value_input>
    _$gusersStreamCursorValueInputSerializer =
    new _$Gusers_stream_cursor_value_inputSerializer();
Serializer<Gusers_update_column> _$gusersUpdateColumnSerializer =
    new _$Gusers_update_columnSerializer();
Serializer<Gusers_updates> _$gusersUpdatesSerializer =
    new _$Gusers_updatesSerializer();
Serializer<Guuid_comparison_exp> _$guuidComparisonExpSerializer =
    new _$Guuid_comparison_expSerializer();
Serializer<Gwords_bool_exp> _$gwordsBoolExpSerializer =
    new _$Gwords_bool_expSerializer();
Serializer<Gwords_constraint> _$gwordsConstraintSerializer =
    new _$Gwords_constraintSerializer();
Serializer<Gwords_inc_input> _$gwordsIncInputSerializer =
    new _$Gwords_inc_inputSerializer();
Serializer<Gwords_insert_input> _$gwordsInsertInputSerializer =
    new _$Gwords_insert_inputSerializer();
Serializer<Gwords_on_conflict> _$gwordsOnConflictSerializer =
    new _$Gwords_on_conflictSerializer();
Serializer<Gwords_order_by> _$gwordsOrderBySerializer =
    new _$Gwords_order_bySerializer();
Serializer<Gwords_pk_columns_input> _$gwordsPkColumnsInputSerializer =
    new _$Gwords_pk_columns_inputSerializer();
Serializer<Gwords_select_column> _$gwordsSelectColumnSerializer =
    new _$Gwords_select_columnSerializer();
Serializer<Gwords_set_input> _$gwordsSetInputSerializer =
    new _$Gwords_set_inputSerializer();
Serializer<Gwords_stream_cursor_input> _$gwordsStreamCursorInputSerializer =
    new _$Gwords_stream_cursor_inputSerializer();
Serializer<Gwords_stream_cursor_value_input>
    _$gwordsStreamCursorValueInputSerializer =
    new _$Gwords_stream_cursor_value_inputSerializer();
Serializer<Gwords_update_column> _$gwordsUpdateColumnSerializer =
    new _$Gwords_update_columnSerializer();
Serializer<Gwords_updates> _$gwordsUpdatesSerializer =
    new _$Gwords_updatesSerializer();

class _$GBoolean_comparison_expSerializer
    implements StructuredSerializer<GBoolean_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    GBoolean_comparison_exp,
    _$GBoolean_comparison_exp
  ];
  @override
  final String wireName = 'GBoolean_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBoolean_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(bool)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(bool)])));
    }
    return result;
  }

  @override
  GBoolean_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBoolean_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_gt':
          result.G_gt = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_gte':
          result.G_gte = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(bool)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lte':
          result.G_lte = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_neq':
          result.G_neq = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(bool)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GInt_comparison_expSerializer
    implements StructuredSerializer<GInt_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    GInt_comparison_exp,
    _$GInt_comparison_exp
  ];
  @override
  final String wireName = 'GInt_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GInt_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(int)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(int)])));
    }
    return result;
  }

  @override
  GInt_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GInt_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_gt':
          result.G_gt = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_gte':
          result.G_gte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_lte':
          result.G_lte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_neq':
          result.G_neq = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GString_comparison_expSerializer
    implements StructuredSerializer<GString_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    GString_comparison_exp,
    _$GString_comparison_exp
  ];
  @override
  final String wireName = 'GString_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GString_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_ilike;
    if (value != null) {
      result
        ..add('_ilike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.G_iregex;
    if (value != null) {
      result
        ..add('_iregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_like;
    if (value != null) {
      result
        ..add('_like')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_nilike;
    if (value != null) {
      result
        ..add('_nilike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.G_niregex;
    if (value != null) {
      result
        ..add('_niregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_nlike;
    if (value != null) {
      result
        ..add('_nlike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_nregex;
    if (value != null) {
      result
        ..add('_nregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_nsimilar;
    if (value != null) {
      result
        ..add('_nsimilar')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_regex;
    if (value != null) {
      result
        ..add('_regex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_similar;
    if (value != null) {
      result
        ..add('_similar')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GString_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GString_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_gt':
          result.G_gt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_gte':
          result.G_gte = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_ilike':
          result.G_ilike = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case '_iregex':
          result.G_iregex = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_like':
          result.G_like = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_lt':
          result.G_lt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_lte':
          result.G_lte = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_neq':
          result.G_neq = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_nilike':
          result.G_nilike = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case '_niregex':
          result.G_niregex = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_nlike':
          result.G_nlike = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_nregex':
          result.G_nregex = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_nsimilar':
          result.G_nsimilar = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_regex':
          result.G_regex = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_similar':
          result.G_similar = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_append_inputSerializer
    implements StructuredSerializer<Garticles_append_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_append_input,
    _$Garticles_append_input
  ];
  @override
  final String wireName = 'Garticles_append_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_append_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  Garticles_append_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_append_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_bool_expSerializer
    implements StructuredSerializer<Garticles_bool_exp> {
  @override
  final Iterable<Type> types = const [Garticles_bool_exp, _$Garticles_bool_exp];
  @override
  final String wireName = 'Garticles_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Garticles_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Garticles_bool_exp)])));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.favicon;
    if (value != null) {
      result
        ..add('favicon')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gjsonb_comparison_exp)));
    }
    value = object.thumbnail;
    if (value != null) {
      result
        ..add('thumbnail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    return result;
  }

  @override
  Garticles_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Garticles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_bool_exp))!
              as Garticles_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Garticles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'favicon':
          result.favicon.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'sentences':
          result.sentences.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gjsonb_comparison_exp))!
              as Gjsonb_comparison_exp);
          break;
        case 'thumbnail':
          result.thumbnail.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'title':
          result.title.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'url':
          result.url.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_constraintSerializer
    implements PrimitiveSerializer<Garticles_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Garticles_constraint];
  @override
  final String wireName = 'Garticles_constraint';

  @override
  Object serialize(Serializers serializers, Garticles_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Garticles_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Garticles_constraint.valueOf(serialized as String);
}

class _$Garticles_delete_at_path_inputSerializer
    implements StructuredSerializer<Garticles_delete_at_path_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_delete_at_path_input,
    _$Garticles_delete_at_path_input
  ];
  @override
  final String wireName = 'Garticles_delete_at_path_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_delete_at_path_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  Garticles_delete_at_path_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_delete_at_path_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sentences':
          result.sentences.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_delete_elem_inputSerializer
    implements StructuredSerializer<Garticles_delete_elem_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_delete_elem_input,
    _$Garticles_delete_elem_input
  ];
  @override
  final String wireName = 'Garticles_delete_elem_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_delete_elem_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Garticles_delete_elem_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_delete_elem_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_delete_key_inputSerializer
    implements StructuredSerializer<Garticles_delete_key_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_delete_key_input,
    _$Garticles_delete_key_input
  ];
  @override
  final String wireName = 'Garticles_delete_key_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_delete_key_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Garticles_delete_key_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_delete_key_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_insert_inputSerializer
    implements StructuredSerializer<Garticles_insert_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_insert_input,
    _$Garticles_insert_input
  ];
  @override
  final String wireName = 'Garticles_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.favicon;
    if (value != null) {
      result
        ..add('favicon')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.thumbnail;
    if (value != null) {
      result
        ..add('thumbnail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Garticles_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'favicon':
          result.favicon = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'thumbnail':
          result.thumbnail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_on_conflictSerializer
    implements StructuredSerializer<Garticles_on_conflict> {
  @override
  final Iterable<Type> types = const [
    Garticles_on_conflict,
    _$Garticles_on_conflict
  ];
  @override
  final String wireName = 'Garticles_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Garticles_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Garticles_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_bool_exp)));
    }
    return result;
  }

  @override
  Garticles_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_constraint))!
              as Garticles_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Garticles_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_bool_exp))!
              as Garticles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_order_bySerializer
    implements StructuredSerializer<Garticles_order_by> {
  @override
  final Iterable<Type> types = const [Garticles_order_by, _$Garticles_order_by];
  @override
  final String wireName = 'Garticles_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.favicon;
    if (value != null) {
      result
        ..add('favicon')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.thumbnail;
    if (value != null) {
      result
        ..add('thumbnail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Garticles_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'created_by':
          result.created_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'deleted_at':
          result.deleted_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'favicon':
          result.favicon = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'thumbnail':
          result.thumbnail = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_at':
          result.updated_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_by':
          result.updated_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_pk_columns_inputSerializer
    implements StructuredSerializer<Garticles_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_pk_columns_input,
    _$Garticles_pk_columns_input
  ];
  @override
  final String wireName = 'Garticles_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  Garticles_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_prepend_inputSerializer
    implements StructuredSerializer<Garticles_prepend_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_prepend_input,
    _$Garticles_prepend_input
  ];
  @override
  final String wireName = 'Garticles_prepend_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_prepend_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  Garticles_prepend_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_prepend_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_select_columnSerializer
    implements PrimitiveSerializer<Garticles_select_column> {
  @override
  final Iterable<Type> types = const <Type>[Garticles_select_column];
  @override
  final String wireName = 'Garticles_select_column';

  @override
  Object serialize(Serializers serializers, Garticles_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Garticles_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Garticles_select_column.valueOf(serialized as String);
}

class _$Garticles_set_inputSerializer
    implements StructuredSerializer<Garticles_set_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_set_input,
    _$Garticles_set_input
  ];
  @override
  final String wireName = 'Garticles_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.favicon;
    if (value != null) {
      result
        ..add('favicon')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.thumbnail;
    if (value != null) {
      result
        ..add('thumbnail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Garticles_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'favicon':
          result.favicon = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'thumbnail':
          result.thumbnail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_stream_cursor_inputSerializer
    implements StructuredSerializer<Garticles_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_stream_cursor_input,
    _$Garticles_stream_cursor_input
  ];
  @override
  final String wireName = 'Garticles_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(Garticles_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Garticles_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Garticles_stream_cursor_value_input))!
              as Garticles_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Garticles_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Garticles_stream_cursor_value_input,
    _$Garticles_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Garticles_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Garticles_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.favicon;
    if (value != null) {
      result
        ..add('favicon')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.sentences;
    if (value != null) {
      result
        ..add('sentences')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.thumbnail;
    if (value != null) {
      result
        ..add('thumbnail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Garticles_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'favicon':
          result.favicon = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'sentences':
          result.sentences = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'thumbnail':
          result.thumbnail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Garticles_update_columnSerializer
    implements PrimitiveSerializer<Garticles_update_column> {
  @override
  final Iterable<Type> types = const <Type>[Garticles_update_column];
  @override
  final String wireName = 'Garticles_update_column';

  @override
  Object serialize(Serializers serializers, Garticles_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Garticles_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Garticles_update_column.valueOf(serialized as String);
}

class _$Garticles_updatesSerializer
    implements StructuredSerializer<Garticles_updates> {
  @override
  final Iterable<Type> types = const [Garticles_updates, _$Garticles_updates];
  @override
  final String wireName = 'Garticles_updates';

  @override
  Iterable<Object?> serialize(Serializers serializers, Garticles_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Garticles_bool_exp)),
    ];
    Object? value;
    value = object.G_append;
    if (value != null) {
      result
        ..add('_append')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_append_input)));
    }
    value = object.G_delete_at_path;
    if (value != null) {
      result
        ..add('_delete_at_path')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_delete_at_path_input)));
    }
    value = object.G_delete_elem;
    if (value != null) {
      result
        ..add('_delete_elem')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_delete_elem_input)));
    }
    value = object.G_delete_key;
    if (value != null) {
      result
        ..add('_delete_key')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_delete_key_input)));
    }
    value = object.G_prepend;
    if (value != null) {
      result
        ..add('_prepend')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_prepend_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Garticles_set_input)));
    }
    return result;
  }

  @override
  Garticles_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Garticles_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_append':
          result.G_append.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_append_input))!
              as Garticles_append_input);
          break;
        case '_delete_at_path':
          result.G_delete_at_path.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Garticles_delete_at_path_input))!
              as Garticles_delete_at_path_input);
          break;
        case '_delete_elem':
          result.G_delete_elem.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_delete_elem_input))!
              as Garticles_delete_elem_input);
          break;
        case '_delete_key':
          result.G_delete_key.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_delete_key_input))!
              as Garticles_delete_key_input);
          break;
        case '_prepend':
          result.G_prepend.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_prepend_input))!
              as Garticles_prepend_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_set_input))!
              as Garticles_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Garticles_bool_exp))!
              as Garticles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_append_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_append_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_append_input,
    _$GauthProviderRequests_append_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_append_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_append_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  GauthProviderRequests_append_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_append_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_bool_expSerializer
    implements StructuredSerializer<GauthProviderRequests_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_bool_exp,
    _$GauthProviderRequests_bool_exp
  ];
  @override
  final String wireName = 'GauthProviderRequests_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthProviderRequests_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviderRequests_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthProviderRequests_bool_exp)])));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gjsonb_comparison_exp)));
    }
    return result;
  }

  @override
  GauthProviderRequests_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviderRequests_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_bool_exp))!
              as GauthProviderRequests_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviderRequests_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'options':
          result.options.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gjsonb_comparison_exp))!
              as Gjsonb_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_constraintSerializer
    implements PrimitiveSerializer<GauthProviderRequests_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthProviderRequests_constraint];
  @override
  final String wireName = 'GauthProviderRequests_constraint';

  @override
  Object serialize(
          Serializers serializers, GauthProviderRequests_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviderRequests_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviderRequests_constraint.valueOf(serialized as String);
}

class _$GauthProviderRequests_delete_at_path_inputSerializer
    implements
        StructuredSerializer<GauthProviderRequests_delete_at_path_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_delete_at_path_input,
    _$GauthProviderRequests_delete_at_path_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_delete_at_path_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthProviderRequests_delete_at_path_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GauthProviderRequests_delete_at_path_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_delete_at_path_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'options':
          result.options.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_delete_elem_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_delete_elem_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_delete_elem_input,
    _$GauthProviderRequests_delete_elem_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_delete_elem_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_delete_elem_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GauthProviderRequests_delete_elem_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_delete_elem_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_delete_key_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_delete_key_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_delete_key_input,
    _$GauthProviderRequests_delete_key_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_delete_key_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_delete_key_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GauthProviderRequests_delete_key_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_delete_key_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_insert_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_insert_input,
    _$GauthProviderRequests_insert_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  GauthProviderRequests_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_on_conflictSerializer
    implements StructuredSerializer<GauthProviderRequests_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_on_conflict,
    _$GauthProviderRequests_on_conflict
  ];
  @override
  final String wireName = 'GauthProviderRequests_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthProviderRequests_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthProviderRequests_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviderRequests_bool_exp)));
    }
    return result;
  }

  @override
  GauthProviderRequests_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_constraint))!
              as GauthProviderRequests_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviderRequests_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_bool_exp))!
              as GauthProviderRequests_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_order_bySerializer
    implements StructuredSerializer<GauthProviderRequests_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_order_by,
    _$GauthProviderRequests_order_by
  ];
  @override
  final String wireName = 'GauthProviderRequests_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthProviderRequests_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_pk_columns_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_pk_columns_input,
    _$GauthProviderRequests_pk_columns_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  GauthProviderRequests_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_prepend_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_prepend_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_prepend_input,
    _$GauthProviderRequests_prepend_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_prepend_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_prepend_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  GauthProviderRequests_prepend_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_prepend_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_select_columnSerializer
    implements PrimitiveSerializer<GauthProviderRequests_select_column> {
  @override
  final Iterable<Type> types = const <Type>[
    GauthProviderRequests_select_column
  ];
  @override
  final String wireName = 'GauthProviderRequests_select_column';

  @override
  Object serialize(
          Serializers serializers, GauthProviderRequests_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviderRequests_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviderRequests_select_column.valueOf(serialized as String);
}

class _$GauthProviderRequests_set_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_set_input,
    _$GauthProviderRequests_set_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  GauthProviderRequests_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthProviderRequests_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_stream_cursor_input,
    _$GauthProviderRequests_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthProviderRequests_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthProviderRequests_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthProviderRequests_stream_cursor_value_input))!
              as GauthProviderRequests_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_stream_cursor_value_inputSerializer
    implements
        StructuredSerializer<GauthProviderRequests_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_stream_cursor_value_input,
    _$GauthProviderRequests_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthProviderRequests_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthProviderRequests_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  GauthProviderRequests_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'options':
          result.options = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviderRequests_update_columnSerializer
    implements PrimitiveSerializer<GauthProviderRequests_update_column> {
  @override
  final Iterable<Type> types = const <Type>[
    GauthProviderRequests_update_column
  ];
  @override
  final String wireName = 'GauthProviderRequests_update_column';

  @override
  Object serialize(
          Serializers serializers, GauthProviderRequests_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviderRequests_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviderRequests_update_column.valueOf(serialized as String);
}

class _$GauthProviderRequests_updatesSerializer
    implements StructuredSerializer<GauthProviderRequests_updates> {
  @override
  final Iterable<Type> types = const [
    GauthProviderRequests_updates,
    _$GauthProviderRequests_updates
  ];
  @override
  final String wireName = 'GauthProviderRequests_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviderRequests_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthProviderRequests_bool_exp)),
    ];
    Object? value;
    value = object.G_append;
    if (value != null) {
      result
        ..add('_append')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviderRequests_append_input)));
    }
    value = object.G_delete_at_path;
    if (value != null) {
      result
        ..add('_delete_at_path')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthProviderRequests_delete_at_path_input)));
    }
    value = object.G_delete_elem;
    if (value != null) {
      result
        ..add('_delete_elem')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthProviderRequests_delete_elem_input)));
    }
    value = object.G_delete_key;
    if (value != null) {
      result
        ..add('_delete_key')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthProviderRequests_delete_key_input)));
    }
    value = object.G_prepend;
    if (value != null) {
      result
        ..add('_prepend')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthProviderRequests_prepend_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviderRequests_set_input)));
    }
    return result;
  }

  @override
  GauthProviderRequests_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviderRequests_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_append':
          result.G_append.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_append_input))!
              as GauthProviderRequests_append_input);
          break;
        case '_delete_at_path':
          result.G_delete_at_path.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthProviderRequests_delete_at_path_input))!
              as GauthProviderRequests_delete_at_path_input);
          break;
        case '_delete_elem':
          result.G_delete_elem.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_delete_elem_input))!
              as GauthProviderRequests_delete_elem_input);
          break;
        case '_delete_key':
          result.G_delete_key.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_delete_key_input))!
              as GauthProviderRequests_delete_key_input);
          break;
        case '_prepend':
          result.G_prepend.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_prepend_input))!
              as GauthProviderRequests_prepend_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_set_input))!
              as GauthProviderRequests_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviderRequests_bool_exp))!
              as GauthProviderRequests_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_bool_expSerializer
    implements StructuredSerializer<GauthProviders_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_bool_exp,
    _$GauthProviders_bool_exp
  ];
  @override
  final String wireName = 'GauthProviders_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthProviders_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthProviders_bool_exp)])));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.userProviders;
    if (value != null) {
      result
        ..add('userProviders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_bool_exp)));
    }
    value = object.userProviders_aggregate;
    if (value != null) {
      result
        ..add('userProviders_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_aggregate_bool_exp)));
    }
    return result;
  }

  @override
  GauthProviders_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviders_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_bool_exp))!
              as GauthProviders_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviders_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'userProviders':
          result.userProviders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
        case 'userProviders_aggregate':
          result.userProviders_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_aggregate_bool_exp))!
              as GauthUserProviders_aggregate_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_constraintSerializer
    implements PrimitiveSerializer<GauthProviders_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthProviders_constraint];
  @override
  final String wireName = 'GauthProviders_constraint';

  @override
  Object serialize(Serializers serializers, GauthProviders_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviders_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviders_constraint.valueOf(serialized as String);
}

class _$GauthProviders_insert_inputSerializer
    implements StructuredSerializer<GauthProviders_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_insert_input,
    _$GauthProviders_insert_input
  ];
  @override
  final String wireName = 'GauthProviders_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userProviders;
    if (value != null) {
      result
        ..add('userProviders')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_arr_rel_insert_input)));
    }
    return result;
  }

  @override
  GauthProviders_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userProviders':
          result.userProviders.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_arr_rel_insert_input))!
              as GauthUserProviders_arr_rel_insert_input);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_obj_rel_insert_inputSerializer
    implements StructuredSerializer<GauthProviders_obj_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_obj_rel_insert_input,
    _$GauthProviders_obj_rel_insert_input
  ];
  @override
  final String wireName = 'GauthProviders_obj_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_obj_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(GauthProviders_insert_input)),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_on_conflict)));
    }
    return result;
  }

  @override
  GauthProviders_obj_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_obj_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_insert_input))!
              as GauthProviders_insert_input);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_on_conflict))!
              as GauthProviders_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_on_conflictSerializer
    implements StructuredSerializer<GauthProviders_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_on_conflict,
    _$GauthProviders_on_conflict
  ];
  @override
  final String wireName = 'GauthProviders_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthProviders_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GauthProviders_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_bool_exp)));
    }
    return result;
  }

  @override
  GauthProviders_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_constraint))!
              as GauthProviders_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthProviders_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_bool_exp))!
              as GauthProviders_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_order_bySerializer
    implements StructuredSerializer<GauthProviders_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_order_by,
    _$GauthProviders_order_by
  ];
  @override
  final String wireName = 'GauthProviders_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userProviders_aggregate;
    if (value != null) {
      result
        ..add('userProviders_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_aggregate_order_by)));
    }
    return result;
  }

  @override
  GauthProviders_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userProviders_aggregate':
          result.userProviders_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_aggregate_order_by))!
              as GauthUserProviders_aggregate_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_pk_columns_inputSerializer
    implements StructuredSerializer<GauthProviders_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_pk_columns_input,
    _$GauthProviders_pk_columns_input
  ];
  @override
  final String wireName = 'GauthProviders_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GauthProviders_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_select_columnSerializer
    implements PrimitiveSerializer<GauthProviders_select_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthProviders_select_column];
  @override
  final String wireName = 'GauthProviders_select_column';

  @override
  Object serialize(Serializers serializers, GauthProviders_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviders_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviders_select_column.valueOf(serialized as String);
}

class _$GauthProviders_set_inputSerializer
    implements StructuredSerializer<GauthProviders_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_set_input,
    _$GauthProviders_set_input
  ];
  @override
  final String wireName = 'GauthProviders_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GauthProviders_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthProviders_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_stream_cursor_input,
    _$GauthProviders_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthProviders_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthProviders_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthProviders_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviders_stream_cursor_value_input))!
              as GauthProviders_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_stream_cursor_value_inputSerializer
    implements StructuredSerializer<GauthProviders_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_stream_cursor_value_input,
    _$GauthProviders_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthProviders_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GauthProviders_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthProviders_update_columnSerializer
    implements PrimitiveSerializer<GauthProviders_update_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthProviders_update_column];
  @override
  final String wireName = 'GauthProviders_update_column';

  @override
  Object serialize(Serializers serializers, GauthProviders_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthProviders_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthProviders_update_column.valueOf(serialized as String);
}

class _$GauthProviders_updatesSerializer
    implements StructuredSerializer<GauthProviders_updates> {
  @override
  final Iterable<Type> types = const [
    GauthProviders_updates,
    _$GauthProviders_updates
  ];
  @override
  final String wireName = 'GauthProviders_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthProviders_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthProviders_bool_exp)),
    ];
    Object? value;
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_set_input)));
    }
    return result;
  }

  @override
  GauthProviders_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthProviders_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_set_input))!
              as GauthProviders_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_bool_exp))!
              as GauthProviders_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_aggregate_bool_expSerializer
    implements StructuredSerializer<GauthRefreshTokens_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_aggregate_bool_exp,
    _$GauthRefreshTokens_aggregate_bool_exp
  ];
  @override
  final String wireName = 'GauthRefreshTokens_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthRefreshTokens_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthRefreshTokens_aggregate_bool_exp_count))!
              as GauthRefreshTokens_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_aggregate_bool_exp_countSerializer
    implements
        StructuredSerializer<GauthRefreshTokens_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_aggregate_bool_exp_count,
    _$GauthRefreshTokens_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'GauthRefreshTokens_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthRefreshTokens_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthRefreshTokens_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_bool_exp)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRefreshTokens_select_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_bool_exp))!
              as GauthRefreshTokens_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_aggregate_order_bySerializer
    implements StructuredSerializer<GauthRefreshTokens_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_aggregate_order_by,
    _$GauthRefreshTokens_aggregate_order_by
  ];
  @override
  final String wireName = 'GauthRefreshTokens_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_min_order_by)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_max_order_by))!
              as GauthRefreshTokens_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_min_order_by))!
              as GauthRefreshTokens_min_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_arr_rel_insert_inputSerializer
    implements StructuredSerializer<GauthRefreshTokens_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_arr_rel_insert_input,
    _$GauthRefreshTokens_arr_rel_insert_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthRefreshTokens_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_on_conflict)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRefreshTokens_insert_input)
              ]))! as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_on_conflict))!
              as GauthRefreshTokens_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_bool_expSerializer
    implements StructuredSerializer<GauthRefreshTokens_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_bool_exp,
    _$GauthRefreshTokens_bool_exp
  ];
  @override
  final String wireName = 'GauthRefreshTokens_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthRefreshTokens_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthRefreshTokens_bool_exp)])));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRefreshTokens_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_bool_exp))!
              as GauthRefreshTokens_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRefreshTokens_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'expiresAt':
          result.expiresAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_constraintSerializer
    implements PrimitiveSerializer<GauthRefreshTokens_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthRefreshTokens_constraint];
  @override
  final String wireName = 'GauthRefreshTokens_constraint';

  @override
  Object serialize(
          Serializers serializers, GauthRefreshTokens_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRefreshTokens_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRefreshTokens_constraint.valueOf(serialized as String);
}

class _$GauthRefreshTokens_insert_inputSerializer
    implements StructuredSerializer<GauthRefreshTokens_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_insert_input,
    _$GauthRefreshTokens_insert_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_obj_rel_insert_input)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'expiresAt':
          result.expiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_obj_rel_insert_input))!
              as Gusers_obj_rel_insert_input);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_max_order_bySerializer
    implements StructuredSerializer<GauthRefreshTokens_max_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_max_order_by,
    _$GauthRefreshTokens_max_order_by
  ];
  @override
  final String wireName = 'GauthRefreshTokens_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'expiresAt':
          result.expiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_min_order_bySerializer
    implements StructuredSerializer<GauthRefreshTokens_min_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_min_order_by,
    _$GauthRefreshTokens_min_order_by
  ];
  @override
  final String wireName = 'GauthRefreshTokens_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'expiresAt':
          result.expiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_on_conflictSerializer
    implements StructuredSerializer<GauthRefreshTokens_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_on_conflict,
    _$GauthRefreshTokens_on_conflict
  ];
  @override
  final String wireName = 'GauthRefreshTokens_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthRefreshTokens_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthRefreshTokens_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_bool_exp)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_constraint))!
              as GauthRefreshTokens_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRefreshTokens_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_bool_exp))!
              as GauthRefreshTokens_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_order_bySerializer
    implements StructuredSerializer<GauthRefreshTokens_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_order_by,
    _$GauthRefreshTokens_order_by
  ];
  @override
  final String wireName = 'GauthRefreshTokens_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_order_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'expiresAt':
          result.expiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_order_by))!
              as Gusers_order_by);
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_pk_columns_inputSerializer
    implements StructuredSerializer<GauthRefreshTokens_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_pk_columns_input,
    _$GauthRefreshTokens_pk_columns_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'refreshToken',
      serializers.serialize(object.refreshToken,
          specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  GauthRefreshTokens_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_select_columnSerializer
    implements PrimitiveSerializer<GauthRefreshTokens_select_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthRefreshTokens_select_column];
  @override
  final String wireName = 'GauthRefreshTokens_select_column';

  @override
  Object serialize(
          Serializers serializers, GauthRefreshTokens_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRefreshTokens_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRefreshTokens_select_column.valueOf(serialized as String);
}

class _$GauthRefreshTokens_set_inputSerializer
    implements StructuredSerializer<GauthRefreshTokens_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_set_input,
    _$GauthRefreshTokens_set_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'expiresAt':
          result.expiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthRefreshTokens_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_stream_cursor_input,
    _$GauthRefreshTokens_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthRefreshTokens_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthRefreshTokens_stream_cursor_value_input))!
              as GauthRefreshTokens_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_stream_cursor_value_inputSerializer
    implements
        StructuredSerializer<GauthRefreshTokens_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_stream_cursor_value_input,
    _$GauthRefreshTokens_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthRefreshTokens_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthRefreshTokens_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.expiresAt;
    if (value != null) {
      result
        ..add('expiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'expiresAt':
          result.expiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRefreshTokens_update_columnSerializer
    implements PrimitiveSerializer<GauthRefreshTokens_update_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthRefreshTokens_update_column];
  @override
  final String wireName = 'GauthRefreshTokens_update_column';

  @override
  Object serialize(
          Serializers serializers, GauthRefreshTokens_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRefreshTokens_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRefreshTokens_update_column.valueOf(serialized as String);
}

class _$GauthRefreshTokens_updatesSerializer
    implements StructuredSerializer<GauthRefreshTokens_updates> {
  @override
  final Iterable<Type> types = const [
    GauthRefreshTokens_updates,
    _$GauthRefreshTokens_updates
  ];
  @override
  final String wireName = 'GauthRefreshTokens_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRefreshTokens_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthRefreshTokens_bool_exp)),
    ];
    Object? value;
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_set_input)));
    }
    return result;
  }

  @override
  GauthRefreshTokens_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRefreshTokens_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_set_input))!
              as GauthRefreshTokens_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_bool_exp))!
              as GauthRefreshTokens_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_bool_expSerializer
    implements StructuredSerializer<GauthRoles_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_bool_exp,
    _$GauthRoles_bool_exp
  ];
  @override
  final String wireName = 'GauthRoles_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthRoles_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthRoles_bool_exp)])));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.userRoles;
    if (value != null) {
      result
        ..add('userRoles')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_bool_exp)));
    }
    value = object.userRoles_aggregate;
    if (value != null) {
      result
        ..add('userRoles_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_aggregate_bool_exp)));
    }
    value = object.usersByDefaultRole;
    if (value != null) {
      result
        ..add('usersByDefaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.usersByDefaultRole_aggregate;
    if (value != null) {
      result
        ..add('usersByDefaultRole_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_aggregate_bool_exp)));
    }
    return result;
  }

  @override
  GauthRoles_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GauthRoles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_bool_exp))!
              as GauthRoles_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GauthRoles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'role':
          result.role.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'userRoles':
          result.userRoles.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
        case 'userRoles_aggregate':
          result.userRoles_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_aggregate_bool_exp))!
              as GauthUserRoles_aggregate_bool_exp);
          break;
        case 'usersByDefaultRole':
          result.usersByDefaultRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'usersByDefaultRole_aggregate':
          result.usersByDefaultRole_aggregate.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(Gusers_aggregate_bool_exp))!
              as Gusers_aggregate_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_constraintSerializer
    implements PrimitiveSerializer<GauthRoles_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthRoles_constraint];
  @override
  final String wireName = 'GauthRoles_constraint';

  @override
  Object serialize(Serializers serializers, GauthRoles_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRoles_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRoles_constraint.valueOf(serialized as String);
}

class _$GauthRoles_insert_inputSerializer
    implements StructuredSerializer<GauthRoles_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_insert_input,
    _$GauthRoles_insert_input
  ];
  @override
  final String wireName = 'GauthRoles_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userRoles;
    if (value != null) {
      result
        ..add('userRoles')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserRoles_arr_rel_insert_input)));
    }
    value = object.usersByDefaultRole;
    if (value != null) {
      result
        ..add('usersByDefaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_arr_rel_insert_input)));
    }
    return result;
  }

  @override
  GauthRoles_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userRoles':
          result.userRoles.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_arr_rel_insert_input))!
              as GauthUserRoles_arr_rel_insert_input);
          break;
        case 'usersByDefaultRole':
          result.usersByDefaultRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_arr_rel_insert_input))!
              as Gusers_arr_rel_insert_input);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_obj_rel_insert_inputSerializer
    implements StructuredSerializer<GauthRoles_obj_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_obj_rel_insert_input,
    _$GauthRoles_obj_rel_insert_input
  ];
  @override
  final String wireName = 'GauthRoles_obj_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_obj_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(GauthRoles_insert_input)),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_on_conflict)));
    }
    return result;
  }

  @override
  GauthRoles_obj_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_obj_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_insert_input))!
              as GauthRoles_insert_input);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_on_conflict))!
              as GauthRoles_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_on_conflictSerializer
    implements StructuredSerializer<GauthRoles_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_on_conflict,
    _$GauthRoles_on_conflict
  ];
  @override
  final String wireName = 'GauthRoles_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthRoles_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GauthRoles_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_bool_exp)));
    }
    return result;
  }

  @override
  GauthRoles_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_constraint))!
              as GauthRoles_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthRoles_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_bool_exp))!
              as GauthRoles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_order_bySerializer
    implements StructuredSerializer<GauthRoles_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_order_by,
    _$GauthRoles_order_by
  ];
  @override
  final String wireName = 'GauthRoles_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userRoles_aggregate;
    if (value != null) {
      result
        ..add('userRoles_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_aggregate_order_by)));
    }
    value = object.usersByDefaultRole_aggregate;
    if (value != null) {
      result
        ..add('usersByDefaultRole_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_aggregate_order_by)));
    }
    return result;
  }

  @override
  GauthRoles_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userRoles_aggregate':
          result.userRoles_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_aggregate_order_by))!
              as GauthUserRoles_aggregate_order_by);
          break;
        case 'usersByDefaultRole_aggregate':
          result.usersByDefaultRole_aggregate.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(Gusers_aggregate_order_by))!
              as Gusers_aggregate_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_pk_columns_inputSerializer
    implements StructuredSerializer<GauthRoles_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_pk_columns_input,
    _$GauthRoles_pk_columns_input
  ];
  @override
  final String wireName = 'GauthRoles_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'role',
      serializers.serialize(object.role, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GauthRoles_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_select_columnSerializer
    implements PrimitiveSerializer<GauthRoles_select_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthRoles_select_column];
  @override
  final String wireName = 'GauthRoles_select_column';

  @override
  Object serialize(Serializers serializers, GauthRoles_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRoles_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRoles_select_column.valueOf(serialized as String);
}

class _$GauthRoles_set_inputSerializer
    implements StructuredSerializer<GauthRoles_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_set_input,
    _$GauthRoles_set_input
  ];
  @override
  final String wireName = 'GauthRoles_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GauthRoles_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthRoles_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_stream_cursor_input,
    _$GauthRoles_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthRoles_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(GauthRoles_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthRoles_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRoles_stream_cursor_value_input))!
              as GauthRoles_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_stream_cursor_value_inputSerializer
    implements StructuredSerializer<GauthRoles_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthRoles_stream_cursor_value_input,
    _$GauthRoles_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthRoles_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GauthRoles_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthRoles_update_columnSerializer
    implements PrimitiveSerializer<GauthRoles_update_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthRoles_update_column];
  @override
  final String wireName = 'GauthRoles_update_column';

  @override
  Object serialize(Serializers serializers, GauthRoles_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthRoles_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthRoles_update_column.valueOf(serialized as String);
}

class _$GauthRoles_updatesSerializer
    implements StructuredSerializer<GauthRoles_updates> {
  @override
  final Iterable<Type> types = const [GauthRoles_updates, _$GauthRoles_updates];
  @override
  final String wireName = 'GauthRoles_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthRoles_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthRoles_bool_exp)),
    ];
    Object? value;
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_set_input)));
    }
    return result;
  }

  @override
  GauthRoles_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthRoles_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_set_input))!
              as GauthRoles_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_bool_exp))!
              as GauthRoles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_aggregate_bool_expSerializer
    implements StructuredSerializer<GauthUserProviders_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_aggregate_bool_exp,
    _$GauthUserProviders_aggregate_bool_exp
  ];
  @override
  final String wireName = 'GauthUserProviders_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  GauthUserProviders_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserProviders_aggregate_bool_exp_count))!
              as GauthUserProviders_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_aggregate_bool_exp_countSerializer
    implements
        StructuredSerializer<GauthUserProviders_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_aggregate_bool_exp_count,
    _$GauthUserProviders_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'GauthUserProviders_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserProviders_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserProviders_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserProviders_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserProviders_select_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_aggregate_order_bySerializer
    implements StructuredSerializer<GauthUserProviders_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_aggregate_order_by,
    _$GauthUserProviders_aggregate_order_by
  ];
  @override
  final String wireName = 'GauthUserProviders_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_min_order_by)));
    }
    return result;
  }

  @override
  GauthUserProviders_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_max_order_by))!
              as GauthUserProviders_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_min_order_by))!
              as GauthUserProviders_min_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_arr_rel_insert_inputSerializer
    implements StructuredSerializer<GauthUserProviders_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_arr_rel_insert_input,
    _$GauthUserProviders_arr_rel_insert_input
  ];
  @override
  final String wireName = 'GauthUserProviders_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthUserProviders_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_on_conflict)));
    }
    return result;
  }

  @override
  GauthUserProviders_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserProviders_insert_input)
              ]))! as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_on_conflict))!
              as GauthUserProviders_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_bool_expSerializer
    implements StructuredSerializer<GauthUserProviders_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_bool_exp,
    _$GauthUserProviders_bool_exp
  ];
  @override
  final String wireName = 'GauthUserProviders_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserProviders_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserProviders_bool_exp)])));
    }
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_bool_exp)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  GauthUserProviders_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserProviders_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserProviders_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'accessToken':
          result.accessToken.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'provider':
          result.provider.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_bool_exp))!
              as GauthProviders_bool_exp);
          break;
        case 'providerId':
          result.providerId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'providerUserId':
          result.providerUserId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'refreshToken':
          result.refreshToken.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_constraintSerializer
    implements PrimitiveSerializer<GauthUserProviders_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserProviders_constraint];
  @override
  final String wireName = 'GauthUserProviders_constraint';

  @override
  Object serialize(
          Serializers serializers, GauthUserProviders_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserProviders_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserProviders_constraint.valueOf(serialized as String);
}

class _$GauthUserProviders_insert_inputSerializer
    implements StructuredSerializer<GauthUserProviders_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_insert_input,
    _$GauthUserProviders_insert_input
  ];
  @override
  final String wireName = 'GauthUserProviders_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthProviders_obj_rel_insert_input)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_obj_rel_insert_input)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserProviders_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'provider':
          result.provider.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthProviders_obj_rel_insert_input))!
              as GauthProviders_obj_rel_insert_input);
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_obj_rel_insert_input))!
              as Gusers_obj_rel_insert_input);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_max_order_bySerializer
    implements StructuredSerializer<GauthUserProviders_max_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_max_order_by,
    _$GauthUserProviders_max_order_by
  ];
  @override
  final String wireName = 'GauthUserProviders_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserProviders_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_min_order_bySerializer
    implements StructuredSerializer<GauthUserProviders_min_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_min_order_by,
    _$GauthUserProviders_min_order_by
  ];
  @override
  final String wireName = 'GauthUserProviders_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserProviders_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_on_conflictSerializer
    implements StructuredSerializer<GauthUserProviders_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_on_conflict,
    _$GauthUserProviders_on_conflict
  ];
  @override
  final String wireName = 'GauthUserProviders_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthUserProviders_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthUserProviders_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserProviders_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_constraint))!
              as GauthUserProviders_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserProviders_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_order_bySerializer
    implements StructuredSerializer<GauthUserProviders_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_order_by,
    _$GauthUserProviders_order_by
  ];
  @override
  final String wireName = 'GauthUserProviders_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthProviders_order_by)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_order_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserProviders_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'provider':
          result.provider.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthProviders_order_by))!
              as GauthProviders_order_by);
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_order_by))!
              as Gusers_order_by);
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_pk_columns_inputSerializer
    implements StructuredSerializer<GauthUserProviders_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_pk_columns_input,
    _$GauthUserProviders_pk_columns_input
  ];
  @override
  final String wireName = 'GauthUserProviders_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  GauthUserProviders_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_select_columnSerializer
    implements PrimitiveSerializer<GauthUserProviders_select_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserProviders_select_column];
  @override
  final String wireName = 'GauthUserProviders_select_column';

  @override
  Object serialize(
          Serializers serializers, GauthUserProviders_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserProviders_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserProviders_select_column.valueOf(serialized as String);
}

class _$GauthUserProviders_set_inputSerializer
    implements StructuredSerializer<GauthUserProviders_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_set_input,
    _$GauthUserProviders_set_input
  ];
  @override
  final String wireName = 'GauthUserProviders_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserProviders_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthUserProviders_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_stream_cursor_input,
    _$GauthUserProviders_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthUserProviders_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthUserProviders_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthUserProviders_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserProviders_stream_cursor_value_input))!
              as GauthUserProviders_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_stream_cursor_value_inputSerializer
    implements
        StructuredSerializer<GauthUserProviders_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_stream_cursor_value_input,
    _$GauthUserProviders_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthUserProviders_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserProviders_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.accessToken;
    if (value != null) {
      result
        ..add('accessToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.providerId;
    if (value != null) {
      result
        ..add('providerId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.providerUserId;
    if (value != null) {
      result
        ..add('providerUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserProviders_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'accessToken':
          result.accessToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'providerId':
          result.providerId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'providerUserId':
          result.providerUserId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'refreshToken':
          result.refreshToken = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserProviders_update_columnSerializer
    implements PrimitiveSerializer<GauthUserProviders_update_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserProviders_update_column];
  @override
  final String wireName = 'GauthUserProviders_update_column';

  @override
  Object serialize(
          Serializers serializers, GauthUserProviders_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserProviders_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserProviders_update_column.valueOf(serialized as String);
}

class _$GauthUserProviders_updatesSerializer
    implements StructuredSerializer<GauthUserProviders_updates> {
  @override
  final Iterable<Type> types = const [
    GauthUserProviders_updates,
    _$GauthUserProviders_updates
  ];
  @override
  final String wireName = 'GauthUserProviders_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserProviders_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthUserProviders_bool_exp)),
    ];
    Object? value;
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_set_input)));
    }
    return result;
  }

  @override
  GauthUserProviders_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserProviders_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_set_input))!
              as GauthUserProviders_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_aggregate_bool_expSerializer
    implements StructuredSerializer<GauthUserRoles_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_aggregate_bool_exp,
    _$GauthUserRoles_aggregate_bool_exp
  ];
  @override
  final String wireName = 'GauthUserRoles_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserRoles_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  GauthUserRoles_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_aggregate_bool_exp_count))!
              as GauthUserRoles_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_aggregate_bool_exp_countSerializer
    implements StructuredSerializer<GauthUserRoles_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_aggregate_bool_exp_count,
    _$GauthUserRoles_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'GauthUserRoles_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserRoles_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserRoles_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserRoles_select_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_aggregate_order_bySerializer
    implements StructuredSerializer<GauthUserRoles_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_aggregate_order_by,
    _$GauthUserRoles_aggregate_order_by
  ];
  @override
  final String wireName = 'GauthUserRoles_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_min_order_by)));
    }
    return result;
  }

  @override
  GauthUserRoles_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_max_order_by))!
              as GauthUserRoles_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_min_order_by))!
              as GauthUserRoles_min_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_arr_rel_insert_inputSerializer
    implements StructuredSerializer<GauthUserRoles_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_arr_rel_insert_input,
    _$GauthUserRoles_arr_rel_insert_input
  ];
  @override
  final String wireName = 'GauthUserRoles_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GauthUserRoles_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_on_conflict)));
    }
    return result;
  }

  @override
  GauthUserRoles_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserRoles_insert_input)
              ]))! as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_on_conflict))!
              as GauthUserRoles_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_bool_expSerializer
    implements StructuredSerializer<GauthUserRoles_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_bool_exp,
    _$GauthUserRoles_bool_exp
  ];
  @override
  final String wireName = 'GauthUserRoles_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthUserRoles_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GauthUserRoles_bool_exp)])));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.roleByRole;
    if (value != null) {
      result
        ..add('roleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_bool_exp)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  GauthUserRoles_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserRoles_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserRoles_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'role':
          result.role.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'roleByRole':
          result.roleByRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_bool_exp))!
              as GauthRoles_bool_exp);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_constraintSerializer
    implements PrimitiveSerializer<GauthUserRoles_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserRoles_constraint];
  @override
  final String wireName = 'GauthUserRoles_constraint';

  @override
  Object serialize(Serializers serializers, GauthUserRoles_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserRoles_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserRoles_constraint.valueOf(serialized as String);
}

class _$GauthUserRoles_insert_inputSerializer
    implements StructuredSerializer<GauthUserRoles_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_insert_input,
    _$GauthUserRoles_insert_input
  ];
  @override
  final String wireName = 'GauthUserRoles_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.roleByRole;
    if (value != null) {
      result
        ..add('roleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_obj_rel_insert_input)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_obj_rel_insert_input)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserRoles_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'roleByRole':
          result.roleByRole.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRoles_obj_rel_insert_input))!
              as GauthRoles_obj_rel_insert_input);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_obj_rel_insert_input))!
              as Gusers_obj_rel_insert_input);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_max_order_bySerializer
    implements StructuredSerializer<GauthUserRoles_max_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_max_order_by,
    _$GauthUserRoles_max_order_by
  ];
  @override
  final String wireName = 'GauthUserRoles_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserRoles_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_min_order_bySerializer
    implements StructuredSerializer<GauthUserRoles_min_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_min_order_by,
    _$GauthUserRoles_min_order_by
  ];
  @override
  final String wireName = 'GauthUserRoles_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserRoles_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_on_conflictSerializer
    implements StructuredSerializer<GauthUserRoles_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_on_conflict,
    _$GauthUserRoles_on_conflict
  ];
  @override
  final String wireName = 'GauthUserRoles_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthUserRoles_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GauthUserRoles_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserRoles_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_constraint))!
              as GauthUserRoles_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserRoles_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_order_bySerializer
    implements StructuredSerializer<GauthUserRoles_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_order_by,
    _$GauthUserRoles_order_by
  ];
  @override
  final String wireName = 'GauthUserRoles_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.roleByRole;
    if (value != null) {
      result
        ..add('roleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_order_by)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_order_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserRoles_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'roleByRole':
          result.roleByRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_order_by))!
              as GauthRoles_order_by);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_order_by))!
              as Gusers_order_by);
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_pk_columns_inputSerializer
    implements StructuredSerializer<GauthUserRoles_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_pk_columns_input,
    _$GauthUserRoles_pk_columns_input
  ];
  @override
  final String wireName = 'GauthUserRoles_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  GauthUserRoles_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_select_columnSerializer
    implements PrimitiveSerializer<GauthUserRoles_select_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserRoles_select_column];
  @override
  final String wireName = 'GauthUserRoles_select_column';

  @override
  Object serialize(Serializers serializers, GauthUserRoles_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserRoles_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserRoles_select_column.valueOf(serialized as String);
}

class _$GauthUserRoles_set_inputSerializer
    implements StructuredSerializer<GauthUserRoles_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_set_input,
    _$GauthUserRoles_set_input
  ];
  @override
  final String wireName = 'GauthUserRoles_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserRoles_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthUserRoles_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_stream_cursor_input,
    _$GauthUserRoles_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthUserRoles_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthUserRoles_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthUserRoles_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_stream_cursor_value_input))!
              as GauthUserRoles_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_stream_cursor_value_inputSerializer
    implements StructuredSerializer<GauthUserRoles_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_stream_cursor_value_input,
    _$GauthUserRoles_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthUserRoles_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserRoles_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'role':
          result.role = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserRoles_update_columnSerializer
    implements PrimitiveSerializer<GauthUserRoles_update_column> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserRoles_update_column];
  @override
  final String wireName = 'GauthUserRoles_update_column';

  @override
  Object serialize(Serializers serializers, GauthUserRoles_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserRoles_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserRoles_update_column.valueOf(serialized as String);
}

class _$GauthUserRoles_updatesSerializer
    implements StructuredSerializer<GauthUserRoles_updates> {
  @override
  final Iterable<Type> types = const [
    GauthUserRoles_updates,
    _$GauthUserRoles_updates
  ];
  @override
  final String wireName = 'GauthUserRoles_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserRoles_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthUserRoles_bool_exp)),
    ];
    Object? value;
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_set_input)));
    }
    return result;
  }

  @override
  GauthUserRoles_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserRoles_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_set_input))!
              as GauthUserRoles_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_aggregate_bool_expSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_aggregate_bool_exp,
    _$GauthUserSecurityKeys_aggregate_bool_exp
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                GauthUserSecurityKeys_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserSecurityKeys_aggregate_bool_exp_count))!
              as GauthUserSecurityKeys_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_aggregate_bool_exp_countSerializer
    implements
        StructuredSerializer<GauthUserSecurityKeys_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_aggregate_bool_exp_count,
    _$GauthUserSecurityKeys_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserSecurityKeys_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserSecurityKeys_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserSecurityKeys_select_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_bool_exp))!
              as GauthUserSecurityKeys_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_aggregate_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_aggregate_order_by,
    _$GauthUserSecurityKeys_aggregate_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.avg;
    if (value != null) {
      result
        ..add('avg')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_avg_order_by)));
    }
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_min_order_by)));
    }
    value = object.stddev;
    if (value != null) {
      result
        ..add('stddev')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_stddev_order_by)));
    }
    value = object.stddev_pop;
    if (value != null) {
      result
        ..add('stddev_pop')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_stddev_pop_order_by)));
    }
    value = object.stddev_samp;
    if (value != null) {
      result
        ..add('stddev_samp')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_stddev_samp_order_by)));
    }
    value = object.sum;
    if (value != null) {
      result
        ..add('sum')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_sum_order_by)));
    }
    value = object.var_pop;
    if (value != null) {
      result
        ..add('var_pop')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_var_pop_order_by)));
    }
    value = object.var_samp;
    if (value != null) {
      result
        ..add('var_samp')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_var_samp_order_by)));
    }
    value = object.variance;
    if (value != null) {
      result
        ..add('variance')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_variance_order_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'avg':
          result.avg.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_avg_order_by))!
              as GauthUserSecurityKeys_avg_order_by);
          break;
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_max_order_by))!
              as GauthUserSecurityKeys_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_min_order_by))!
              as GauthUserSecurityKeys_min_order_by);
          break;
        case 'stddev':
          result.stddev.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_stddev_order_by))!
              as GauthUserSecurityKeys_stddev_order_by);
          break;
        case 'stddev_pop':
          result.stddev_pop.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserSecurityKeys_stddev_pop_order_by))!
              as GauthUserSecurityKeys_stddev_pop_order_by);
          break;
        case 'stddev_samp':
          result.stddev_samp.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserSecurityKeys_stddev_samp_order_by))!
              as GauthUserSecurityKeys_stddev_samp_order_by);
          break;
        case 'sum':
          result.sum.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_sum_order_by))!
              as GauthUserSecurityKeys_sum_order_by);
          break;
        case 'var_pop':
          result.var_pop.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_var_pop_order_by))!
              as GauthUserSecurityKeys_var_pop_order_by);
          break;
        case 'var_samp':
          result.var_samp.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_var_samp_order_by))!
              as GauthUserSecurityKeys_var_samp_order_by);
          break;
        case 'variance':
          result.variance.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_variance_order_by))!
              as GauthUserSecurityKeys_variance_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_arr_rel_insert_inputSerializer
    implements
        StructuredSerializer<GauthUserSecurityKeys_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_arr_rel_insert_input,
    _$GauthUserSecurityKeys_arr_rel_insert_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserSecurityKeys_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthUserSecurityKeys_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_on_conflict)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserSecurityKeys_insert_input)
              ]))! as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_on_conflict))!
              as GauthUserSecurityKeys_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_avg_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_avg_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_avg_order_by,
    _$GauthUserSecurityKeys_avg_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_avg_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_avg_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_avg_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_avg_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_bool_expSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_bool_exp> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_bool_exp,
    _$GauthUserSecurityKeys_bool_exp
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserSecurityKeys_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GauthUserSecurityKeys_bool_exp)])));
    }
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint_comparison_exp)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.credentialPublicKey;
    if (value != null) {
      result
        ..add('credentialPublicKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserSecurityKeys_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_bool_exp))!
              as GauthUserSecurityKeys_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserSecurityKeys_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'counter':
          result.counter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbigint_comparison_exp))!
              as Gbigint_comparison_exp);
          break;
        case 'credentialId':
          result.credentialId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'credentialPublicKey':
          result.credentialPublicKey.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbytea_comparison_exp))!
              as Gbytea_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'nickname':
          result.nickname.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'transports':
          result.transports.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_constraintSerializer
    implements PrimitiveSerializer<GauthUserSecurityKeys_constraint> {
  @override
  final Iterable<Type> types = const <Type>[GauthUserSecurityKeys_constraint];
  @override
  final String wireName = 'GauthUserSecurityKeys_constraint';

  @override
  Object serialize(
          Serializers serializers, GauthUserSecurityKeys_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserSecurityKeys_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserSecurityKeys_constraint.valueOf(serialized as String);
}

class _$GauthUserSecurityKeys_inc_inputSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_inc_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_inc_input,
    _$GauthUserSecurityKeys_inc_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_inc_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_inc_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_inc_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_inc_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_insert_inputSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_insert_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_insert_input,
    _$GauthUserSecurityKeys_insert_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.credentialPublicKey;
    if (value != null) {
      result
        ..add('credentialPublicKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_obj_rel_insert_input)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'credentialPublicKey':
          result.credentialPublicKey.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_obj_rel_insert_input))!
              as Gusers_obj_rel_insert_input);
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_max_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_max_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_max_order_by,
    _$GauthUserSecurityKeys_max_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_min_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_min_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_min_order_by,
    _$GauthUserSecurityKeys_min_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_on_conflictSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_on_conflict> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_on_conflict,
    _$GauthUserSecurityKeys_on_conflict
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(GauthUserSecurityKeys_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(BuiltList,
              const [const FullType(GauthUserSecurityKeys_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_bool_exp)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_constraint))!
              as GauthUserSecurityKeys_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GauthUserSecurityKeys_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_bool_exp))!
              as GauthUserSecurityKeys_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_order_by,
    _$GauthUserSecurityKeys_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.credentialPublicKey;
    if (value != null) {
      result
        ..add('credentialPublicKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_order_by)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'credentialPublicKey':
          result.credentialPublicKey = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'user':
          result.user.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_order_by))!
              as Gusers_order_by);
          break;
        case 'userId':
          result.userId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_pk_columns_inputSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_pk_columns_input,
    _$GauthUserSecurityKeys_pk_columns_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  GauthUserSecurityKeys_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_select_columnSerializer
    implements PrimitiveSerializer<GauthUserSecurityKeys_select_column> {
  @override
  final Iterable<Type> types = const <Type>[
    GauthUserSecurityKeys_select_column
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_select_column';

  @override
  Object serialize(
          Serializers serializers, GauthUserSecurityKeys_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserSecurityKeys_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserSecurityKeys_select_column.valueOf(serialized as String);
}

class _$GauthUserSecurityKeys_set_inputSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_set_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_set_input,
    _$GauthUserSecurityKeys_set_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.credentialPublicKey;
    if (value != null) {
      result
        ..add('credentialPublicKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'credentialPublicKey':
          result.credentialPublicKey.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_stddev_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_stddev_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_stddev_order_by,
    _$GauthUserSecurityKeys_stddev_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_stddev_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_stddev_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_stddev_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_stddev_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_stddev_pop_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_stddev_pop_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_stddev_pop_order_by,
    _$GauthUserSecurityKeys_stddev_pop_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_stddev_pop_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_stddev_pop_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_stddev_pop_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_stddev_pop_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_stddev_samp_order_bySerializer
    implements
        StructuredSerializer<GauthUserSecurityKeys_stddev_samp_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_stddev_samp_order_by,
    _$GauthUserSecurityKeys_stddev_samp_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_stddev_samp_order_by';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserSecurityKeys_stddev_samp_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_stddev_samp_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_stddev_samp_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_stream_cursor_inputSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_stream_cursor_input,
    _$GauthUserSecurityKeys_stream_cursor_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(GauthUserSecurityKeys_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserSecurityKeys_stream_cursor_value_input))!
              as GauthUserSecurityKeys_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_stream_cursor_value_inputSerializer
    implements
        StructuredSerializer<GauthUserSecurityKeys_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_stream_cursor_value_input,
    _$GauthUserSecurityKeys_stream_cursor_value_input
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(Serializers serializers,
      GauthUserSecurityKeys_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.credentialId;
    if (value != null) {
      result
        ..add('credentialId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.credentialPublicKey;
    if (value != null) {
      result
        ..add('credentialPublicKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.nickname;
    if (value != null) {
      result
        ..add('nickname')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.transports;
    if (value != null) {
      result
        ..add('transports')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userId;
    if (value != null) {
      result
        ..add('userId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case 'credentialId':
          result.credentialId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'credentialPublicKey':
          result.credentialPublicKey.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'nickname':
          result.nickname = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'transports':
          result.transports = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userId':
          result.userId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_sum_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_sum_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_sum_order_by,
    _$GauthUserSecurityKeys_sum_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_sum_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_sum_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_sum_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_sum_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_update_columnSerializer
    implements PrimitiveSerializer<GauthUserSecurityKeys_update_column> {
  @override
  final Iterable<Type> types = const <Type>[
    GauthUserSecurityKeys_update_column
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_update_column';

  @override
  Object serialize(
          Serializers serializers, GauthUserSecurityKeys_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GauthUserSecurityKeys_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GauthUserSecurityKeys_update_column.valueOf(serialized as String);
}

class _$GauthUserSecurityKeys_updatesSerializer
    implements StructuredSerializer<GauthUserSecurityKeys_updates> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_updates,
    _$GauthUserSecurityKeys_updates
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(GauthUserSecurityKeys_bool_exp)),
    ];
    Object? value;
    value = object.G_inc;
    if (value != null) {
      result
        ..add('_inc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_inc_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_set_input)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_inc':
          result.G_inc.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_inc_input))!
              as GauthUserSecurityKeys_inc_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_set_input))!
              as GauthUserSecurityKeys_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_bool_exp))!
              as GauthUserSecurityKeys_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_var_pop_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_var_pop_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_var_pop_order_by,
    _$GauthUserSecurityKeys_var_pop_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_var_pop_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_var_pop_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_var_pop_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_var_pop_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_var_samp_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_var_samp_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_var_samp_order_by,
    _$GauthUserSecurityKeys_var_samp_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_var_samp_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_var_samp_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_var_samp_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_var_samp_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$GauthUserSecurityKeys_variance_order_bySerializer
    implements StructuredSerializer<GauthUserSecurityKeys_variance_order_by> {
  @override
  final Iterable<Type> types = const [
    GauthUserSecurityKeys_variance_order_by,
    _$GauthUserSecurityKeys_variance_order_by
  ];
  @override
  final String wireName = 'GauthUserSecurityKeys_variance_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GauthUserSecurityKeys_variance_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.counter;
    if (value != null) {
      result
        ..add('counter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  GauthUserSecurityKeys_variance_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GauthUserSecurityKeys_variance_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'counter':
          result.counter = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gbigint_comparison_expSerializer
    implements StructuredSerializer<Gbigint_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Gbigint_comparison_exp,
    _$Gbigint_comparison_exp
  ];
  @override
  final String wireName = 'Gbigint_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbigint_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gbigint)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbigint)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gbigint)])));
    }
    return result;
  }

  @override
  Gbigint_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbigint_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_gt':
          result.G_gt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_gte':
          result.G_gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbigint)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_lte':
          result.G_lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_neq':
          result.G_neq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbigint))! as Gbigint);
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbigint)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_bool_expSerializer
    implements StructuredSerializer<Gbuckets_bool_exp> {
  @override
  final Iterable<Type> types = const [Gbuckets_bool_exp, _$Gbuckets_bool_exp];
  @override
  final String wireName = 'Gbuckets_bool_exp';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gbuckets_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gbuckets_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gbuckets_bool_exp)])));
    }
    value = object.cacheControl;
    if (value != null) {
      result
        ..add('cacheControl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.files;
    if (value != null) {
      result
        ..add('files')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    value = object.files_aggregate;
    if (value != null) {
      result
        ..add('files_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_aggregate_bool_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.presignedUrlsEnabled;
    if (value != null) {
      result
        ..add('presignedUrlsEnabled')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    return result;
  }

  @override
  Gbuckets_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbuckets_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_bool_exp))!
              as Gbuckets_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbuckets_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'cacheControl':
          result.cacheControl.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'downloadExpiration':
          result.downloadExpiration.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'files':
          result.files.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
        case 'files_aggregate':
          result.files_aggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_aggregate_bool_exp))!
              as Gfiles_aggregate_bool_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'presignedUrlsEnabled':
          result.presignedUrlsEnabled.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_constraintSerializer
    implements PrimitiveSerializer<Gbuckets_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Gbuckets_constraint];
  @override
  final String wireName = 'Gbuckets_constraint';

  @override
  Object serialize(Serializers serializers, Gbuckets_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gbuckets_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gbuckets_constraint.valueOf(serialized as String);
}

class _$Gbuckets_inc_inputSerializer
    implements StructuredSerializer<Gbuckets_inc_input> {
  @override
  final Iterable<Type> types = const [Gbuckets_inc_input, _$Gbuckets_inc_input];
  @override
  final String wireName = 'Gbuckets_inc_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_inc_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Gbuckets_inc_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_inc_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'downloadExpiration':
          result.downloadExpiration = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_insert_inputSerializer
    implements StructuredSerializer<Gbuckets_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_insert_input,
    _$Gbuckets_insert_input
  ];
  @override
  final String wireName = 'Gbuckets_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.cacheControl;
    if (value != null) {
      result
        ..add('cacheControl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.files;
    if (value != null) {
      result
        ..add('files')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_arr_rel_insert_input)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.presignedUrlsEnabled;
    if (value != null) {
      result
        ..add('presignedUrlsEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    return result;
  }

  @override
  Gbuckets_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'cacheControl':
          result.cacheControl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'downloadExpiration':
          result.downloadExpiration = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'files':
          result.files.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_arr_rel_insert_input))!
              as Gfiles_arr_rel_insert_input);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'presignedUrlsEnabled':
          result.presignedUrlsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_obj_rel_insert_inputSerializer
    implements StructuredSerializer<Gbuckets_obj_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_obj_rel_insert_input,
    _$Gbuckets_obj_rel_insert_input
  ];
  @override
  final String wireName = 'Gbuckets_obj_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_obj_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(Gbuckets_insert_input)),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_on_conflict)));
    }
    return result;
  }

  @override
  Gbuckets_obj_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_obj_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_insert_input))!
              as Gbuckets_insert_input);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_on_conflict))!
              as Gbuckets_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_on_conflictSerializer
    implements StructuredSerializer<Gbuckets_on_conflict> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_on_conflict,
    _$Gbuckets_on_conflict
  ];
  @override
  final String wireName = 'Gbuckets_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Gbuckets_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gbuckets_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_bool_exp)));
    }
    return result;
  }

  @override
  Gbuckets_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_constraint))!
              as Gbuckets_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Gbuckets_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_bool_exp))!
              as Gbuckets_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_order_bySerializer
    implements StructuredSerializer<Gbuckets_order_by> {
  @override
  final Iterable<Type> types = const [Gbuckets_order_by, _$Gbuckets_order_by];
  @override
  final String wireName = 'Gbuckets_order_by';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gbuckets_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.cacheControl;
    if (value != null) {
      result
        ..add('cacheControl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.files_aggregate;
    if (value != null) {
      result
        ..add('files_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_aggregate_order_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.presignedUrlsEnabled;
    if (value != null) {
      result
        ..add('presignedUrlsEnabled')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gbuckets_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'cacheControl':
          result.cacheControl = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'downloadExpiration':
          result.downloadExpiration = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'files_aggregate':
          result.files_aggregate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_aggregate_order_by))!
              as Gfiles_aggregate_order_by);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'presignedUrlsEnabled':
          result.presignedUrlsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_pk_columns_inputSerializer
    implements StructuredSerializer<Gbuckets_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_pk_columns_input,
    _$Gbuckets_pk_columns_input
  ];
  @override
  final String wireName = 'Gbuckets_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  Gbuckets_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_select_columnSerializer
    implements PrimitiveSerializer<Gbuckets_select_column> {
  @override
  final Iterable<Type> types = const <Type>[Gbuckets_select_column];
  @override
  final String wireName = 'Gbuckets_select_column';

  @override
  Object serialize(Serializers serializers, Gbuckets_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gbuckets_select_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gbuckets_select_column.valueOf(serialized as String);
}

class _$Gbuckets_set_inputSerializer
    implements StructuredSerializer<Gbuckets_set_input> {
  @override
  final Iterable<Type> types = const [Gbuckets_set_input, _$Gbuckets_set_input];
  @override
  final String wireName = 'Gbuckets_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.cacheControl;
    if (value != null) {
      result
        ..add('cacheControl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.presignedUrlsEnabled;
    if (value != null) {
      result
        ..add('presignedUrlsEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    return result;
  }

  @override
  Gbuckets_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'cacheControl':
          result.cacheControl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'downloadExpiration':
          result.downloadExpiration = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'presignedUrlsEnabled':
          result.presignedUrlsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_stream_cursor_inputSerializer
    implements StructuredSerializer<Gbuckets_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_stream_cursor_input,
    _$Gbuckets_stream_cursor_input
  ];
  @override
  final String wireName = 'Gbuckets_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(Gbuckets_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Gbuckets_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gbuckets_stream_cursor_value_input))!
              as Gbuckets_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Gbuckets_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Gbuckets_stream_cursor_value_input,
    _$Gbuckets_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Gbuckets_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbuckets_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.cacheControl;
    if (value != null) {
      result
        ..add('cacheControl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.downloadExpiration;
    if (value != null) {
      result
        ..add('downloadExpiration')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.maxUploadFileSize;
    if (value != null) {
      result
        ..add('maxUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.minUploadFileSize;
    if (value != null) {
      result
        ..add('minUploadFileSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.presignedUrlsEnabled;
    if (value != null) {
      result
        ..add('presignedUrlsEnabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    return result;
  }

  @override
  Gbuckets_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'cacheControl':
          result.cacheControl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'downloadExpiration':
          result.downloadExpiration = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'maxUploadFileSize':
          result.maxUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'minUploadFileSize':
          result.minUploadFileSize = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'presignedUrlsEnabled':
          result.presignedUrlsEnabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbuckets_update_columnSerializer
    implements PrimitiveSerializer<Gbuckets_update_column> {
  @override
  final Iterable<Type> types = const <Type>[Gbuckets_update_column];
  @override
  final String wireName = 'Gbuckets_update_column';

  @override
  Object serialize(Serializers serializers, Gbuckets_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gbuckets_update_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gbuckets_update_column.valueOf(serialized as String);
}

class _$Gbuckets_updatesSerializer
    implements StructuredSerializer<Gbuckets_updates> {
  @override
  final Iterable<Type> types = const [Gbuckets_updates, _$Gbuckets_updates];
  @override
  final String wireName = 'Gbuckets_updates';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gbuckets_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Gbuckets_bool_exp)),
    ];
    Object? value;
    value = object.G_inc;
    if (value != null) {
      result
        ..add('_inc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_inc_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_set_input)));
    }
    return result;
  }

  @override
  Gbuckets_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbuckets_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_inc':
          result.G_inc.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_inc_input))!
              as Gbuckets_inc_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_set_input))!
              as Gbuckets_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_bool_exp))!
              as Gbuckets_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gbytea_comparison_expSerializer
    implements StructuredSerializer<Gbytea_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Gbytea_comparison_exp,
    _$Gbytea_comparison_exp
  ];
  @override
  final String wireName = 'Gbytea_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gbytea_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gbytea)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbytea)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gbytea)])));
    }
    return result;
  }

  @override
  Gbytea_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gbytea_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_gt':
          result.G_gt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_gte':
          result.G_gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbytea)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_lte':
          result.G_lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_neq':
          result.G_neq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gbytea))! as Gbytea);
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gbytea)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcitext_comparison_expSerializer
    implements StructuredSerializer<Gcitext_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Gcitext_comparison_exp,
    _$Gcitext_comparison_exp
  ];
  @override
  final String wireName = 'Gcitext_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gcitext_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_ilike;
    if (value != null) {
      result
        ..add('_ilike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gcitext)])));
    }
    value = object.G_iregex;
    if (value != null) {
      result
        ..add('_iregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_like;
    if (value != null) {
      result
        ..add('_like')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_nilike;
    if (value != null) {
      result
        ..add('_nilike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Gcitext)])));
    }
    value = object.G_niregex;
    if (value != null) {
      result
        ..add('_niregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_nlike;
    if (value != null) {
      result
        ..add('_nlike')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_nregex;
    if (value != null) {
      result
        ..add('_nregex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_nsimilar;
    if (value != null) {
      result
        ..add('_nsimilar')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_regex;
    if (value != null) {
      result
        ..add('_regex')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.G_similar;
    if (value != null) {
      result
        ..add('_similar')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    return result;
  }

  @override
  Gcitext_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gcitext_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_gt':
          result.G_gt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_gte':
          result.G_gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_ilike':
          result.G_ilike.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gcitext)]))!
              as BuiltList<Object?>);
          break;
        case '_iregex':
          result.G_iregex.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_like':
          result.G_like.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_lt':
          result.G_lt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_lte':
          result.G_lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_neq':
          result.G_neq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_nilike':
          result.G_nilike.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gcitext)]))!
              as BuiltList<Object?>);
          break;
        case '_niregex':
          result.G_niregex.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_nlike':
          result.G_nlike.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_nregex':
          result.G_nregex.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_nsimilar':
          result.G_nsimilar.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_regex':
          result.G_regex.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case '_similar':
          result.G_similar.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
      }
    }

    return result.build();
  }
}

class _$Gcursor_orderingSerializer
    implements PrimitiveSerializer<Gcursor_ordering> {
  @override
  final Iterable<Type> types = const <Type>[Gcursor_ordering];
  @override
  final String wireName = 'Gcursor_ordering';

  @override
  Object serialize(Serializers serializers, Gcursor_ordering object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gcursor_ordering deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gcursor_ordering.valueOf(serialized as String);
}

class _$Gfiles_aggregate_bool_expSerializer
    implements StructuredSerializer<Gfiles_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    Gfiles_aggregate_bool_exp,
    _$Gfiles_aggregate_bool_exp
  ];
  @override
  final String wireName = 'Gfiles_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bool_and;
    if (value != null) {
      result
        ..add('bool_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_aggregate_bool_exp_bool_and)));
    }
    value = object.bool_or;
    if (value != null) {
      result
        ..add('bool_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_aggregate_bool_exp_bool_or)));
    }
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  Gfiles_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bool_and':
          result.bool_and.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gfiles_aggregate_bool_exp_bool_and))!
              as Gfiles_aggregate_bool_exp_bool_and);
          break;
        case 'bool_or':
          result.bool_or.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gfiles_aggregate_bool_exp_bool_or))!
              as Gfiles_aggregate_bool_exp_bool_or);
          break;
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gfiles_aggregate_bool_exp_count))!
              as Gfiles_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_aggregate_bool_exp_bool_andSerializer
    implements StructuredSerializer<Gfiles_aggregate_bool_exp_bool_and> {
  @override
  final Iterable<Type> types = const [
    Gfiles_aggregate_bool_exp_bool_and,
    _$Gfiles_aggregate_bool_exp_bool_and
  ];
  @override
  final String wireName = 'Gfiles_aggregate_bool_exp_bool_and';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_aggregate_bool_exp_bool_and object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'arguments',
      serializers.serialize(object.arguments,
          specifiedType: const FullType(
              Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns)),
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GBoolean_comparison_exp)),
    ];
    Object? value;
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    return result;
  }

  @override
  Gfiles_aggregate_bool_exp_bool_and deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_aggregate_bool_exp_bool_andBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments = serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns))!
              as Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns;
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_aggregate_bool_exp_bool_orSerializer
    implements StructuredSerializer<Gfiles_aggregate_bool_exp_bool_or> {
  @override
  final Iterable<Type> types = const [
    Gfiles_aggregate_bool_exp_bool_or,
    _$Gfiles_aggregate_bool_exp_bool_or
  ];
  @override
  final String wireName = 'Gfiles_aggregate_bool_exp_bool_or';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_aggregate_bool_exp_bool_or object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'arguments',
      serializers.serialize(object.arguments,
          specifiedType: const FullType(
              Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns)),
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GBoolean_comparison_exp)),
    ];
    Object? value;
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    return result;
  }

  @override
  Gfiles_aggregate_bool_exp_bool_or deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_aggregate_bool_exp_bool_orBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments = serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns))!
              as Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns;
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_aggregate_bool_exp_countSerializer
    implements StructuredSerializer<Gfiles_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    Gfiles_aggregate_bool_exp_count,
    _$Gfiles_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'Gfiles_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gfiles_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    return result;
  }

  @override
  Gfiles_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gfiles_select_column)]))!
              as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_aggregate_order_bySerializer
    implements StructuredSerializer<Gfiles_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_aggregate_order_by,
    _$Gfiles_aggregate_order_by
  ];
  @override
  final String wireName = 'Gfiles_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.avg;
    if (value != null) {
      result
        ..add('avg')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_avg_order_by)));
    }
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_min_order_by)));
    }
    value = object.stddev;
    if (value != null) {
      result
        ..add('stddev')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_stddev_order_by)));
    }
    value = object.stddev_pop;
    if (value != null) {
      result
        ..add('stddev_pop')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_stddev_pop_order_by)));
    }
    value = object.stddev_samp;
    if (value != null) {
      result
        ..add('stddev_samp')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_stddev_samp_order_by)));
    }
    value = object.sum;
    if (value != null) {
      result
        ..add('sum')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_sum_order_by)));
    }
    value = object.var_pop;
    if (value != null) {
      result
        ..add('var_pop')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_var_pop_order_by)));
    }
    value = object.var_samp;
    if (value != null) {
      result
        ..add('var_samp')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_var_samp_order_by)));
    }
    value = object.variance;
    if (value != null) {
      result
        ..add('variance')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_variance_order_by)));
    }
    return result;
  }

  @override
  Gfiles_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'avg':
          result.avg.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_avg_order_by))!
              as Gfiles_avg_order_by);
          break;
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_max_order_by))!
              as Gfiles_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_min_order_by))!
              as Gfiles_min_order_by);
          break;
        case 'stddev':
          result.stddev.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_stddev_order_by))!
              as Gfiles_stddev_order_by);
          break;
        case 'stddev_pop':
          result.stddev_pop.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_stddev_pop_order_by))!
              as Gfiles_stddev_pop_order_by);
          break;
        case 'stddev_samp':
          result.stddev_samp.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_stddev_samp_order_by))!
              as Gfiles_stddev_samp_order_by);
          break;
        case 'sum':
          result.sum.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_sum_order_by))!
              as Gfiles_sum_order_by);
          break;
        case 'var_pop':
          result.var_pop.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_var_pop_order_by))!
              as Gfiles_var_pop_order_by);
          break;
        case 'var_samp':
          result.var_samp.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_var_samp_order_by))!
              as Gfiles_var_samp_order_by);
          break;
        case 'variance':
          result.variance.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_variance_order_by))!
              as Gfiles_variance_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_arr_rel_insert_inputSerializer
    implements StructuredSerializer<Gfiles_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gfiles_arr_rel_insert_input,
    _$Gfiles_arr_rel_insert_input
  ];
  @override
  final String wireName = 'Gfiles_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gfiles_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_on_conflict)));
    }
    return result;
  }

  @override
  Gfiles_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gfiles_insert_input)]))!
              as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_on_conflict))!
              as Gfiles_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_avg_order_bySerializer
    implements StructuredSerializer<Gfiles_avg_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_avg_order_by,
    _$Gfiles_avg_order_by
  ];
  @override
  final String wireName = 'Gfiles_avg_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_avg_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_avg_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_avg_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_bool_expSerializer
    implements StructuredSerializer<Gfiles_bool_exp> {
  @override
  final Iterable<Type> types = const [Gfiles_bool_exp, _$Gfiles_bool_exp];
  @override
  final String wireName = 'Gfiles_bool_exp';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gfiles_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gfiles_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gfiles_bool_exp)])));
    }
    value = object.bucket;
    if (value != null) {
      result
        ..add('bucket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_bool_exp)));
    }
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.isUploaded;
    if (value != null) {
      result
        ..add('isUploaded')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  Gfiles_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gfiles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gfiles_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'bucket':
          result.bucket.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_bool_exp))!
              as Gbuckets_bool_exp);
          break;
        case 'bucketId':
          result.bucketId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'etag':
          result.etag.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'isUploaded':
          result.isUploaded.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'mimeType':
          result.mimeType.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'name':
          result.name.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'size':
          result.size.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_constraintSerializer
    implements PrimitiveSerializer<Gfiles_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Gfiles_constraint];
  @override
  final String wireName = 'Gfiles_constraint';

  @override
  Object serialize(Serializers serializers, Gfiles_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gfiles_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gfiles_constraint.valueOf(serialized as String);
}

class _$Gfiles_inc_inputSerializer
    implements StructuredSerializer<Gfiles_inc_input> {
  @override
  final Iterable<Type> types = const [Gfiles_inc_input, _$Gfiles_inc_input];
  @override
  final String wireName = 'Gfiles_inc_input';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gfiles_inc_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Gfiles_inc_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_inc_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_insert_inputSerializer
    implements StructuredSerializer<Gfiles_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gfiles_insert_input,
    _$Gfiles_insert_input
  ];
  @override
  final String wireName = 'Gfiles_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucket;
    if (value != null) {
      result
        ..add('bucket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_obj_rel_insert_input)));
    }
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isUploaded;
    if (value != null) {
      result
        ..add('isUploaded')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Gfiles_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucket':
          result.bucket.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_obj_rel_insert_input))!
              as Gbuckets_obj_rel_insert_input);
          break;
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isUploaded':
          result.isUploaded = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_max_order_bySerializer
    implements StructuredSerializer<Gfiles_max_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_max_order_by,
    _$Gfiles_max_order_by
  ];
  @override
  final String wireName = 'Gfiles_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_min_order_bySerializer
    implements StructuredSerializer<Gfiles_min_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_min_order_by,
    _$Gfiles_min_order_by
  ];
  @override
  final String wireName = 'Gfiles_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_on_conflictSerializer
    implements StructuredSerializer<Gfiles_on_conflict> {
  @override
  final Iterable<Type> types = const [Gfiles_on_conflict, _$Gfiles_on_conflict];
  @override
  final String wireName = 'Gfiles_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Gfiles_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gfiles_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_bool_exp)));
    }
    return result;
  }

  @override
  Gfiles_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_constraint))!
              as Gfiles_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gfiles_update_column)]))!
              as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_order_bySerializer
    implements StructuredSerializer<Gfiles_order_by> {
  @override
  final Iterable<Type> types = const [Gfiles_order_by, _$Gfiles_order_by];
  @override
  final String wireName = 'Gfiles_order_by';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gfiles_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucket;
    if (value != null) {
      result
        ..add('bucket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gbuckets_order_by)));
    }
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.isUploaded;
    if (value != null) {
      result
        ..add('isUploaded')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucket':
          result.bucket.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gbuckets_order_by))!
              as Gbuckets_order_by);
          break;
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'isUploaded':
          result.isUploaded = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_pk_columns_inputSerializer
    implements StructuredSerializer<Gfiles_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Gfiles_pk_columns_input,
    _$Gfiles_pk_columns_input
  ];
  @override
  final String wireName = 'Gfiles_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  Gfiles_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_select_columnSerializer
    implements PrimitiveSerializer<Gfiles_select_column> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'Gname': 'name',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'name': 'Gname',
  };

  @override
  final Iterable<Type> types = const <Type>[Gfiles_select_column];
  @override
  final String wireName = 'Gfiles_select_column';

  @override
  Object serialize(Serializers serializers, Gfiles_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  Gfiles_select_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gfiles_select_column.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columnsSerializer
    implements
        PrimitiveSerializer<
            Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns> {
  @override
  final Iterable<Type> types = const <Type>[
    Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
  ];
  @override
  final String wireName =
      'Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns';

  @override
  Object serialize(
          Serializers serializers,
          Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
              object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
      deserialize(Serializers serializers, Object serialized,
              {FullType specifiedType = FullType.unspecified}) =>
          Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
              .valueOf(serialized as String);
}

class _$Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columnsSerializer
    implements
        PrimitiveSerializer<
            Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns> {
  @override
  final Iterable<Type> types = const <Type>[
    Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
  ];
  @override
  final String wireName =
      'Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns';

  @override
  Object serialize(
          Serializers serializers,
          Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
              object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
      deserialize(Serializers serializers, Object serialized,
              {FullType specifiedType = FullType.unspecified}) =>
          Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
              .valueOf(serialized as String);
}

class _$Gfiles_set_inputSerializer
    implements StructuredSerializer<Gfiles_set_input> {
  @override
  final Iterable<Type> types = const [Gfiles_set_input, _$Gfiles_set_input];
  @override
  final String wireName = 'Gfiles_set_input';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gfiles_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isUploaded;
    if (value != null) {
      result
        ..add('isUploaded')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Gfiles_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isUploaded':
          result.isUploaded = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_stddev_order_bySerializer
    implements StructuredSerializer<Gfiles_stddev_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_stddev_order_by,
    _$Gfiles_stddev_order_by
  ];
  @override
  final String wireName = 'Gfiles_stddev_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_stddev_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_stddev_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_stddev_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_stddev_pop_order_bySerializer
    implements StructuredSerializer<Gfiles_stddev_pop_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_stddev_pop_order_by,
    _$Gfiles_stddev_pop_order_by
  ];
  @override
  final String wireName = 'Gfiles_stddev_pop_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_stddev_pop_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_stddev_pop_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_stddev_pop_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_stddev_samp_order_bySerializer
    implements StructuredSerializer<Gfiles_stddev_samp_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_stddev_samp_order_by,
    _$Gfiles_stddev_samp_order_by
  ];
  @override
  final String wireName = 'Gfiles_stddev_samp_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_stddev_samp_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_stddev_samp_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_stddev_samp_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_stream_cursor_inputSerializer
    implements StructuredSerializer<Gfiles_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Gfiles_stream_cursor_input,
    _$Gfiles_stream_cursor_input
  ];
  @override
  final String wireName = 'Gfiles_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(Gfiles_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Gfiles_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gfiles_stream_cursor_value_input))!
              as Gfiles_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Gfiles_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Gfiles_stream_cursor_value_input,
    _$Gfiles_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Gfiles_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bucketId;
    if (value != null) {
      result
        ..add('bucketId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.etag;
    if (value != null) {
      result
        ..add('etag')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isUploaded;
    if (value != null) {
      result
        ..add('isUploaded')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.mimeType;
    if (value != null) {
      result
        ..add('mimeType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.uploadedByUserId;
    if (value != null) {
      result
        ..add('uploadedByUserId')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Gfiles_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bucketId':
          result.bucketId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'etag':
          result.etag = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isUploaded':
          result.isUploaded = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'uploadedByUserId':
          result.uploadedByUserId.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_sum_order_bySerializer
    implements StructuredSerializer<Gfiles_sum_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_sum_order_by,
    _$Gfiles_sum_order_by
  ];
  @override
  final String wireName = 'Gfiles_sum_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_sum_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_sum_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_sum_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_update_columnSerializer
    implements PrimitiveSerializer<Gfiles_update_column> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'Gname': 'name',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'name': 'Gname',
  };

  @override
  final Iterable<Type> types = const <Type>[Gfiles_update_column];
  @override
  final String wireName = 'Gfiles_update_column';

  @override
  Object serialize(Serializers serializers, Gfiles_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  Gfiles_update_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gfiles_update_column.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$Gfiles_updatesSerializer
    implements StructuredSerializer<Gfiles_updates> {
  @override
  final Iterable<Type> types = const [Gfiles_updates, _$Gfiles_updates];
  @override
  final String wireName = 'Gfiles_updates';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gfiles_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Gfiles_bool_exp)),
    ];
    Object? value;
    value = object.G_inc;
    if (value != null) {
      result
        ..add('_inc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_inc_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gfiles_set_input)));
    }
    return result;
  }

  @override
  Gfiles_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_inc':
          result.G_inc.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_inc_input))!
              as Gfiles_inc_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_set_input))!
              as Gfiles_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gfiles_bool_exp))!
              as Gfiles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_var_pop_order_bySerializer
    implements StructuredSerializer<Gfiles_var_pop_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_var_pop_order_by,
    _$Gfiles_var_pop_order_by
  ];
  @override
  final String wireName = 'Gfiles_var_pop_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_var_pop_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_var_pop_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_var_pop_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_var_samp_order_bySerializer
    implements StructuredSerializer<Gfiles_var_samp_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_var_samp_order_by,
    _$Gfiles_var_samp_order_by
  ];
  @override
  final String wireName = 'Gfiles_var_samp_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_var_samp_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_var_samp_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_var_samp_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gfiles_variance_order_bySerializer
    implements StructuredSerializer<Gfiles_variance_order_by> {
  @override
  final Iterable<Type> types = const [
    Gfiles_variance_order_by,
    _$Gfiles_variance_order_by
  ];
  @override
  final String wireName = 'Gfiles_variance_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gfiles_variance_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gfiles_variance_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gfiles_variance_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'size':
          result.size = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gjsonb_cast_expSerializer
    implements StructuredSerializer<Gjsonb_cast_exp> {
  @override
  final Iterable<Type> types = const [Gjsonb_cast_exp, _$Gjsonb_cast_exp];
  @override
  final String wireName = 'Gjsonb_cast_exp';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gjsonb_cast_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.GString;
    if (value != null) {
      result
        ..add('String')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    return result;
  }

  @override
  Gjsonb_cast_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gjsonb_cast_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'String':
          result.GString.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gjsonb_comparison_expSerializer
    implements StructuredSerializer<Gjsonb_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Gjsonb_comparison_exp,
    _$Gjsonb_comparison_exp
  ];
  @override
  final String wireName = 'Gjsonb_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gjsonb_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_cast;
    if (value != null) {
      result
        ..add('_cast')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gjsonb_cast_exp)));
    }
    value = object.G_contained_in;
    if (value != null) {
      result
        ..add('_contained_in')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_contains;
    if (value != null) {
      result
        ..add('_contains')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_has_key;
    if (value != null) {
      result
        ..add('_has_key')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.G_has_keys_all;
    if (value != null) {
      result
        ..add('_has_keys_all')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.G_has_keys_any;
    if (value != null) {
      result
        ..add('_has_keys_any')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(_i2.JsonObject)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(_i2.JsonObject)])));
    }
    return result;
  }

  @override
  Gjsonb_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gjsonb_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_cast':
          result.G_cast.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gjsonb_cast_exp))!
              as Gjsonb_cast_exp);
          break;
        case '_contained_in':
          result.G_contained_in = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_contains':
          result.G_contains = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_eq':
          result.G_eq = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_gt':
          result.G_gt = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_gte':
          result.G_gte = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_has_key':
          result.G_has_key = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case '_has_keys_all':
          result.G_has_keys_all.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case '_has_keys_any':
          result.G_has_keys_any.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(_i2.JsonObject)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_lte':
          result.G_lte = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_neq':
          result.G_neq = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(_i2.JsonObject)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Gorder_bySerializer implements PrimitiveSerializer<Gorder_by> {
  @override
  final Iterable<Type> types = const <Type>[Gorder_by];
  @override
  final String wireName = 'Gorder_by';

  @override
  Object serialize(Serializers serializers, Gorder_by object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gorder_by deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gorder_by.valueOf(serialized as String);
}

class _$Gtimestamptz_comparison_expSerializer
    implements StructuredSerializer<Gtimestamptz_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Gtimestamptz_comparison_exp,
    _$Gtimestamptz_comparison_exp
  ];
  @override
  final String wireName = 'Gtimestamptz_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gtimestamptz_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gtimestamptz)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gtimestamptz)])));
    }
    return result;
  }

  @override
  Gtimestamptz_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gtimestamptz_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_gt':
          result.G_gt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_gte':
          result.G_gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gtimestamptz)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_lte':
          result.G_lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_neq':
          result.G_neq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gtimestamptz)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_bool_expSerializer
    implements StructuredSerializer<Guser_articles_bool_exp> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_bool_exp,
    _$Guser_articles_bool_exp
  ];
  @override
  final String wireName = 'Guser_articles_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Guser_articles_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guser_articles_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Guser_articles_bool_exp)])));
    }
    value = object.article_id;
    if (value != null) {
      result
        ..add('article_id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.user_id;
    if (value != null) {
      result
        ..add('user_id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    return result;
  }

  @override
  Guser_articles_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Guser_articles_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_bool_exp))!
              as Guser_articles_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Guser_articles_bool_exp)
              ]))! as BuiltList<Object?>);
          break;
        case 'article_id':
          result.article_id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'play_at':
          result.play_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'user_id':
          result.user_id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_constraintSerializer
    implements PrimitiveSerializer<Guser_articles_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Guser_articles_constraint];
  @override
  final String wireName = 'Guser_articles_constraint';

  @override
  Object serialize(Serializers serializers, Guser_articles_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Guser_articles_constraint deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Guser_articles_constraint.valueOf(serialized as String);
}

class _$Guser_articles_inc_inputSerializer
    implements StructuredSerializer<Guser_articles_inc_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_inc_input,
    _$Guser_articles_inc_input
  ];
  @override
  final String wireName = 'Guser_articles_inc_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_inc_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Guser_articles_inc_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_inc_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'play_at':
          result.play_at = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_insert_inputSerializer
    implements StructuredSerializer<Guser_articles_insert_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_insert_input,
    _$Guser_articles_insert_input
  ];
  @override
  final String wireName = 'Guser_articles_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.article_id;
    if (value != null) {
      result
        ..add('article_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.user_id;
    if (value != null) {
      result
        ..add('user_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Guser_articles_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'article_id':
          result.article_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'play_at':
          result.play_at = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'user_id':
          result.user_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_on_conflictSerializer
    implements StructuredSerializer<Guser_articles_on_conflict> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_on_conflict,
    _$Guser_articles_on_conflict
  ];
  @override
  final String wireName = 'Guser_articles_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Guser_articles_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Guser_articles_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guser_articles_bool_exp)));
    }
    return result;
  }

  @override
  Guser_articles_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_constraint))!
              as Guser_articles_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(Guser_articles_update_column)
              ]))! as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_bool_exp))!
              as Guser_articles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_order_bySerializer
    implements StructuredSerializer<Guser_articles_order_by> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_order_by,
    _$Guser_articles_order_by
  ];
  @override
  final String wireName = 'Guser_articles_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.article_id;
    if (value != null) {
      result
        ..add('article_id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.user_id;
    if (value != null) {
      result
        ..add('user_id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Guser_articles_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'article_id':
          result.article_id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'created_at':
          result.created_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'created_by':
          result.created_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'deleted_at':
          result.deleted_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'play_at':
          result.play_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_at':
          result.updated_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_by':
          result.updated_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'user_id':
          result.user_id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_pk_columns_inputSerializer
    implements StructuredSerializer<Guser_articles_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_pk_columns_input,
    _$Guser_articles_pk_columns_input
  ];
  @override
  final String wireName = 'Guser_articles_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  Guser_articles_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_select_columnSerializer
    implements PrimitiveSerializer<Guser_articles_select_column> {
  @override
  final Iterable<Type> types = const <Type>[Guser_articles_select_column];
  @override
  final String wireName = 'Guser_articles_select_column';

  @override
  Object serialize(Serializers serializers, Guser_articles_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Guser_articles_select_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Guser_articles_select_column.valueOf(serialized as String);
}

class _$Guser_articles_set_inputSerializer
    implements StructuredSerializer<Guser_articles_set_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_set_input,
    _$Guser_articles_set_input
  ];
  @override
  final String wireName = 'Guser_articles_set_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.article_id;
    if (value != null) {
      result
        ..add('article_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.user_id;
    if (value != null) {
      result
        ..add('user_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Guser_articles_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'article_id':
          result.article_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'play_at':
          result.play_at = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'user_id':
          result.user_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_stream_cursor_inputSerializer
    implements StructuredSerializer<Guser_articles_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_stream_cursor_input,
    _$Guser_articles_stream_cursor_input
  ];
  @override
  final String wireName = 'Guser_articles_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType:
              const FullType(Guser_articles_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Guser_articles_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Guser_articles_stream_cursor_value_input))!
              as Guser_articles_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Guser_articles_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_stream_cursor_value_input,
    _$Guser_articles_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Guser_articles_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.article_id;
    if (value != null) {
      result
        ..add('article_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.play_at;
    if (value != null) {
      result
        ..add('play_at')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.user_id;
    if (value != null) {
      result
        ..add('user_id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    return result;
  }

  @override
  Guser_articles_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'article_id':
          result.article_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'play_at':
          result.play_at = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'user_id':
          result.user_id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Guser_articles_update_columnSerializer
    implements PrimitiveSerializer<Guser_articles_update_column> {
  @override
  final Iterable<Type> types = const <Type>[Guser_articles_update_column];
  @override
  final String wireName = 'Guser_articles_update_column';

  @override
  Object serialize(Serializers serializers, Guser_articles_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Guser_articles_update_column deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Guser_articles_update_column.valueOf(serialized as String);
}

class _$Guser_articles_updatesSerializer
    implements StructuredSerializer<Guser_articles_updates> {
  @override
  final Iterable<Type> types = const [
    Guser_articles_updates,
    _$Guser_articles_updates
  ];
  @override
  final String wireName = 'Guser_articles_updates';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guser_articles_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Guser_articles_bool_exp)),
    ];
    Object? value;
    value = object.G_inc;
    if (value != null) {
      result
        ..add('_inc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guser_articles_inc_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guser_articles_set_input)));
    }
    return result;
  }

  @override
  Guser_articles_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guser_articles_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_inc':
          result.G_inc.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_inc_input))!
              as Guser_articles_inc_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_set_input))!
              as Guser_articles_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guser_articles_bool_exp))!
              as Guser_articles_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_aggregate_bool_expSerializer
    implements StructuredSerializer<Gusers_aggregate_bool_exp> {
  @override
  final Iterable<Type> types = const [
    Gusers_aggregate_bool_exp,
    _$Gusers_aggregate_bool_exp
  ];
  @override
  final String wireName = 'Gusers_aggregate_bool_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_aggregate_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.bool_and;
    if (value != null) {
      result
        ..add('bool_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_aggregate_bool_exp_bool_and)));
    }
    value = object.bool_or;
    if (value != null) {
      result
        ..add('bool_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_aggregate_bool_exp_bool_or)));
    }
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_aggregate_bool_exp_count)));
    }
    return result;
  }

  @override
  Gusers_aggregate_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_aggregate_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'bool_and':
          result.bool_and.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gusers_aggregate_bool_exp_bool_and))!
              as Gusers_aggregate_bool_exp_bool_and);
          break;
        case 'bool_or':
          result.bool_or.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gusers_aggregate_bool_exp_bool_or))!
              as Gusers_aggregate_bool_exp_bool_or);
          break;
        case 'count':
          result.count.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gusers_aggregate_bool_exp_count))!
              as Gusers_aggregate_bool_exp_count);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_aggregate_bool_exp_bool_andSerializer
    implements StructuredSerializer<Gusers_aggregate_bool_exp_bool_and> {
  @override
  final Iterable<Type> types = const [
    Gusers_aggregate_bool_exp_bool_and,
    _$Gusers_aggregate_bool_exp_bool_and
  ];
  @override
  final String wireName = 'Gusers_aggregate_bool_exp_bool_and';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_aggregate_bool_exp_bool_and object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'arguments',
      serializers.serialize(object.arguments,
          specifiedType: const FullType(
              Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns)),
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GBoolean_comparison_exp)),
    ];
    Object? value;
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    return result;
  }

  @override
  Gusers_aggregate_bool_exp_bool_and deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_aggregate_bool_exp_bool_andBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments = serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns))!
              as Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns;
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_aggregate_bool_exp_bool_orSerializer
    implements StructuredSerializer<Gusers_aggregate_bool_exp_bool_or> {
  @override
  final Iterable<Type> types = const [
    Gusers_aggregate_bool_exp_bool_or,
    _$Gusers_aggregate_bool_exp_bool_or
  ];
  @override
  final String wireName = 'Gusers_aggregate_bool_exp_bool_or';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_aggregate_bool_exp_bool_or object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'arguments',
      serializers.serialize(object.arguments,
          specifiedType: const FullType(
              Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns)),
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GBoolean_comparison_exp)),
    ];
    Object? value;
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    return result;
  }

  @override
  Gusers_aggregate_bool_exp_bool_or deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_aggregate_bool_exp_bool_orBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments = serializers.deserialize(value,
                  specifiedType: const FullType(
                      Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns))!
              as Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns;
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_aggregate_bool_exp_countSerializer
    implements StructuredSerializer<Gusers_aggregate_bool_exp_count> {
  @override
  final Iterable<Type> types = const [
    Gusers_aggregate_bool_exp_count,
    _$Gusers_aggregate_bool_exp_count
  ];
  @override
  final String wireName = 'Gusers_aggregate_bool_exp_count';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_aggregate_bool_exp_count object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'predicate',
      serializers.serialize(object.predicate,
          specifiedType: const FullType(GInt_comparison_exp)),
    ];
    Object? value;
    value = object.arguments;
    if (value != null) {
      result
        ..add('arguments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gusers_select_column)])));
    }
    value = object.distinct;
    if (value != null) {
      result
        ..add('distinct')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    return result;
  }

  @override
  Gusers_aggregate_bool_exp_count deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_aggregate_bool_exp_countBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'arguments':
          result.arguments.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gusers_select_column)]))!
              as BuiltList<Object?>);
          break;
        case 'distinct':
          result.distinct = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case 'predicate':
          result.predicate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_aggregate_order_bySerializer
    implements StructuredSerializer<Gusers_aggregate_order_by> {
  @override
  final Iterable<Type> types = const [
    Gusers_aggregate_order_by,
    _$Gusers_aggregate_order_by
  ];
  @override
  final String wireName = 'Gusers_aggregate_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_aggregate_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.max;
    if (value != null) {
      result
        ..add('max')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_max_order_by)));
    }
    value = object.min;
    if (value != null) {
      result
        ..add('min')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_min_order_by)));
    }
    return result;
  }

  @override
  Gusers_aggregate_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_aggregate_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'max':
          result.max.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_max_order_by))!
              as Gusers_max_order_by);
          break;
        case 'min':
          result.min.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_min_order_by))!
              as Gusers_min_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_append_inputSerializer
    implements StructuredSerializer<Gusers_append_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_append_input,
    _$Gusers_append_input
  ];
  @override
  final String wireName = 'Gusers_append_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_append_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  Gusers_append_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_append_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_arr_rel_insert_inputSerializer
    implements StructuredSerializer<Gusers_arr_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_arr_rel_insert_input,
    _$Gusers_arr_rel_insert_input
  ];
  @override
  final String wireName = 'Gusers_arr_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_arr_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gusers_insert_input)])),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_on_conflict)));
    }
    return result;
  }

  @override
  Gusers_arr_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_arr_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gusers_insert_input)]))!
              as BuiltList<Object?>);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_on_conflict))!
              as Gusers_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_bool_expSerializer
    implements StructuredSerializer<Gusers_bool_exp> {
  @override
  final Iterable<Type> types = const [Gusers_bool_exp, _$Gusers_bool_exp];
  @override
  final String wireName = 'Gusers_bool_exp';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gusers_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gusers_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gusers_bool_exp)])));
    }
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.defaultRoleByRole;
    if (value != null) {
      result
        ..add('defaultRoleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_bool_exp)));
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext_comparison_exp)));
    }
    value = object.emailVerified;
    if (value != null) {
      result
        ..add('emailVerified')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.isAnonymous;
    if (value != null) {
      result
        ..add('isAnonymous')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gjsonb_comparison_exp)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext_comparison_exp)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.phoneNumberVerified;
    if (value != null) {
      result
        ..add('phoneNumberVerified')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.refreshTokens;
    if (value != null) {
      result
        ..add('refreshTokens')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRefreshTokens_bool_exp)));
    }
    value = object.refreshTokens_aggregate;
    if (value != null) {
      result
        ..add('refreshTokens_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthRefreshTokens_aggregate_bool_exp)));
    }
    value = object.roles;
    if (value != null) {
      result
        ..add('roles')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_bool_exp)));
    }
    value = object.roles_aggregate;
    if (value != null) {
      result
        ..add('roles_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_aggregate_bool_exp)));
    }
    value = object.securityKeys;
    if (value != null) {
      result
        ..add('securityKeys')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserSecurityKeys_bool_exp)));
    }
    value = object.securityKeys_aggregate;
    if (value != null) {
      result
        ..add('securityKeys_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_aggregate_bool_exp)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.userProviders;
    if (value != null) {
      result
        ..add('userProviders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserProviders_bool_exp)));
    }
    value = object.userProviders_aggregate;
    if (value != null) {
      result
        ..add('userProviders_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_aggregate_bool_exp)));
    }
    return result;
  }

  @override
  Gusers_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gusers_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gusers_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'activeMfaType':
          result.activeMfaType.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'avatarUrl':
          result.avatarUrl.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'currentChallenge':
          result.currentChallenge.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'defaultRole':
          result.defaultRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'defaultRoleByRole':
          result.defaultRoleByRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_bool_exp))!
              as GauthRoles_bool_exp);
          break;
        case 'disabled':
          result.disabled.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'displayName':
          result.displayName.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'email':
          result.email.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gcitext_comparison_exp))!
              as Gcitext_comparison_exp);
          break;
        case 'emailVerified':
          result.emailVerified.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'isAnonymous':
          result.isAnonymous.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'lastSeen':
          result.lastSeen.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'locale':
          result.locale.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gjsonb_comparison_exp))!
              as Gjsonb_comparison_exp);
          break;
        case 'newEmail':
          result.newEmail.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gcitext_comparison_exp))!
              as Gcitext_comparison_exp);
          break;
        case 'otpHash':
          result.otpHash.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'passwordHash':
          result.passwordHash.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'phoneNumber':
          result.phoneNumber.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'phoneNumberVerified':
          result.phoneNumberVerified.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'refreshTokens':
          result.refreshTokens.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRefreshTokens_bool_exp))!
              as GauthRefreshTokens_bool_exp);
          break;
        case 'refreshTokens_aggregate':
          result.refreshTokens_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_aggregate_bool_exp))!
              as GauthRefreshTokens_aggregate_bool_exp);
          break;
        case 'roles':
          result.roles.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserRoles_bool_exp))!
              as GauthUserRoles_bool_exp);
          break;
        case 'roles_aggregate':
          result.roles_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_aggregate_bool_exp))!
              as GauthUserRoles_aggregate_bool_exp);
          break;
        case 'securityKeys':
          result.securityKeys.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_bool_exp))!
              as GauthUserSecurityKeys_bool_exp);
          break;
        case 'securityKeys_aggregate':
          result.securityKeys_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_aggregate_bool_exp))!
              as GauthUserSecurityKeys_aggregate_bool_exp);
          break;
        case 'ticket':
          result.ticket.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'totpSecret':
          result.totpSecret.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'userProviders':
          result.userProviders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthUserProviders_bool_exp))!
              as GauthUserProviders_bool_exp);
          break;
        case 'userProviders_aggregate':
          result.userProviders_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_aggregate_bool_exp))!
              as GauthUserProviders_aggregate_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_constraintSerializer
    implements PrimitiveSerializer<Gusers_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Gusers_constraint];
  @override
  final String wireName = 'Gusers_constraint';

  @override
  Object serialize(Serializers serializers, Gusers_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gusers_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gusers_constraint.valueOf(serialized as String);
}

class _$Gusers_delete_at_path_inputSerializer
    implements StructuredSerializer<Gusers_delete_at_path_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_delete_at_path_input,
    _$Gusers_delete_at_path_input
  ];
  @override
  final String wireName = 'Gusers_delete_at_path_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_delete_at_path_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  Gusers_delete_at_path_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_delete_at_path_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_delete_elem_inputSerializer
    implements StructuredSerializer<Gusers_delete_elem_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_delete_elem_input,
    _$Gusers_delete_elem_input
  ];
  @override
  final String wireName = 'Gusers_delete_elem_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_delete_elem_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Gusers_delete_elem_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_delete_elem_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_delete_key_inputSerializer
    implements StructuredSerializer<Gusers_delete_key_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_delete_key_input,
    _$Gusers_delete_key_input
  ];
  @override
  final String wireName = 'Gusers_delete_key_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_delete_key_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gusers_delete_key_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_delete_key_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_insert_inputSerializer
    implements StructuredSerializer<Gusers_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_insert_input,
    _$Gusers_insert_input
  ];
  @override
  final String wireName = 'Gusers_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRoleByRole;
    if (value != null) {
      result
        ..add('defaultRoleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_obj_rel_insert_input)));
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.emailVerified;
    if (value != null) {
      result
        ..add('emailVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isAnonymous;
    if (value != null) {
      result
        ..add('isAnonymous')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumberVerified;
    if (value != null) {
      result
        ..add('phoneNumberVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.refreshTokens;
    if (value != null) {
      result
        ..add('refreshTokens')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthRefreshTokens_arr_rel_insert_input)));
    }
    value = object.roles;
    if (value != null) {
      result
        ..add('roles')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserRoles_arr_rel_insert_input)));
    }
    value = object.securityKeys;
    if (value != null) {
      result
        ..add('securityKeys')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_arr_rel_insert_input)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.userProviders;
    if (value != null) {
      result
        ..add('userProviders')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_arr_rel_insert_input)));
    }
    return result;
  }

  @override
  Gusers_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultRoleByRole':
          result.defaultRoleByRole.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRoles_obj_rel_insert_input))!
              as GauthRoles_obj_rel_insert_input);
          break;
        case 'disabled':
          result.disabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'emailVerified':
          result.emailVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isAnonymous':
          result.isAnonymous = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'lastSeen':
          result.lastSeen.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'newEmail':
          result.newEmail.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumberVerified':
          result.phoneNumberVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'refreshTokens':
          result.refreshTokens.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_arr_rel_insert_input))!
              as GauthRefreshTokens_arr_rel_insert_input);
          break;
        case 'roles':
          result.roles.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_arr_rel_insert_input))!
              as GauthUserRoles_arr_rel_insert_input);
          break;
        case 'securityKeys':
          result.securityKeys.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      GauthUserSecurityKeys_arr_rel_insert_input))!
              as GauthUserSecurityKeys_arr_rel_insert_input);
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'userProviders':
          result.userProviders.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_arr_rel_insert_input))!
              as GauthUserProviders_arr_rel_insert_input);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_max_order_bySerializer
    implements StructuredSerializer<Gusers_max_order_by> {
  @override
  final Iterable<Type> types = const [
    Gusers_max_order_by,
    _$Gusers_max_order_by
  ];
  @override
  final String wireName = 'Gusers_max_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_max_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gusers_max_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_max_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'lastSeen':
          result.lastSeen = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'newEmail':
          result.newEmail = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_min_order_bySerializer
    implements StructuredSerializer<Gusers_min_order_by> {
  @override
  final Iterable<Type> types = const [
    Gusers_min_order_by,
    _$Gusers_min_order_by
  ];
  @override
  final String wireName = 'Gusers_min_order_by';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_min_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gusers_min_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_min_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'lastSeen':
          result.lastSeen = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'newEmail':
          result.newEmail = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_obj_rel_insert_inputSerializer
    implements StructuredSerializer<Gusers_obj_rel_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_obj_rel_insert_input,
    _$Gusers_obj_rel_insert_input
  ];
  @override
  final String wireName = 'Gusers_obj_rel_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_obj_rel_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'data',
      serializers.serialize(object.data,
          specifiedType: const FullType(Gusers_insert_input)),
    ];
    Object? value;
    value = object.on_conflict;
    if (value != null) {
      result
        ..add('on_conflict')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_on_conflict)));
    }
    return result;
  }

  @override
  Gusers_obj_rel_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_obj_rel_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'data':
          result.data.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_insert_input))!
              as Gusers_insert_input);
          break;
        case 'on_conflict':
          result.on_conflict.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_on_conflict))!
              as Gusers_on_conflict);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_on_conflictSerializer
    implements StructuredSerializer<Gusers_on_conflict> {
  @override
  final Iterable<Type> types = const [Gusers_on_conflict, _$Gusers_on_conflict];
  @override
  final String wireName = 'Gusers_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Gusers_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gusers_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_bool_exp)));
    }
    return result;
  }

  @override
  Gusers_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_constraint))!
              as Gusers_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gusers_update_column)]))!
              as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_order_bySerializer
    implements StructuredSerializer<Gusers_order_by> {
  @override
  final Iterable<Type> types = const [Gusers_order_by, _$Gusers_order_by];
  @override
  final String wireName = 'Gusers_order_by';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gusers_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.defaultRoleByRole;
    if (value != null) {
      result
        ..add('defaultRoleByRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthRoles_order_by)));
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.emailVerified;
    if (value != null) {
      result
        ..add('emailVerified')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.isAnonymous;
    if (value != null) {
      result
        ..add('isAnonymous')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.phoneNumberVerified;
    if (value != null) {
      result
        ..add('phoneNumberVerified')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.refreshTokens_aggregate;
    if (value != null) {
      result
        ..add('refreshTokens_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthRefreshTokens_aggregate_order_by)));
    }
    value = object.roles_aggregate;
    if (value != null) {
      result
        ..add('roles_aggregate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GauthUserRoles_aggregate_order_by)));
    }
    value = object.securityKeys_aggregate;
    if (value != null) {
      result
        ..add('securityKeys_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserSecurityKeys_aggregate_order_by)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.userProviders_aggregate;
    if (value != null) {
      result
        ..add('userProviders_aggregate')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GauthUserProviders_aggregate_order_by)));
    }
    return result;
  }

  @override
  Gusers_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'defaultRoleByRole':
          result.defaultRoleByRole.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GauthRoles_order_by))!
              as GauthRoles_order_by);
          break;
        case 'disabled':
          result.disabled = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'emailVerified':
          result.emailVerified = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'isAnonymous':
          result.isAnonymous = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'lastSeen':
          result.lastSeen = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'newEmail':
          result.newEmail = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'phoneNumberVerified':
          result.phoneNumberVerified = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'refreshTokens_aggregate':
          result.refreshTokens_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthRefreshTokens_aggregate_order_by))!
              as GauthRefreshTokens_aggregate_order_by);
          break;
        case 'roles_aggregate':
          result.roles_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserRoles_aggregate_order_by))!
              as GauthUserRoles_aggregate_order_by);
          break;
        case 'securityKeys_aggregate':
          result.securityKeys_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserSecurityKeys_aggregate_order_by))!
              as GauthUserSecurityKeys_aggregate_order_by);
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updatedAt':
          result.updatedAt = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'userProviders_aggregate':
          result.userProviders_aggregate.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GauthUserProviders_aggregate_order_by))!
              as GauthUserProviders_aggregate_order_by);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_pk_columns_inputSerializer
    implements StructuredSerializer<Gusers_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_pk_columns_input,
    _$Gusers_pk_columns_input
  ];
  @override
  final String wireName = 'Gusers_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  Gusers_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_prepend_inputSerializer
    implements StructuredSerializer<Gusers_prepend_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_prepend_input,
    _$Gusers_prepend_input
  ];
  @override
  final String wireName = 'Gusers_prepend_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_prepend_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    return result;
  }

  @override
  Gusers_prepend_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_prepend_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_select_columnSerializer
    implements PrimitiveSerializer<Gusers_select_column> {
  @override
  final Iterable<Type> types = const <Type>[Gusers_select_column];
  @override
  final String wireName = 'Gusers_select_column';

  @override
  Object serialize(Serializers serializers, Gusers_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gusers_select_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gusers_select_column.valueOf(serialized as String);
}

class _$Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columnsSerializer
    implements
        PrimitiveSerializer<
            Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns> {
  @override
  final Iterable<Type> types = const <Type>[
    Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
  ];
  @override
  final String wireName =
      'Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns';

  @override
  Object serialize(
          Serializers serializers,
          Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
              object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
      deserialize(Serializers serializers, Object serialized,
              {FullType specifiedType = FullType.unspecified}) =>
          Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
              .valueOf(serialized as String);
}

class _$Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columnsSerializer
    implements
        PrimitiveSerializer<
            Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns> {
  @override
  final Iterable<Type> types = const <Type>[
    Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
  ];
  @override
  final String wireName =
      'Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns';

  @override
  Object serialize(
          Serializers serializers,
          Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
              object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
      deserialize(Serializers serializers, Object serialized,
              {FullType specifiedType = FullType.unspecified}) =>
          Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
              .valueOf(serialized as String);
}

class _$Gusers_set_inputSerializer
    implements StructuredSerializer<Gusers_set_input> {
  @override
  final Iterable<Type> types = const [Gusers_set_input, _$Gusers_set_input];
  @override
  final String wireName = 'Gusers_set_input';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gusers_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.emailVerified;
    if (value != null) {
      result
        ..add('emailVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isAnonymous;
    if (value != null) {
      result
        ..add('isAnonymous')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumberVerified;
    if (value != null) {
      result
        ..add('phoneNumberVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    return result;
  }

  @override
  Gusers_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'disabled':
          result.disabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'emailVerified':
          result.emailVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isAnonymous':
          result.isAnonymous = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'lastSeen':
          result.lastSeen.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'newEmail':
          result.newEmail.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumberVerified':
          result.phoneNumberVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_stream_cursor_inputSerializer
    implements StructuredSerializer<Gusers_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_stream_cursor_input,
    _$Gusers_stream_cursor_input
  ];
  @override
  final String wireName = 'Gusers_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(Gusers_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Gusers_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gusers_stream_cursor_value_input))!
              as Gusers_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Gusers_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Gusers_stream_cursor_value_input,
    _$Gusers_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Gusers_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gusers_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.activeMfaType;
    if (value != null) {
      result
        ..add('activeMfaType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.avatarUrl;
    if (value != null) {
      result
        ..add('avatarUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.currentChallenge;
    if (value != null) {
      result
        ..add('currentChallenge')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultRole;
    if (value != null) {
      result
        ..add('defaultRole')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.displayName;
    if (value != null) {
      result
        ..add('displayName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.emailVerified;
    if (value != null) {
      result
        ..add('emailVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.isAnonymous;
    if (value != null) {
      result
        ..add('isAnonymous')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.lastSeen;
    if (value != null) {
      result
        ..add('lastSeen')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(_i2.JsonObject)));
    }
    value = object.newEmail;
    if (value != null) {
      result
        ..add('newEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcitext)));
    }
    value = object.otpHash;
    if (value != null) {
      result
        ..add('otpHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.otpHashExpiresAt;
    if (value != null) {
      result
        ..add('otpHashExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.otpMethodLastUsed;
    if (value != null) {
      result
        ..add('otpMethodLastUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.passwordHash;
    if (value != null) {
      result
        ..add('passwordHash')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumber;
    if (value != null) {
      result
        ..add('phoneNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phoneNumberVerified;
    if (value != null) {
      result
        ..add('phoneNumberVerified')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.ticket;
    if (value != null) {
      result
        ..add('ticket')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ticketExpiresAt;
    if (value != null) {
      result
        ..add('ticketExpiresAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.totpSecret;
    if (value != null) {
      result
        ..add('totpSecret')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    return result;
  }

  @override
  Gusers_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'activeMfaType':
          result.activeMfaType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'avatarUrl':
          result.avatarUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'currentChallenge':
          result.currentChallenge = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultRole':
          result.defaultRole = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'disabled':
          result.disabled = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'displayName':
          result.displayName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'emailVerified':
          result.emailVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'isAnonymous':
          result.isAnonymous = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'lastSeen':
          result.lastSeen.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'locale':
          result.locale = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata = serializers.deserialize(value,
              specifiedType: const FullType(_i2.JsonObject)) as _i2.JsonObject?;
          break;
        case 'newEmail':
          result.newEmail.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gcitext))! as Gcitext);
          break;
        case 'otpHash':
          result.otpHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'otpHashExpiresAt':
          result.otpHashExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'otpMethodLastUsed':
          result.otpMethodLastUsed = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'passwordHash':
          result.passwordHash = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumber':
          result.phoneNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phoneNumberVerified':
          result.phoneNumberVerified = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'ticket':
          result.ticket = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ticketExpiresAt':
          result.ticketExpiresAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'totpSecret':
          result.totpSecret = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
      }
    }

    return result.build();
  }
}

class _$Gusers_update_columnSerializer
    implements PrimitiveSerializer<Gusers_update_column> {
  @override
  final Iterable<Type> types = const <Type>[Gusers_update_column];
  @override
  final String wireName = 'Gusers_update_column';

  @override
  Object serialize(Serializers serializers, Gusers_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gusers_update_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gusers_update_column.valueOf(serialized as String);
}

class _$Gusers_updatesSerializer
    implements StructuredSerializer<Gusers_updates> {
  @override
  final Iterable<Type> types = const [Gusers_updates, _$Gusers_updates];
  @override
  final String wireName = 'Gusers_updates';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gusers_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Gusers_bool_exp)),
    ];
    Object? value;
    value = object.G_append;
    if (value != null) {
      result
        ..add('_append')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_append_input)));
    }
    value = object.G_delete_at_path;
    if (value != null) {
      result
        ..add('_delete_at_path')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_delete_at_path_input)));
    }
    value = object.G_delete_elem;
    if (value != null) {
      result
        ..add('_delete_elem')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_delete_elem_input)));
    }
    value = object.G_delete_key;
    if (value != null) {
      result
        ..add('_delete_key')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_delete_key_input)));
    }
    value = object.G_prepend;
    if (value != null) {
      result
        ..add('_prepend')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_prepend_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gusers_set_input)));
    }
    return result;
  }

  @override
  Gusers_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gusers_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_append':
          result.G_append.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_append_input))!
              as Gusers_append_input);
          break;
        case '_delete_at_path':
          result.G_delete_at_path.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_delete_at_path_input))!
              as Gusers_delete_at_path_input);
          break;
        case '_delete_elem':
          result.G_delete_elem.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_delete_elem_input))!
              as Gusers_delete_elem_input);
          break;
        case '_delete_key':
          result.G_delete_key.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_delete_key_input))!
              as Gusers_delete_key_input);
          break;
        case '_prepend':
          result.G_prepend.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_prepend_input))!
              as Gusers_prepend_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_set_input))!
              as Gusers_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gusers_bool_exp))!
              as Gusers_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Guuid_comparison_expSerializer
    implements StructuredSerializer<Guuid_comparison_exp> {
  @override
  final Iterable<Type> types = const [
    Guuid_comparison_exp,
    _$Guuid_comparison_exp
  ];
  @override
  final String wireName = 'Guuid_comparison_exp';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Guuid_comparison_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_eq;
    if (value != null) {
      result
        ..add('_eq')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_gt;
    if (value != null) {
      result
        ..add('_gt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_gte;
    if (value != null) {
      result
        ..add('_gte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_in;
    if (value != null) {
      result
        ..add('_in')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Guuid)])));
    }
    value = object.G_is_null;
    if (value != null) {
      result
        ..add('_is_null')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.G_lt;
    if (value != null) {
      result
        ..add('_lt')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_lte;
    if (value != null) {
      result
        ..add('_lte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_neq;
    if (value != null) {
      result
        ..add('_neq')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.G_nin;
    if (value != null) {
      result
        ..add('_nin')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(Guuid)])));
    }
    return result;
  }

  @override
  Guuid_comparison_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Guuid_comparison_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_eq':
          result.G_eq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_gt':
          result.G_gt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_gte':
          result.G_gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_in':
          result.G_in.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(Guuid)]))!
              as BuiltList<Object?>);
          break;
        case '_is_null':
          result.G_is_null = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case '_lt':
          result.G_lt.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_lte':
          result.G_lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_neq':
          result.G_neq.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case '_nin':
          result.G_nin.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(Guuid)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_bool_expSerializer
    implements StructuredSerializer<Gwords_bool_exp> {
  @override
  final Iterable<Type> types = const [Gwords_bool_exp, _$Gwords_bool_exp];
  @override
  final String wireName = 'Gwords_bool_exp';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gwords_bool_exp object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.G_and;
    if (value != null) {
      result
        ..add('_and')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gwords_bool_exp)])));
    }
    value = object.G_not;
    if (value != null) {
      result
        ..add('_not')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gwords_bool_exp)));
    }
    value = object.G_or;
    if (value != null) {
      result
        ..add('_or')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(Gwords_bool_exp)])));
    }
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.is_done;
    if (value != null) {
      result
        ..add('is_done')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GBoolean_comparison_exp)));
    }
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GInt_comparison_exp)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz_comparison_exp)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Guuid_comparison_exp)));
    }
    value = object.word;
    if (value != null) {
      result
        ..add('word')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GString_comparison_exp)));
    }
    return result;
  }

  @override
  Gwords_bool_exp deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_bool_expBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_and':
          result.G_and.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gwords_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case '_not':
          result.G_not.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_bool_exp))!
              as Gwords_bool_exp);
          break;
        case '_or':
          result.G_or.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gwords_bool_exp)]))!
              as BuiltList<Object?>);
          break;
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'is_done':
          result.is_done.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GBoolean_comparison_exp))!
              as GBoolean_comparison_exp);
          break;
        case 'times':
          result.times.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GInt_comparison_exp))!
              as GInt_comparison_exp);
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gtimestamptz_comparison_exp))!
              as Gtimestamptz_comparison_exp);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Guuid_comparison_exp))!
              as Guuid_comparison_exp);
          break;
        case 'word':
          result.word.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GString_comparison_exp))!
              as GString_comparison_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_constraintSerializer
    implements PrimitiveSerializer<Gwords_constraint> {
  @override
  final Iterable<Type> types = const <Type>[Gwords_constraint];
  @override
  final String wireName = 'Gwords_constraint';

  @override
  Object serialize(Serializers serializers, Gwords_constraint object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gwords_constraint deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gwords_constraint.valueOf(serialized as String);
}

class _$Gwords_inc_inputSerializer
    implements StructuredSerializer<Gwords_inc_input> {
  @override
  final Iterable<Type> types = const [Gwords_inc_input, _$Gwords_inc_input];
  @override
  final String wireName = 'Gwords_inc_input';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gwords_inc_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  Gwords_inc_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_inc_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'times':
          result.times = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_insert_inputSerializer
    implements StructuredSerializer<Gwords_insert_input> {
  @override
  final Iterable<Type> types = const [
    Gwords_insert_input,
    _$Gwords_insert_input
  ];
  @override
  final String wireName = 'Gwords_insert_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gwords_insert_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.is_done;
    if (value != null) {
      result
        ..add('is_done')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.word;
    if (value != null) {
      result
        ..add('word')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gwords_insert_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_insert_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'is_done':
          result.is_done = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'times':
          result.times = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'word':
          result.word = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_on_conflictSerializer
    implements StructuredSerializer<Gwords_on_conflict> {
  @override
  final Iterable<Type> types = const [Gwords_on_conflict, _$Gwords_on_conflict];
  @override
  final String wireName = 'Gwords_on_conflict';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gwords_on_conflict object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'constraint',
      serializers.serialize(object.constraint,
          specifiedType: const FullType(Gwords_constraint)),
      'update_columns',
      serializers.serialize(object.update_columns,
          specifiedType: const FullType(
              BuiltList, const [const FullType(Gwords_update_column)])),
    ];
    Object? value;
    value = object.where;
    if (value != null) {
      result
        ..add('where')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gwords_bool_exp)));
    }
    return result;
  }

  @override
  Gwords_on_conflict deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_on_conflictBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'constraint':
          result.constraint = serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_constraint))!
              as Gwords_constraint;
          break;
        case 'update_columns':
          result.update_columns.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(Gwords_update_column)]))!
              as BuiltList<Object?>);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_bool_exp))!
              as Gwords_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_order_bySerializer
    implements StructuredSerializer<Gwords_order_by> {
  @override
  final Iterable<Type> types = const [Gwords_order_by, _$Gwords_order_by];
  @override
  final String wireName = 'Gwords_order_by';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gwords_order_by object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.is_done;
    if (value != null) {
      result
        ..add('is_done')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    value = object.word;
    if (value != null) {
      result
        ..add('word')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gorder_by)));
    }
    return result;
  }

  @override
  Gwords_order_by deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_order_byBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'created_by':
          result.created_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'deleted_at':
          result.deleted_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'is_done':
          result.is_done = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'times':
          result.times = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_at':
          result.updated_at = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'updated_by':
          result.updated_by = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
        case 'word':
          result.word = serializers.deserialize(value,
              specifiedType: const FullType(Gorder_by)) as Gorder_by?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_pk_columns_inputSerializer
    implements StructuredSerializer<Gwords_pk_columns_input> {
  @override
  final Iterable<Type> types = const [
    Gwords_pk_columns_input,
    _$Gwords_pk_columns_input
  ];
  @override
  final String wireName = 'Gwords_pk_columns_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gwords_pk_columns_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(Guuid)),
    ];

    return result;
  }

  @override
  Gwords_pk_columns_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_pk_columns_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_select_columnSerializer
    implements PrimitiveSerializer<Gwords_select_column> {
  @override
  final Iterable<Type> types = const <Type>[Gwords_select_column];
  @override
  final String wireName = 'Gwords_select_column';

  @override
  Object serialize(Serializers serializers, Gwords_select_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gwords_select_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gwords_select_column.valueOf(serialized as String);
}

class _$Gwords_set_inputSerializer
    implements StructuredSerializer<Gwords_set_input> {
  @override
  final Iterable<Type> types = const [Gwords_set_input, _$Gwords_set_input];
  @override
  final String wireName = 'Gwords_set_input';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gwords_set_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.is_done;
    if (value != null) {
      result
        ..add('is_done')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.word;
    if (value != null) {
      result
        ..add('word')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gwords_set_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_set_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'is_done':
          result.is_done = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'times':
          result.times = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'word':
          result.word = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_stream_cursor_inputSerializer
    implements StructuredSerializer<Gwords_stream_cursor_input> {
  @override
  final Iterable<Type> types = const [
    Gwords_stream_cursor_input,
    _$Gwords_stream_cursor_input
  ];
  @override
  final String wireName = 'Gwords_stream_cursor_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gwords_stream_cursor_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'initial_value',
      serializers.serialize(object.initial_value,
          specifiedType: const FullType(Gwords_stream_cursor_value_input)),
    ];
    Object? value;
    value = object.ordering;
    if (value != null) {
      result
        ..add('ordering')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gcursor_ordering)));
    }
    return result;
  }

  @override
  Gwords_stream_cursor_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_stream_cursor_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'initial_value':
          result.initial_value.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(Gwords_stream_cursor_value_input))!
              as Gwords_stream_cursor_value_input);
          break;
        case 'ordering':
          result.ordering = serializers.deserialize(value,
                  specifiedType: const FullType(Gcursor_ordering))
              as Gcursor_ordering?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_stream_cursor_value_inputSerializer
    implements StructuredSerializer<Gwords_stream_cursor_value_input> {
  @override
  final Iterable<Type> types = const [
    Gwords_stream_cursor_value_input,
    _$Gwords_stream_cursor_value_input
  ];
  @override
  final String wireName = 'Gwords_stream_cursor_value_input';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, Gwords_stream_cursor_value_input object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.created_at;
    if (value != null) {
      result
        ..add('created_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.created_by;
    if (value != null) {
      result
        ..add('created_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.deleted_at;
    if (value != null) {
      result
        ..add('deleted_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.is_done;
    if (value != null) {
      result
        ..add('is_done')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.times;
    if (value != null) {
      result
        ..add('times')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updated_at;
    if (value != null) {
      result
        ..add('updated_at')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gtimestamptz)));
    }
    value = object.updated_by;
    if (value != null) {
      result
        ..add('updated_by')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(Guuid)));
    }
    value = object.word;
    if (value != null) {
      result
        ..add('word')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  Gwords_stream_cursor_value_input deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_stream_cursor_value_inputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'created_at':
          result.created_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'created_by':
          result.created_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'deleted_at':
          result.deleted_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'id':
          result.id.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'is_done':
          result.is_done = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'times':
          result.times = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'updated_at':
          result.updated_at.replace(serializers.deserialize(value,
              specifiedType: const FullType(Gtimestamptz))! as Gtimestamptz);
          break;
        case 'updated_by':
          result.updated_by.replace(serializers.deserialize(value,
              specifiedType: const FullType(Guuid))! as Guuid);
          break;
        case 'word':
          result.word = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$Gwords_update_columnSerializer
    implements PrimitiveSerializer<Gwords_update_column> {
  @override
  final Iterable<Type> types = const <Type>[Gwords_update_column];
  @override
  final String wireName = 'Gwords_update_column';

  @override
  Object serialize(Serializers serializers, Gwords_update_column object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  Gwords_update_column deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      Gwords_update_column.valueOf(serialized as String);
}

class _$Gwords_updatesSerializer
    implements StructuredSerializer<Gwords_updates> {
  @override
  final Iterable<Type> types = const [Gwords_updates, _$Gwords_updates];
  @override
  final String wireName = 'Gwords_updates';

  @override
  Iterable<Object?> serialize(Serializers serializers, Gwords_updates object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'where',
      serializers.serialize(object.where,
          specifiedType: const FullType(Gwords_bool_exp)),
    ];
    Object? value;
    value = object.G_inc;
    if (value != null) {
      result
        ..add('_inc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gwords_inc_input)));
    }
    value = object.G_set;
    if (value != null) {
      result
        ..add('_set')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(Gwords_set_input)));
    }
    return result;
  }

  @override
  Gwords_updates deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new Gwords_updatesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '_inc':
          result.G_inc.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_inc_input))!
              as Gwords_inc_input);
          break;
        case '_set':
          result.G_set.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_set_input))!
              as Gwords_set_input);
          break;
        case 'where':
          result.where.replace(serializers.deserialize(value,
                  specifiedType: const FullType(Gwords_bool_exp))!
              as Gwords_bool_exp);
          break;
      }
    }

    return result.build();
  }
}

class _$GBoolean_comparison_exp extends GBoolean_comparison_exp {
  @override
  final bool? G_eq;
  @override
  final bool? G_gt;
  @override
  final bool? G_gte;
  @override
  final BuiltList<bool>? G_in;
  @override
  final bool? G_is_null;
  @override
  final bool? G_lt;
  @override
  final bool? G_lte;
  @override
  final bool? G_neq;
  @override
  final BuiltList<bool>? G_nin;

  factory _$GBoolean_comparison_exp(
          [void Function(GBoolean_comparison_expBuilder)? updates]) =>
      (new GBoolean_comparison_expBuilder()..update(updates))._build();

  _$GBoolean_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  GBoolean_comparison_exp rebuild(
          void Function(GBoolean_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBoolean_comparison_expBuilder toBuilder() =>
      new GBoolean_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBoolean_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBoolean_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class GBoolean_comparison_expBuilder
    implements
        Builder<GBoolean_comparison_exp, GBoolean_comparison_expBuilder> {
  _$GBoolean_comparison_exp? _$v;

  bool? _G_eq;
  bool? get G_eq => _$this._G_eq;
  set G_eq(bool? G_eq) => _$this._G_eq = G_eq;

  bool? _G_gt;
  bool? get G_gt => _$this._G_gt;
  set G_gt(bool? G_gt) => _$this._G_gt = G_gt;

  bool? _G_gte;
  bool? get G_gte => _$this._G_gte;
  set G_gte(bool? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<bool>? _G_in;
  ListBuilder<bool> get G_in => _$this._G_in ??= new ListBuilder<bool>();
  set G_in(ListBuilder<bool>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  bool? _G_lt;
  bool? get G_lt => _$this._G_lt;
  set G_lt(bool? G_lt) => _$this._G_lt = G_lt;

  bool? _G_lte;
  bool? get G_lte => _$this._G_lte;
  set G_lte(bool? G_lte) => _$this._G_lte = G_lte;

  bool? _G_neq;
  bool? get G_neq => _$this._G_neq;
  set G_neq(bool? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<bool>? _G_nin;
  ListBuilder<bool> get G_nin => _$this._G_nin ??= new ListBuilder<bool>();
  set G_nin(ListBuilder<bool>? G_nin) => _$this._G_nin = G_nin;

  GBoolean_comparison_expBuilder();

  GBoolean_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq;
      _G_gt = $v.G_gt;
      _G_gte = $v.G_gte;
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt;
      _G_lte = $v.G_lte;
      _G_neq = $v.G_neq;
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBoolean_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBoolean_comparison_exp;
  }

  @override
  void update(void Function(GBoolean_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBoolean_comparison_exp build() => _build();

  _$GBoolean_comparison_exp _build() {
    _$GBoolean_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$GBoolean_comparison_exp._(
              G_eq: G_eq,
              G_gt: G_gt,
              G_gte: G_gte,
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: G_lt,
              G_lte: G_lte,
              G_neq: G_neq,
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBoolean_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GInt_comparison_exp extends GInt_comparison_exp {
  @override
  final int? G_eq;
  @override
  final int? G_gt;
  @override
  final int? G_gte;
  @override
  final BuiltList<int>? G_in;
  @override
  final bool? G_is_null;
  @override
  final int? G_lt;
  @override
  final int? G_lte;
  @override
  final int? G_neq;
  @override
  final BuiltList<int>? G_nin;

  factory _$GInt_comparison_exp(
          [void Function(GInt_comparison_expBuilder)? updates]) =>
      (new GInt_comparison_expBuilder()..update(updates))._build();

  _$GInt_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  GInt_comparison_exp rebuild(
          void Function(GInt_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GInt_comparison_expBuilder toBuilder() =>
      new GInt_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GInt_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GInt_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class GInt_comparison_expBuilder
    implements Builder<GInt_comparison_exp, GInt_comparison_expBuilder> {
  _$GInt_comparison_exp? _$v;

  int? _G_eq;
  int? get G_eq => _$this._G_eq;
  set G_eq(int? G_eq) => _$this._G_eq = G_eq;

  int? _G_gt;
  int? get G_gt => _$this._G_gt;
  set G_gt(int? G_gt) => _$this._G_gt = G_gt;

  int? _G_gte;
  int? get G_gte => _$this._G_gte;
  set G_gte(int? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<int>? _G_in;
  ListBuilder<int> get G_in => _$this._G_in ??= new ListBuilder<int>();
  set G_in(ListBuilder<int>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  int? _G_lt;
  int? get G_lt => _$this._G_lt;
  set G_lt(int? G_lt) => _$this._G_lt = G_lt;

  int? _G_lte;
  int? get G_lte => _$this._G_lte;
  set G_lte(int? G_lte) => _$this._G_lte = G_lte;

  int? _G_neq;
  int? get G_neq => _$this._G_neq;
  set G_neq(int? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<int>? _G_nin;
  ListBuilder<int> get G_nin => _$this._G_nin ??= new ListBuilder<int>();
  set G_nin(ListBuilder<int>? G_nin) => _$this._G_nin = G_nin;

  GInt_comparison_expBuilder();

  GInt_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq;
      _G_gt = $v.G_gt;
      _G_gte = $v.G_gte;
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt;
      _G_lte = $v.G_lte;
      _G_neq = $v.G_neq;
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GInt_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GInt_comparison_exp;
  }

  @override
  void update(void Function(GInt_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GInt_comparison_exp build() => _build();

  _$GInt_comparison_exp _build() {
    _$GInt_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$GInt_comparison_exp._(
              G_eq: G_eq,
              G_gt: G_gt,
              G_gte: G_gte,
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: G_lt,
              G_lte: G_lte,
              G_neq: G_neq,
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GInt_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GString_comparison_exp extends GString_comparison_exp {
  @override
  final String? G_eq;
  @override
  final String? G_gt;
  @override
  final String? G_gte;
  @override
  final String? G_ilike;
  @override
  final BuiltList<String>? G_in;
  @override
  final String? G_iregex;
  @override
  final bool? G_is_null;
  @override
  final String? G_like;
  @override
  final String? G_lt;
  @override
  final String? G_lte;
  @override
  final String? G_neq;
  @override
  final String? G_nilike;
  @override
  final BuiltList<String>? G_nin;
  @override
  final String? G_niregex;
  @override
  final String? G_nlike;
  @override
  final String? G_nregex;
  @override
  final String? G_nsimilar;
  @override
  final String? G_regex;
  @override
  final String? G_similar;

  factory _$GString_comparison_exp(
          [void Function(GString_comparison_expBuilder)? updates]) =>
      (new GString_comparison_expBuilder()..update(updates))._build();

  _$GString_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_ilike,
      this.G_in,
      this.G_iregex,
      this.G_is_null,
      this.G_like,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nilike,
      this.G_nin,
      this.G_niregex,
      this.G_nlike,
      this.G_nregex,
      this.G_nsimilar,
      this.G_regex,
      this.G_similar})
      : super._();

  @override
  GString_comparison_exp rebuild(
          void Function(GString_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GString_comparison_expBuilder toBuilder() =>
      new GString_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GString_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_ilike == other.G_ilike &&
        G_in == other.G_in &&
        G_iregex == other.G_iregex &&
        G_is_null == other.G_is_null &&
        G_like == other.G_like &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nilike == other.G_nilike &&
        G_nin == other.G_nin &&
        G_niregex == other.G_niregex &&
        G_nlike == other.G_nlike &&
        G_nregex == other.G_nregex &&
        G_nsimilar == other.G_nsimilar &&
        G_regex == other.G_regex &&
        G_similar == other.G_similar;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(0,
                                                                                G_eq.hashCode),
                                                                            G_gt.hashCode),
                                                                        G_gte.hashCode),
                                                                    G_ilike.hashCode),
                                                                G_in.hashCode),
                                                            G_iregex.hashCode),
                                                        G_is_null.hashCode),
                                                    G_like.hashCode),
                                                G_lt.hashCode),
                                            G_lte.hashCode),
                                        G_neq.hashCode),
                                    G_nilike.hashCode),
                                G_nin.hashCode),
                            G_niregex.hashCode),
                        G_nlike.hashCode),
                    G_nregex.hashCode),
                G_nsimilar.hashCode),
            G_regex.hashCode),
        G_similar.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GString_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_ilike', G_ilike)
          ..add('G_in', G_in)
          ..add('G_iregex', G_iregex)
          ..add('G_is_null', G_is_null)
          ..add('G_like', G_like)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nilike', G_nilike)
          ..add('G_nin', G_nin)
          ..add('G_niregex', G_niregex)
          ..add('G_nlike', G_nlike)
          ..add('G_nregex', G_nregex)
          ..add('G_nsimilar', G_nsimilar)
          ..add('G_regex', G_regex)
          ..add('G_similar', G_similar))
        .toString();
  }
}

class GString_comparison_expBuilder
    implements Builder<GString_comparison_exp, GString_comparison_expBuilder> {
  _$GString_comparison_exp? _$v;

  String? _G_eq;
  String? get G_eq => _$this._G_eq;
  set G_eq(String? G_eq) => _$this._G_eq = G_eq;

  String? _G_gt;
  String? get G_gt => _$this._G_gt;
  set G_gt(String? G_gt) => _$this._G_gt = G_gt;

  String? _G_gte;
  String? get G_gte => _$this._G_gte;
  set G_gte(String? G_gte) => _$this._G_gte = G_gte;

  String? _G_ilike;
  String? get G_ilike => _$this._G_ilike;
  set G_ilike(String? G_ilike) => _$this._G_ilike = G_ilike;

  ListBuilder<String>? _G_in;
  ListBuilder<String> get G_in => _$this._G_in ??= new ListBuilder<String>();
  set G_in(ListBuilder<String>? G_in) => _$this._G_in = G_in;

  String? _G_iregex;
  String? get G_iregex => _$this._G_iregex;
  set G_iregex(String? G_iregex) => _$this._G_iregex = G_iregex;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  String? _G_like;
  String? get G_like => _$this._G_like;
  set G_like(String? G_like) => _$this._G_like = G_like;

  String? _G_lt;
  String? get G_lt => _$this._G_lt;
  set G_lt(String? G_lt) => _$this._G_lt = G_lt;

  String? _G_lte;
  String? get G_lte => _$this._G_lte;
  set G_lte(String? G_lte) => _$this._G_lte = G_lte;

  String? _G_neq;
  String? get G_neq => _$this._G_neq;
  set G_neq(String? G_neq) => _$this._G_neq = G_neq;

  String? _G_nilike;
  String? get G_nilike => _$this._G_nilike;
  set G_nilike(String? G_nilike) => _$this._G_nilike = G_nilike;

  ListBuilder<String>? _G_nin;
  ListBuilder<String> get G_nin => _$this._G_nin ??= new ListBuilder<String>();
  set G_nin(ListBuilder<String>? G_nin) => _$this._G_nin = G_nin;

  String? _G_niregex;
  String? get G_niregex => _$this._G_niregex;
  set G_niregex(String? G_niregex) => _$this._G_niregex = G_niregex;

  String? _G_nlike;
  String? get G_nlike => _$this._G_nlike;
  set G_nlike(String? G_nlike) => _$this._G_nlike = G_nlike;

  String? _G_nregex;
  String? get G_nregex => _$this._G_nregex;
  set G_nregex(String? G_nregex) => _$this._G_nregex = G_nregex;

  String? _G_nsimilar;
  String? get G_nsimilar => _$this._G_nsimilar;
  set G_nsimilar(String? G_nsimilar) => _$this._G_nsimilar = G_nsimilar;

  String? _G_regex;
  String? get G_regex => _$this._G_regex;
  set G_regex(String? G_regex) => _$this._G_regex = G_regex;

  String? _G_similar;
  String? get G_similar => _$this._G_similar;
  set G_similar(String? G_similar) => _$this._G_similar = G_similar;

  GString_comparison_expBuilder();

  GString_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq;
      _G_gt = $v.G_gt;
      _G_gte = $v.G_gte;
      _G_ilike = $v.G_ilike;
      _G_in = $v.G_in?.toBuilder();
      _G_iregex = $v.G_iregex;
      _G_is_null = $v.G_is_null;
      _G_like = $v.G_like;
      _G_lt = $v.G_lt;
      _G_lte = $v.G_lte;
      _G_neq = $v.G_neq;
      _G_nilike = $v.G_nilike;
      _G_nin = $v.G_nin?.toBuilder();
      _G_niregex = $v.G_niregex;
      _G_nlike = $v.G_nlike;
      _G_nregex = $v.G_nregex;
      _G_nsimilar = $v.G_nsimilar;
      _G_regex = $v.G_regex;
      _G_similar = $v.G_similar;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GString_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GString_comparison_exp;
  }

  @override
  void update(void Function(GString_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GString_comparison_exp build() => _build();

  _$GString_comparison_exp _build() {
    _$GString_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$GString_comparison_exp._(
              G_eq: G_eq,
              G_gt: G_gt,
              G_gte: G_gte,
              G_ilike: G_ilike,
              G_in: _G_in?.build(),
              G_iregex: G_iregex,
              G_is_null: G_is_null,
              G_like: G_like,
              G_lt: G_lt,
              G_lte: G_lte,
              G_neq: G_neq,
              G_nilike: G_nilike,
              G_nin: _G_nin?.build(),
              G_niregex: G_niregex,
              G_nlike: G_nlike,
              G_nregex: G_nregex,
              G_nsimilar: G_nsimilar,
              G_regex: G_regex,
              G_similar: G_similar);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GString_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_append_input extends Garticles_append_input {
  @override
  final _i2.JsonObject? sentences;

  factory _$Garticles_append_input(
          [void Function(Garticles_append_inputBuilder)? updates]) =>
      (new Garticles_append_inputBuilder()..update(updates))._build();

  _$Garticles_append_input._({this.sentences}) : super._();

  @override
  Garticles_append_input rebuild(
          void Function(Garticles_append_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_append_inputBuilder toBuilder() =>
      new Garticles_append_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_append_input && sentences == other.sentences;
  }

  @override
  int get hashCode {
    return $jf($jc(0, sentences.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_append_input')
          ..add('sentences', sentences))
        .toString();
  }
}

class Garticles_append_inputBuilder
    implements Builder<Garticles_append_input, Garticles_append_inputBuilder> {
  _$Garticles_append_input? _$v;

  _i2.JsonObject? _sentences;
  _i2.JsonObject? get sentences => _$this._sentences;
  set sentences(_i2.JsonObject? sentences) => _$this._sentences = sentences;

  Garticles_append_inputBuilder();

  Garticles_append_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sentences = $v.sentences;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_append_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_append_input;
  }

  @override
  void update(void Function(Garticles_append_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_append_input build() => _build();

  _$Garticles_append_input _build() {
    final _$result =
        _$v ?? new _$Garticles_append_input._(sentences: sentences);
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_bool_exp extends Garticles_bool_exp {
  @override
  final BuiltList<Garticles_bool_exp>? G_and;
  @override
  final Garticles_bool_exp? G_not;
  @override
  final BuiltList<Garticles_bool_exp>? G_or;
  @override
  final Gtimestamptz_comparison_exp? created_at;
  @override
  final Guuid_comparison_exp? created_by;
  @override
  final Gtimestamptz_comparison_exp? deleted_at;
  @override
  final GString_comparison_exp? favicon;
  @override
  final Guuid_comparison_exp? id;
  @override
  final Gjsonb_comparison_exp? sentences;
  @override
  final GString_comparison_exp? thumbnail;
  @override
  final GString_comparison_exp? title;
  @override
  final Gtimestamptz_comparison_exp? updated_at;
  @override
  final Guuid_comparison_exp? updated_by;
  @override
  final GString_comparison_exp? url;

  factory _$Garticles_bool_exp(
          [void Function(Garticles_bool_expBuilder)? updates]) =>
      (new Garticles_bool_expBuilder()..update(updates))._build();

  _$Garticles_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.favicon,
      this.id,
      this.sentences,
      this.thumbnail,
      this.title,
      this.updated_at,
      this.updated_by,
      this.url})
      : super._();

  @override
  Garticles_bool_exp rebuild(
          void Function(Garticles_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_bool_expBuilder toBuilder() =>
      new Garticles_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        favicon == other.favicon &&
        id == other.id &&
        sentences == other.sentences &&
        thumbnail == other.thumbnail &&
        title == other.title &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc($jc(0, G_and.hashCode),
                                                        G_not.hashCode),
                                                    G_or.hashCode),
                                                created_at.hashCode),
                                            created_by.hashCode),
                                        deleted_at.hashCode),
                                    favicon.hashCode),
                                id.hashCode),
                            sentences.hashCode),
                        thumbnail.hashCode),
                    title.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('favicon', favicon)
          ..add('id', id)
          ..add('sentences', sentences)
          ..add('thumbnail', thumbnail)
          ..add('title', title)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('url', url))
        .toString();
  }
}

class Garticles_bool_expBuilder
    implements Builder<Garticles_bool_exp, Garticles_bool_expBuilder> {
  _$Garticles_bool_exp? _$v;

  ListBuilder<Garticles_bool_exp>? _G_and;
  ListBuilder<Garticles_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Garticles_bool_exp>();
  set G_and(ListBuilder<Garticles_bool_exp>? G_and) => _$this._G_and = G_and;

  Garticles_bool_expBuilder? _G_not;
  Garticles_bool_expBuilder get G_not =>
      _$this._G_not ??= new Garticles_bool_expBuilder();
  set G_not(Garticles_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Garticles_bool_exp>? _G_or;
  ListBuilder<Garticles_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Garticles_bool_exp>();
  set G_or(ListBuilder<Garticles_bool_exp>? G_or) => _$this._G_or = G_or;

  Gtimestamptz_comparison_expBuilder? _created_at;
  Gtimestamptz_comparison_expBuilder get created_at =>
      _$this._created_at ??= new Gtimestamptz_comparison_expBuilder();
  set created_at(Gtimestamptz_comparison_expBuilder? created_at) =>
      _$this._created_at = created_at;

  Guuid_comparison_expBuilder? _created_by;
  Guuid_comparison_expBuilder get created_by =>
      _$this._created_by ??= new Guuid_comparison_expBuilder();
  set created_by(Guuid_comparison_expBuilder? created_by) =>
      _$this._created_by = created_by;

  Gtimestamptz_comparison_expBuilder? _deleted_at;
  Gtimestamptz_comparison_expBuilder get deleted_at =>
      _$this._deleted_at ??= new Gtimestamptz_comparison_expBuilder();
  set deleted_at(Gtimestamptz_comparison_expBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GString_comparison_expBuilder? _favicon;
  GString_comparison_expBuilder get favicon =>
      _$this._favicon ??= new GString_comparison_expBuilder();
  set favicon(GString_comparison_expBuilder? favicon) =>
      _$this._favicon = favicon;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  Gjsonb_comparison_expBuilder? _sentences;
  Gjsonb_comparison_expBuilder get sentences =>
      _$this._sentences ??= new Gjsonb_comparison_expBuilder();
  set sentences(Gjsonb_comparison_expBuilder? sentences) =>
      _$this._sentences = sentences;

  GString_comparison_expBuilder? _thumbnail;
  GString_comparison_expBuilder get thumbnail =>
      _$this._thumbnail ??= new GString_comparison_expBuilder();
  set thumbnail(GString_comparison_expBuilder? thumbnail) =>
      _$this._thumbnail = thumbnail;

  GString_comparison_expBuilder? _title;
  GString_comparison_expBuilder get title =>
      _$this._title ??= new GString_comparison_expBuilder();
  set title(GString_comparison_expBuilder? title) => _$this._title = title;

  Gtimestamptz_comparison_expBuilder? _updated_at;
  Gtimestamptz_comparison_expBuilder get updated_at =>
      _$this._updated_at ??= new Gtimestamptz_comparison_expBuilder();
  set updated_at(Gtimestamptz_comparison_expBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  Guuid_comparison_expBuilder? _updated_by;
  Guuid_comparison_expBuilder get updated_by =>
      _$this._updated_by ??= new Guuid_comparison_expBuilder();
  set updated_by(Guuid_comparison_expBuilder? updated_by) =>
      _$this._updated_by = updated_by;

  GString_comparison_expBuilder? _url;
  GString_comparison_expBuilder get url =>
      _$this._url ??= new GString_comparison_expBuilder();
  set url(GString_comparison_expBuilder? url) => _$this._url = url;

  Garticles_bool_expBuilder();

  Garticles_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _favicon = $v.favicon?.toBuilder();
      _id = $v.id?.toBuilder();
      _sentences = $v.sentences?.toBuilder();
      _thumbnail = $v.thumbnail?.toBuilder();
      _title = $v.title?.toBuilder();
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _url = $v.url?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_bool_exp;
  }

  @override
  void update(void Function(Garticles_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_bool_exp build() => _build();

  _$Garticles_bool_exp _build() {
    _$Garticles_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Garticles_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              favicon: _favicon?.build(),
              id: _id?.build(),
              sentences: _sentences?.build(),
              thumbnail: _thumbnail?.build(),
              title: _title?.build(),
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              url: _url?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'favicon';
        _favicon?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'sentences';
        _sentences?.build();
        _$failedField = 'thumbnail';
        _thumbnail?.build();
        _$failedField = 'title';
        _title?.build();
        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'url';
        _url?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_delete_at_path_input extends Garticles_delete_at_path_input {
  @override
  final BuiltList<String>? sentences;

  factory _$Garticles_delete_at_path_input(
          [void Function(Garticles_delete_at_path_inputBuilder)? updates]) =>
      (new Garticles_delete_at_path_inputBuilder()..update(updates))._build();

  _$Garticles_delete_at_path_input._({this.sentences}) : super._();

  @override
  Garticles_delete_at_path_input rebuild(
          void Function(Garticles_delete_at_path_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_delete_at_path_inputBuilder toBuilder() =>
      new Garticles_delete_at_path_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_delete_at_path_input &&
        sentences == other.sentences;
  }

  @override
  int get hashCode {
    return $jf($jc(0, sentences.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_delete_at_path_input')
          ..add('sentences', sentences))
        .toString();
  }
}

class Garticles_delete_at_path_inputBuilder
    implements
        Builder<Garticles_delete_at_path_input,
            Garticles_delete_at_path_inputBuilder> {
  _$Garticles_delete_at_path_input? _$v;

  ListBuilder<String>? _sentences;
  ListBuilder<String> get sentences =>
      _$this._sentences ??= new ListBuilder<String>();
  set sentences(ListBuilder<String>? sentences) =>
      _$this._sentences = sentences;

  Garticles_delete_at_path_inputBuilder();

  Garticles_delete_at_path_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sentences = $v.sentences?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_delete_at_path_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_delete_at_path_input;
  }

  @override
  void update(void Function(Garticles_delete_at_path_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_delete_at_path_input build() => _build();

  _$Garticles_delete_at_path_input _build() {
    _$Garticles_delete_at_path_input _$result;
    try {
      _$result = _$v ??
          new _$Garticles_delete_at_path_input._(
              sentences: _sentences?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'sentences';
        _sentences?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_delete_at_path_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_delete_elem_input extends Garticles_delete_elem_input {
  @override
  final int? sentences;

  factory _$Garticles_delete_elem_input(
          [void Function(Garticles_delete_elem_inputBuilder)? updates]) =>
      (new Garticles_delete_elem_inputBuilder()..update(updates))._build();

  _$Garticles_delete_elem_input._({this.sentences}) : super._();

  @override
  Garticles_delete_elem_input rebuild(
          void Function(Garticles_delete_elem_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_delete_elem_inputBuilder toBuilder() =>
      new Garticles_delete_elem_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_delete_elem_input && sentences == other.sentences;
  }

  @override
  int get hashCode {
    return $jf($jc(0, sentences.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_delete_elem_input')
          ..add('sentences', sentences))
        .toString();
  }
}

class Garticles_delete_elem_inputBuilder
    implements
        Builder<Garticles_delete_elem_input,
            Garticles_delete_elem_inputBuilder> {
  _$Garticles_delete_elem_input? _$v;

  int? _sentences;
  int? get sentences => _$this._sentences;
  set sentences(int? sentences) => _$this._sentences = sentences;

  Garticles_delete_elem_inputBuilder();

  Garticles_delete_elem_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sentences = $v.sentences;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_delete_elem_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_delete_elem_input;
  }

  @override
  void update(void Function(Garticles_delete_elem_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_delete_elem_input build() => _build();

  _$Garticles_delete_elem_input _build() {
    final _$result =
        _$v ?? new _$Garticles_delete_elem_input._(sentences: sentences);
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_delete_key_input extends Garticles_delete_key_input {
  @override
  final String? sentences;

  factory _$Garticles_delete_key_input(
          [void Function(Garticles_delete_key_inputBuilder)? updates]) =>
      (new Garticles_delete_key_inputBuilder()..update(updates))._build();

  _$Garticles_delete_key_input._({this.sentences}) : super._();

  @override
  Garticles_delete_key_input rebuild(
          void Function(Garticles_delete_key_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_delete_key_inputBuilder toBuilder() =>
      new Garticles_delete_key_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_delete_key_input && sentences == other.sentences;
  }

  @override
  int get hashCode {
    return $jf($jc(0, sentences.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_delete_key_input')
          ..add('sentences', sentences))
        .toString();
  }
}

class Garticles_delete_key_inputBuilder
    implements
        Builder<Garticles_delete_key_input, Garticles_delete_key_inputBuilder> {
  _$Garticles_delete_key_input? _$v;

  String? _sentences;
  String? get sentences => _$this._sentences;
  set sentences(String? sentences) => _$this._sentences = sentences;

  Garticles_delete_key_inputBuilder();

  Garticles_delete_key_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sentences = $v.sentences;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_delete_key_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_delete_key_input;
  }

  @override
  void update(void Function(Garticles_delete_key_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_delete_key_input build() => _build();

  _$Garticles_delete_key_input _build() {
    final _$result =
        _$v ?? new _$Garticles_delete_key_input._(sentences: sentences);
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_insert_input extends Garticles_insert_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final String? favicon;
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? sentences;
  @override
  final String? thumbnail;
  @override
  final String? title;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? url;

  factory _$Garticles_insert_input(
          [void Function(Garticles_insert_inputBuilder)? updates]) =>
      (new Garticles_insert_inputBuilder()..update(updates))._build();

  _$Garticles_insert_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.favicon,
      this.id,
      this.sentences,
      this.thumbnail,
      this.title,
      this.updated_at,
      this.updated_by,
      this.url})
      : super._();

  @override
  Garticles_insert_input rebuild(
          void Function(Garticles_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_insert_inputBuilder toBuilder() =>
      new Garticles_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_insert_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        favicon == other.favicon &&
        id == other.id &&
        sentences == other.sentences &&
        thumbnail == other.thumbnail &&
        title == other.title &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, created_at.hashCode),
                                            created_by.hashCode),
                                        deleted_at.hashCode),
                                    favicon.hashCode),
                                id.hashCode),
                            sentences.hashCode),
                        thumbnail.hashCode),
                    title.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_insert_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('favicon', favicon)
          ..add('id', id)
          ..add('sentences', sentences)
          ..add('thumbnail', thumbnail)
          ..add('title', title)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('url', url))
        .toString();
  }
}

class Garticles_insert_inputBuilder
    implements Builder<Garticles_insert_input, Garticles_insert_inputBuilder> {
  _$Garticles_insert_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  String? _favicon;
  String? get favicon => _$this._favicon;
  set favicon(String? favicon) => _$this._favicon = favicon;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _sentences;
  _i2.JsonObject? get sentences => _$this._sentences;
  set sentences(_i2.JsonObject? sentences) => _$this._sentences = sentences;

  String? _thumbnail;
  String? get thumbnail => _$this._thumbnail;
  set thumbnail(String? thumbnail) => _$this._thumbnail = thumbnail;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  Garticles_insert_inputBuilder();

  Garticles_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _favicon = $v.favicon;
      _id = $v.id?.toBuilder();
      _sentences = $v.sentences;
      _thumbnail = $v.thumbnail;
      _title = $v.title;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_insert_input;
  }

  @override
  void update(void Function(Garticles_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_insert_input build() => _build();

  _$Garticles_insert_input _build() {
    _$Garticles_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Garticles_insert_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              favicon: favicon,
              id: _id?.build(),
              sentences: sentences,
              thumbnail: thumbnail,
              title: title,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              url: url);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_on_conflict extends Garticles_on_conflict {
  @override
  final Garticles_constraint constraint;
  @override
  final BuiltList<Garticles_update_column> update_columns;
  @override
  final Garticles_bool_exp? where;

  factory _$Garticles_on_conflict(
          [void Function(Garticles_on_conflictBuilder)? updates]) =>
      (new Garticles_on_conflictBuilder()..update(updates))._build();

  _$Garticles_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Garticles_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Garticles_on_conflict', 'update_columns');
  }

  @override
  Garticles_on_conflict rebuild(
          void Function(Garticles_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_on_conflictBuilder toBuilder() =>
      new Garticles_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Garticles_on_conflictBuilder
    implements Builder<Garticles_on_conflict, Garticles_on_conflictBuilder> {
  _$Garticles_on_conflict? _$v;

  Garticles_constraint? _constraint;
  Garticles_constraint? get constraint => _$this._constraint;
  set constraint(Garticles_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Garticles_update_column>? _update_columns;
  ListBuilder<Garticles_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<Garticles_update_column>();
  set update_columns(ListBuilder<Garticles_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Garticles_bool_expBuilder? _where;
  Garticles_bool_expBuilder get where =>
      _$this._where ??= new Garticles_bool_expBuilder();
  set where(Garticles_bool_expBuilder? where) => _$this._where = where;

  Garticles_on_conflictBuilder();

  Garticles_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_on_conflict;
  }

  @override
  void update(void Function(Garticles_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_on_conflict build() => _build();

  _$Garticles_on_conflict _build() {
    _$Garticles_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Garticles_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Garticles_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_order_by extends Garticles_order_by {
  @override
  final Gorder_by? created_at;
  @override
  final Gorder_by? created_by;
  @override
  final Gorder_by? deleted_at;
  @override
  final Gorder_by? favicon;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? sentences;
  @override
  final Gorder_by? thumbnail;
  @override
  final Gorder_by? title;
  @override
  final Gorder_by? updated_at;
  @override
  final Gorder_by? updated_by;
  @override
  final Gorder_by? url;

  factory _$Garticles_order_by(
          [void Function(Garticles_order_byBuilder)? updates]) =>
      (new Garticles_order_byBuilder()..update(updates))._build();

  _$Garticles_order_by._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.favicon,
      this.id,
      this.sentences,
      this.thumbnail,
      this.title,
      this.updated_at,
      this.updated_by,
      this.url})
      : super._();

  @override
  Garticles_order_by rebuild(
          void Function(Garticles_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_order_byBuilder toBuilder() =>
      new Garticles_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_order_by &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        favicon == other.favicon &&
        id == other.id &&
        sentences == other.sentences &&
        thumbnail == other.thumbnail &&
        title == other.title &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, created_at.hashCode),
                                            created_by.hashCode),
                                        deleted_at.hashCode),
                                    favicon.hashCode),
                                id.hashCode),
                            sentences.hashCode),
                        thumbnail.hashCode),
                    title.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_order_by')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('favicon', favicon)
          ..add('id', id)
          ..add('sentences', sentences)
          ..add('thumbnail', thumbnail)
          ..add('title', title)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('url', url))
        .toString();
  }
}

class Garticles_order_byBuilder
    implements Builder<Garticles_order_by, Garticles_order_byBuilder> {
  _$Garticles_order_by? _$v;

  Gorder_by? _created_at;
  Gorder_by? get created_at => _$this._created_at;
  set created_at(Gorder_by? created_at) => _$this._created_at = created_at;

  Gorder_by? _created_by;
  Gorder_by? get created_by => _$this._created_by;
  set created_by(Gorder_by? created_by) => _$this._created_by = created_by;

  Gorder_by? _deleted_at;
  Gorder_by? get deleted_at => _$this._deleted_at;
  set deleted_at(Gorder_by? deleted_at) => _$this._deleted_at = deleted_at;

  Gorder_by? _favicon;
  Gorder_by? get favicon => _$this._favicon;
  set favicon(Gorder_by? favicon) => _$this._favicon = favicon;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _sentences;
  Gorder_by? get sentences => _$this._sentences;
  set sentences(Gorder_by? sentences) => _$this._sentences = sentences;

  Gorder_by? _thumbnail;
  Gorder_by? get thumbnail => _$this._thumbnail;
  set thumbnail(Gorder_by? thumbnail) => _$this._thumbnail = thumbnail;

  Gorder_by? _title;
  Gorder_by? get title => _$this._title;
  set title(Gorder_by? title) => _$this._title = title;

  Gorder_by? _updated_at;
  Gorder_by? get updated_at => _$this._updated_at;
  set updated_at(Gorder_by? updated_at) => _$this._updated_at = updated_at;

  Gorder_by? _updated_by;
  Gorder_by? get updated_by => _$this._updated_by;
  set updated_by(Gorder_by? updated_by) => _$this._updated_by = updated_by;

  Gorder_by? _url;
  Gorder_by? get url => _$this._url;
  set url(Gorder_by? url) => _$this._url = url;

  Garticles_order_byBuilder();

  Garticles_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at;
      _created_by = $v.created_by;
      _deleted_at = $v.deleted_at;
      _favicon = $v.favicon;
      _id = $v.id;
      _sentences = $v.sentences;
      _thumbnail = $v.thumbnail;
      _title = $v.title;
      _updated_at = $v.updated_at;
      _updated_by = $v.updated_by;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_order_by;
  }

  @override
  void update(void Function(Garticles_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_order_by build() => _build();

  _$Garticles_order_by _build() {
    final _$result = _$v ??
        new _$Garticles_order_by._(
            created_at: created_at,
            created_by: created_by,
            deleted_at: deleted_at,
            favicon: favicon,
            id: id,
            sentences: sentences,
            thumbnail: thumbnail,
            title: title,
            updated_at: updated_at,
            updated_by: updated_by,
            url: url);
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_pk_columns_input extends Garticles_pk_columns_input {
  @override
  final Guuid id;

  factory _$Garticles_pk_columns_input(
          [void Function(Garticles_pk_columns_inputBuilder)? updates]) =>
      (new Garticles_pk_columns_inputBuilder()..update(updates))._build();

  _$Garticles_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'Garticles_pk_columns_input', 'id');
  }

  @override
  Garticles_pk_columns_input rebuild(
          void Function(Garticles_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_pk_columns_inputBuilder toBuilder() =>
      new Garticles_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Garticles_pk_columns_inputBuilder
    implements
        Builder<Garticles_pk_columns_input, Garticles_pk_columns_inputBuilder> {
  _$Garticles_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  Garticles_pk_columns_inputBuilder();

  Garticles_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_pk_columns_input;
  }

  @override
  void update(void Function(Garticles_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_pk_columns_input build() => _build();

  _$Garticles_pk_columns_input _build() {
    _$Garticles_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$Garticles_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_prepend_input extends Garticles_prepend_input {
  @override
  final _i2.JsonObject? sentences;

  factory _$Garticles_prepend_input(
          [void Function(Garticles_prepend_inputBuilder)? updates]) =>
      (new Garticles_prepend_inputBuilder()..update(updates))._build();

  _$Garticles_prepend_input._({this.sentences}) : super._();

  @override
  Garticles_prepend_input rebuild(
          void Function(Garticles_prepend_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_prepend_inputBuilder toBuilder() =>
      new Garticles_prepend_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_prepend_input && sentences == other.sentences;
  }

  @override
  int get hashCode {
    return $jf($jc(0, sentences.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_prepend_input')
          ..add('sentences', sentences))
        .toString();
  }
}

class Garticles_prepend_inputBuilder
    implements
        Builder<Garticles_prepend_input, Garticles_prepend_inputBuilder> {
  _$Garticles_prepend_input? _$v;

  _i2.JsonObject? _sentences;
  _i2.JsonObject? get sentences => _$this._sentences;
  set sentences(_i2.JsonObject? sentences) => _$this._sentences = sentences;

  Garticles_prepend_inputBuilder();

  Garticles_prepend_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _sentences = $v.sentences;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_prepend_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_prepend_input;
  }

  @override
  void update(void Function(Garticles_prepend_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_prepend_input build() => _build();

  _$Garticles_prepend_input _build() {
    final _$result =
        _$v ?? new _$Garticles_prepend_input._(sentences: sentences);
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_set_input extends Garticles_set_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final String? favicon;
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? sentences;
  @override
  final String? thumbnail;
  @override
  final String? title;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? url;

  factory _$Garticles_set_input(
          [void Function(Garticles_set_inputBuilder)? updates]) =>
      (new Garticles_set_inputBuilder()..update(updates))._build();

  _$Garticles_set_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.favicon,
      this.id,
      this.sentences,
      this.thumbnail,
      this.title,
      this.updated_at,
      this.updated_by,
      this.url})
      : super._();

  @override
  Garticles_set_input rebuild(
          void Function(Garticles_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_set_inputBuilder toBuilder() =>
      new Garticles_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_set_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        favicon == other.favicon &&
        id == other.id &&
        sentences == other.sentences &&
        thumbnail == other.thumbnail &&
        title == other.title &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, created_at.hashCode),
                                            created_by.hashCode),
                                        deleted_at.hashCode),
                                    favicon.hashCode),
                                id.hashCode),
                            sentences.hashCode),
                        thumbnail.hashCode),
                    title.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_set_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('favicon', favicon)
          ..add('id', id)
          ..add('sentences', sentences)
          ..add('thumbnail', thumbnail)
          ..add('title', title)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('url', url))
        .toString();
  }
}

class Garticles_set_inputBuilder
    implements Builder<Garticles_set_input, Garticles_set_inputBuilder> {
  _$Garticles_set_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  String? _favicon;
  String? get favicon => _$this._favicon;
  set favicon(String? favicon) => _$this._favicon = favicon;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _sentences;
  _i2.JsonObject? get sentences => _$this._sentences;
  set sentences(_i2.JsonObject? sentences) => _$this._sentences = sentences;

  String? _thumbnail;
  String? get thumbnail => _$this._thumbnail;
  set thumbnail(String? thumbnail) => _$this._thumbnail = thumbnail;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  Garticles_set_inputBuilder();

  Garticles_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _favicon = $v.favicon;
      _id = $v.id?.toBuilder();
      _sentences = $v.sentences;
      _thumbnail = $v.thumbnail;
      _title = $v.title;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_set_input;
  }

  @override
  void update(void Function(Garticles_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_set_input build() => _build();

  _$Garticles_set_input _build() {
    _$Garticles_set_input _$result;
    try {
      _$result = _$v ??
          new _$Garticles_set_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              favicon: favicon,
              id: _id?.build(),
              sentences: sentences,
              thumbnail: thumbnail,
              title: title,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              url: url);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_stream_cursor_input extends Garticles_stream_cursor_input {
  @override
  final Garticles_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Garticles_stream_cursor_input(
          [void Function(Garticles_stream_cursor_inputBuilder)? updates]) =>
      (new Garticles_stream_cursor_inputBuilder()..update(updates))._build();

  _$Garticles_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Garticles_stream_cursor_input', 'initial_value');
  }

  @override
  Garticles_stream_cursor_input rebuild(
          void Function(Garticles_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_stream_cursor_inputBuilder toBuilder() =>
      new Garticles_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Garticles_stream_cursor_inputBuilder
    implements
        Builder<Garticles_stream_cursor_input,
            Garticles_stream_cursor_inputBuilder> {
  _$Garticles_stream_cursor_input? _$v;

  Garticles_stream_cursor_value_inputBuilder? _initial_value;
  Garticles_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new Garticles_stream_cursor_value_inputBuilder();
  set initial_value(
          Garticles_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Garticles_stream_cursor_inputBuilder();

  Garticles_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_stream_cursor_input;
  }

  @override
  void update(void Function(Garticles_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_stream_cursor_input build() => _build();

  _$Garticles_stream_cursor_input _build() {
    _$Garticles_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Garticles_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_stream_cursor_value_input
    extends Garticles_stream_cursor_value_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final String? favicon;
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? sentences;
  @override
  final String? thumbnail;
  @override
  final String? title;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? url;

  factory _$Garticles_stream_cursor_value_input(
          [void Function(Garticles_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new Garticles_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$Garticles_stream_cursor_value_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.favicon,
      this.id,
      this.sentences,
      this.thumbnail,
      this.title,
      this.updated_at,
      this.updated_by,
      this.url})
      : super._();

  @override
  Garticles_stream_cursor_value_input rebuild(
          void Function(Garticles_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_stream_cursor_value_inputBuilder toBuilder() =>
      new Garticles_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_stream_cursor_value_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        favicon == other.favicon &&
        id == other.id &&
        sentences == other.sentences &&
        thumbnail == other.thumbnail &&
        title == other.title &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, created_at.hashCode),
                                            created_by.hashCode),
                                        deleted_at.hashCode),
                                    favicon.hashCode),
                                id.hashCode),
                            sentences.hashCode),
                        thumbnail.hashCode),
                    title.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_stream_cursor_value_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('favicon', favicon)
          ..add('id', id)
          ..add('sentences', sentences)
          ..add('thumbnail', thumbnail)
          ..add('title', title)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('url', url))
        .toString();
  }
}

class Garticles_stream_cursor_value_inputBuilder
    implements
        Builder<Garticles_stream_cursor_value_input,
            Garticles_stream_cursor_value_inputBuilder> {
  _$Garticles_stream_cursor_value_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  String? _favicon;
  String? get favicon => _$this._favicon;
  set favicon(String? favicon) => _$this._favicon = favicon;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _sentences;
  _i2.JsonObject? get sentences => _$this._sentences;
  set sentences(_i2.JsonObject? sentences) => _$this._sentences = sentences;

  String? _thumbnail;
  String? get thumbnail => _$this._thumbnail;
  set thumbnail(String? thumbnail) => _$this._thumbnail = thumbnail;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  Garticles_stream_cursor_value_inputBuilder();

  Garticles_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _favicon = $v.favicon;
      _id = $v.id?.toBuilder();
      _sentences = $v.sentences;
      _thumbnail = $v.thumbnail;
      _title = $v.title;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(Garticles_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_stream_cursor_value_input build() => _build();

  _$Garticles_stream_cursor_value_input _build() {
    _$Garticles_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Garticles_stream_cursor_value_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              favicon: favicon,
              id: _id?.build(),
              sentences: sentences,
              thumbnail: thumbnail,
              title: title,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              url: url);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Garticles_updates extends Garticles_updates {
  @override
  final Garticles_append_input? G_append;
  @override
  final Garticles_delete_at_path_input? G_delete_at_path;
  @override
  final Garticles_delete_elem_input? G_delete_elem;
  @override
  final Garticles_delete_key_input? G_delete_key;
  @override
  final Garticles_prepend_input? G_prepend;
  @override
  final Garticles_set_input? G_set;
  @override
  final Garticles_bool_exp where;

  factory _$Garticles_updates(
          [void Function(Garticles_updatesBuilder)? updates]) =>
      (new Garticles_updatesBuilder()..update(updates))._build();

  _$Garticles_updates._(
      {this.G_append,
      this.G_delete_at_path,
      this.G_delete_elem,
      this.G_delete_key,
      this.G_prepend,
      this.G_set,
      required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(where, r'Garticles_updates', 'where');
  }

  @override
  Garticles_updates rebuild(void Function(Garticles_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Garticles_updatesBuilder toBuilder() =>
      new Garticles_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Garticles_updates &&
        G_append == other.G_append &&
        G_delete_at_path == other.G_delete_at_path &&
        G_delete_elem == other.G_delete_elem &&
        G_delete_key == other.G_delete_key &&
        G_prepend == other.G_prepend &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, G_append.hashCode),
                            G_delete_at_path.hashCode),
                        G_delete_elem.hashCode),
                    G_delete_key.hashCode),
                G_prepend.hashCode),
            G_set.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Garticles_updates')
          ..add('G_append', G_append)
          ..add('G_delete_at_path', G_delete_at_path)
          ..add('G_delete_elem', G_delete_elem)
          ..add('G_delete_key', G_delete_key)
          ..add('G_prepend', G_prepend)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Garticles_updatesBuilder
    implements Builder<Garticles_updates, Garticles_updatesBuilder> {
  _$Garticles_updates? _$v;

  Garticles_append_inputBuilder? _G_append;
  Garticles_append_inputBuilder get G_append =>
      _$this._G_append ??= new Garticles_append_inputBuilder();
  set G_append(Garticles_append_inputBuilder? G_append) =>
      _$this._G_append = G_append;

  Garticles_delete_at_path_inputBuilder? _G_delete_at_path;
  Garticles_delete_at_path_inputBuilder get G_delete_at_path =>
      _$this._G_delete_at_path ??= new Garticles_delete_at_path_inputBuilder();
  set G_delete_at_path(
          Garticles_delete_at_path_inputBuilder? G_delete_at_path) =>
      _$this._G_delete_at_path = G_delete_at_path;

  Garticles_delete_elem_inputBuilder? _G_delete_elem;
  Garticles_delete_elem_inputBuilder get G_delete_elem =>
      _$this._G_delete_elem ??= new Garticles_delete_elem_inputBuilder();
  set G_delete_elem(Garticles_delete_elem_inputBuilder? G_delete_elem) =>
      _$this._G_delete_elem = G_delete_elem;

  Garticles_delete_key_inputBuilder? _G_delete_key;
  Garticles_delete_key_inputBuilder get G_delete_key =>
      _$this._G_delete_key ??= new Garticles_delete_key_inputBuilder();
  set G_delete_key(Garticles_delete_key_inputBuilder? G_delete_key) =>
      _$this._G_delete_key = G_delete_key;

  Garticles_prepend_inputBuilder? _G_prepend;
  Garticles_prepend_inputBuilder get G_prepend =>
      _$this._G_prepend ??= new Garticles_prepend_inputBuilder();
  set G_prepend(Garticles_prepend_inputBuilder? G_prepend) =>
      _$this._G_prepend = G_prepend;

  Garticles_set_inputBuilder? _G_set;
  Garticles_set_inputBuilder get G_set =>
      _$this._G_set ??= new Garticles_set_inputBuilder();
  set G_set(Garticles_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Garticles_bool_expBuilder? _where;
  Garticles_bool_expBuilder get where =>
      _$this._where ??= new Garticles_bool_expBuilder();
  set where(Garticles_bool_expBuilder? where) => _$this._where = where;

  Garticles_updatesBuilder();

  Garticles_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_append = $v.G_append?.toBuilder();
      _G_delete_at_path = $v.G_delete_at_path?.toBuilder();
      _G_delete_elem = $v.G_delete_elem?.toBuilder();
      _G_delete_key = $v.G_delete_key?.toBuilder();
      _G_prepend = $v.G_prepend?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Garticles_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Garticles_updates;
  }

  @override
  void update(void Function(Garticles_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Garticles_updates build() => _build();

  _$Garticles_updates _build() {
    _$Garticles_updates _$result;
    try {
      _$result = _$v ??
          new _$Garticles_updates._(
              G_append: _G_append?.build(),
              G_delete_at_path: _G_delete_at_path?.build(),
              G_delete_elem: _G_delete_elem?.build(),
              G_delete_key: _G_delete_key?.build(),
              G_prepend: _G_prepend?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_append';
        _G_append?.build();
        _$failedField = 'G_delete_at_path';
        _G_delete_at_path?.build();
        _$failedField = 'G_delete_elem';
        _G_delete_elem?.build();
        _$failedField = 'G_delete_key';
        _G_delete_key?.build();
        _$failedField = 'G_prepend';
        _G_prepend?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Garticles_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_append_input
    extends GauthProviderRequests_append_input {
  @override
  final _i2.JsonObject? options;

  factory _$GauthProviderRequests_append_input(
          [void Function(GauthProviderRequests_append_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_append_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_append_input._({this.options}) : super._();

  @override
  GauthProviderRequests_append_input rebuild(
          void Function(GauthProviderRequests_append_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_append_inputBuilder toBuilder() =>
      new GauthProviderRequests_append_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_append_input &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(0, options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_append_input')
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_append_inputBuilder
    implements
        Builder<GauthProviderRequests_append_input,
            GauthProviderRequests_append_inputBuilder> {
  _$GauthProviderRequests_append_input? _$v;

  _i2.JsonObject? _options;
  _i2.JsonObject? get options => _$this._options;
  set options(_i2.JsonObject? options) => _$this._options = options;

  GauthProviderRequests_append_inputBuilder();

  GauthProviderRequests_append_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_append_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_append_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_append_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_append_input build() => _build();

  _$GauthProviderRequests_append_input _build() {
    final _$result =
        _$v ?? new _$GauthProviderRequests_append_input._(options: options);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_bool_exp extends GauthProviderRequests_bool_exp {
  @override
  final BuiltList<GauthProviderRequests_bool_exp>? G_and;
  @override
  final GauthProviderRequests_bool_exp? G_not;
  @override
  final BuiltList<GauthProviderRequests_bool_exp>? G_or;
  @override
  final Guuid_comparison_exp? id;
  @override
  final Gjsonb_comparison_exp? options;

  factory _$GauthProviderRequests_bool_exp(
          [void Function(GauthProviderRequests_bool_expBuilder)? updates]) =>
      (new GauthProviderRequests_bool_expBuilder()..update(updates))._build();

  _$GauthProviderRequests_bool_exp._(
      {this.G_and, this.G_not, this.G_or, this.id, this.options})
      : super._();

  @override
  GauthProviderRequests_bool_exp rebuild(
          void Function(GauthProviderRequests_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_bool_expBuilder toBuilder() =>
      new GauthProviderRequests_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        id == other.id &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, G_and.hashCode), G_not.hashCode), G_or.hashCode),
            id.hashCode),
        options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('id', id)
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_bool_expBuilder
    implements
        Builder<GauthProviderRequests_bool_exp,
            GauthProviderRequests_bool_expBuilder> {
  _$GauthProviderRequests_bool_exp? _$v;

  ListBuilder<GauthProviderRequests_bool_exp>? _G_and;
  ListBuilder<GauthProviderRequests_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthProviderRequests_bool_exp>();
  set G_and(ListBuilder<GauthProviderRequests_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthProviderRequests_bool_expBuilder? _G_not;
  GauthProviderRequests_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthProviderRequests_bool_expBuilder();
  set G_not(GauthProviderRequests_bool_expBuilder? G_not) =>
      _$this._G_not = G_not;

  ListBuilder<GauthProviderRequests_bool_exp>? _G_or;
  ListBuilder<GauthProviderRequests_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthProviderRequests_bool_exp>();
  set G_or(ListBuilder<GauthProviderRequests_bool_exp>? G_or) =>
      _$this._G_or = G_or;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  Gjsonb_comparison_expBuilder? _options;
  Gjsonb_comparison_expBuilder get options =>
      _$this._options ??= new Gjsonb_comparison_expBuilder();
  set options(Gjsonb_comparison_expBuilder? options) =>
      _$this._options = options;

  GauthProviderRequests_bool_expBuilder();

  GauthProviderRequests_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _id = $v.id?.toBuilder();
      _options = $v.options?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_bool_exp;
  }

  @override
  void update(void Function(GauthProviderRequests_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_bool_exp build() => _build();

  _$GauthProviderRequests_bool_exp _build() {
    _$GauthProviderRequests_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              id: _id?.build(),
              options: _options?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'options';
        _options?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_delete_at_path_input
    extends GauthProviderRequests_delete_at_path_input {
  @override
  final BuiltList<String>? options;

  factory _$GauthProviderRequests_delete_at_path_input(
          [void Function(GauthProviderRequests_delete_at_path_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_delete_at_path_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_delete_at_path_input._({this.options}) : super._();

  @override
  GauthProviderRequests_delete_at_path_input rebuild(
          void Function(GauthProviderRequests_delete_at_path_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_delete_at_path_inputBuilder toBuilder() =>
      new GauthProviderRequests_delete_at_path_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_delete_at_path_input &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(0, options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_delete_at_path_input')
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_delete_at_path_inputBuilder
    implements
        Builder<GauthProviderRequests_delete_at_path_input,
            GauthProviderRequests_delete_at_path_inputBuilder> {
  _$GauthProviderRequests_delete_at_path_input? _$v;

  ListBuilder<String>? _options;
  ListBuilder<String> get options =>
      _$this._options ??= new ListBuilder<String>();
  set options(ListBuilder<String>? options) => _$this._options = options;

  GauthProviderRequests_delete_at_path_inputBuilder();

  GauthProviderRequests_delete_at_path_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _options = $v.options?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_delete_at_path_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_delete_at_path_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_delete_at_path_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_delete_at_path_input build() => _build();

  _$GauthProviderRequests_delete_at_path_input _build() {
    _$GauthProviderRequests_delete_at_path_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_delete_at_path_input._(
              options: _options?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'options';
        _options?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_delete_at_path_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_delete_elem_input
    extends GauthProviderRequests_delete_elem_input {
  @override
  final int? options;

  factory _$GauthProviderRequests_delete_elem_input(
          [void Function(GauthProviderRequests_delete_elem_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_delete_elem_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_delete_elem_input._({this.options}) : super._();

  @override
  GauthProviderRequests_delete_elem_input rebuild(
          void Function(GauthProviderRequests_delete_elem_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_delete_elem_inputBuilder toBuilder() =>
      new GauthProviderRequests_delete_elem_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_delete_elem_input &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(0, options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_delete_elem_input')
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_delete_elem_inputBuilder
    implements
        Builder<GauthProviderRequests_delete_elem_input,
            GauthProviderRequests_delete_elem_inputBuilder> {
  _$GauthProviderRequests_delete_elem_input? _$v;

  int? _options;
  int? get options => _$this._options;
  set options(int? options) => _$this._options = options;

  GauthProviderRequests_delete_elem_inputBuilder();

  GauthProviderRequests_delete_elem_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_delete_elem_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_delete_elem_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_delete_elem_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_delete_elem_input build() => _build();

  _$GauthProviderRequests_delete_elem_input _build() {
    final _$result = _$v ??
        new _$GauthProviderRequests_delete_elem_input._(options: options);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_delete_key_input
    extends GauthProviderRequests_delete_key_input {
  @override
  final String? options;

  factory _$GauthProviderRequests_delete_key_input(
          [void Function(GauthProviderRequests_delete_key_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_delete_key_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_delete_key_input._({this.options}) : super._();

  @override
  GauthProviderRequests_delete_key_input rebuild(
          void Function(GauthProviderRequests_delete_key_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_delete_key_inputBuilder toBuilder() =>
      new GauthProviderRequests_delete_key_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_delete_key_input &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(0, options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_delete_key_input')
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_delete_key_inputBuilder
    implements
        Builder<GauthProviderRequests_delete_key_input,
            GauthProviderRequests_delete_key_inputBuilder> {
  _$GauthProviderRequests_delete_key_input? _$v;

  String? _options;
  String? get options => _$this._options;
  set options(String? options) => _$this._options = options;

  GauthProviderRequests_delete_key_inputBuilder();

  GauthProviderRequests_delete_key_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_delete_key_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_delete_key_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_delete_key_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_delete_key_input build() => _build();

  _$GauthProviderRequests_delete_key_input _build() {
    final _$result =
        _$v ?? new _$GauthProviderRequests_delete_key_input._(options: options);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_insert_input
    extends GauthProviderRequests_insert_input {
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? options;

  factory _$GauthProviderRequests_insert_input(
          [void Function(GauthProviderRequests_insert_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_insert_input._({this.id, this.options}) : super._();

  @override
  GauthProviderRequests_insert_input rebuild(
          void Function(GauthProviderRequests_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_insert_inputBuilder toBuilder() =>
      new GauthProviderRequests_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_insert_input &&
        id == other.id &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_insert_input')
          ..add('id', id)
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_insert_inputBuilder
    implements
        Builder<GauthProviderRequests_insert_input,
            GauthProviderRequests_insert_inputBuilder> {
  _$GauthProviderRequests_insert_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _options;
  _i2.JsonObject? get options => _$this._options;
  set options(_i2.JsonObject? options) => _$this._options = options;

  GauthProviderRequests_insert_inputBuilder();

  GauthProviderRequests_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id?.toBuilder();
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_insert_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_insert_input build() => _build();

  _$GauthProviderRequests_insert_input _build() {
    _$GauthProviderRequests_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_insert_input._(
              id: _id?.build(), options: options);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        _id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_on_conflict
    extends GauthProviderRequests_on_conflict {
  @override
  final GauthProviderRequests_constraint constraint;
  @override
  final BuiltList<GauthProviderRequests_update_column> update_columns;
  @override
  final GauthProviderRequests_bool_exp? where;

  factory _$GauthProviderRequests_on_conflict(
          [void Function(GauthProviderRequests_on_conflictBuilder)? updates]) =>
      (new GauthProviderRequests_on_conflictBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthProviderRequests_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthProviderRequests_on_conflict', 'update_columns');
  }

  @override
  GauthProviderRequests_on_conflict rebuild(
          void Function(GauthProviderRequests_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_on_conflictBuilder toBuilder() =>
      new GauthProviderRequests_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthProviderRequests_on_conflictBuilder
    implements
        Builder<GauthProviderRequests_on_conflict,
            GauthProviderRequests_on_conflictBuilder> {
  _$GauthProviderRequests_on_conflict? _$v;

  GauthProviderRequests_constraint? _constraint;
  GauthProviderRequests_constraint? get constraint => _$this._constraint;
  set constraint(GauthProviderRequests_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthProviderRequests_update_column>? _update_columns;
  ListBuilder<GauthProviderRequests_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthProviderRequests_update_column>();
  set update_columns(
          ListBuilder<GauthProviderRequests_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthProviderRequests_bool_expBuilder? _where;
  GauthProviderRequests_bool_expBuilder get where =>
      _$this._where ??= new GauthProviderRequests_bool_expBuilder();
  set where(GauthProviderRequests_bool_expBuilder? where) =>
      _$this._where = where;

  GauthProviderRequests_on_conflictBuilder();

  GauthProviderRequests_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_on_conflict;
  }

  @override
  void update(
      void Function(GauthProviderRequests_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_on_conflict build() => _build();

  _$GauthProviderRequests_on_conflict _build() {
    _$GauthProviderRequests_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(constraint,
                  r'GauthProviderRequests_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_order_by extends GauthProviderRequests_order_by {
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? options;

  factory _$GauthProviderRequests_order_by(
          [void Function(GauthProviderRequests_order_byBuilder)? updates]) =>
      (new GauthProviderRequests_order_byBuilder()..update(updates))._build();

  _$GauthProviderRequests_order_by._({this.id, this.options}) : super._();

  @override
  GauthProviderRequests_order_by rebuild(
          void Function(GauthProviderRequests_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_order_byBuilder toBuilder() =>
      new GauthProviderRequests_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_order_by &&
        id == other.id &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_order_by')
          ..add('id', id)
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_order_byBuilder
    implements
        Builder<GauthProviderRequests_order_by,
            GauthProviderRequests_order_byBuilder> {
  _$GauthProviderRequests_order_by? _$v;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _options;
  Gorder_by? get options => _$this._options;
  set options(Gorder_by? options) => _$this._options = options;

  GauthProviderRequests_order_byBuilder();

  GauthProviderRequests_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_order_by;
  }

  @override
  void update(void Function(GauthProviderRequests_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_order_by build() => _build();

  _$GauthProviderRequests_order_by _build() {
    final _$result =
        _$v ?? new _$GauthProviderRequests_order_by._(id: id, options: options);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_pk_columns_input
    extends GauthProviderRequests_pk_columns_input {
  @override
  final Guuid id;

  factory _$GauthProviderRequests_pk_columns_input(
          [void Function(GauthProviderRequests_pk_columns_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_pk_columns_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GauthProviderRequests_pk_columns_input', 'id');
  }

  @override
  GauthProviderRequests_pk_columns_input rebuild(
          void Function(GauthProviderRequests_pk_columns_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_pk_columns_inputBuilder toBuilder() =>
      new GauthProviderRequests_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class GauthProviderRequests_pk_columns_inputBuilder
    implements
        Builder<GauthProviderRequests_pk_columns_input,
            GauthProviderRequests_pk_columns_inputBuilder> {
  _$GauthProviderRequests_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  GauthProviderRequests_pk_columns_inputBuilder();

  GauthProviderRequests_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_pk_columns_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_pk_columns_input build() => _build();

  _$GauthProviderRequests_pk_columns_input _build() {
    _$GauthProviderRequests_pk_columns_input _$result;
    try {
      _$result =
          _$v ?? new _$GauthProviderRequests_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_pk_columns_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_prepend_input
    extends GauthProviderRequests_prepend_input {
  @override
  final _i2.JsonObject? options;

  factory _$GauthProviderRequests_prepend_input(
          [void Function(GauthProviderRequests_prepend_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_prepend_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_prepend_input._({this.options}) : super._();

  @override
  GauthProviderRequests_prepend_input rebuild(
          void Function(GauthProviderRequests_prepend_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_prepend_inputBuilder toBuilder() =>
      new GauthProviderRequests_prepend_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_prepend_input &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc(0, options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_prepend_input')
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_prepend_inputBuilder
    implements
        Builder<GauthProviderRequests_prepend_input,
            GauthProviderRequests_prepend_inputBuilder> {
  _$GauthProviderRequests_prepend_input? _$v;

  _i2.JsonObject? _options;
  _i2.JsonObject? get options => _$this._options;
  set options(_i2.JsonObject? options) => _$this._options = options;

  GauthProviderRequests_prepend_inputBuilder();

  GauthProviderRequests_prepend_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_prepend_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_prepend_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_prepend_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_prepend_input build() => _build();

  _$GauthProviderRequests_prepend_input _build() {
    final _$result =
        _$v ?? new _$GauthProviderRequests_prepend_input._(options: options);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_set_input
    extends GauthProviderRequests_set_input {
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? options;

  factory _$GauthProviderRequests_set_input(
          [void Function(GauthProviderRequests_set_inputBuilder)? updates]) =>
      (new GauthProviderRequests_set_inputBuilder()..update(updates))._build();

  _$GauthProviderRequests_set_input._({this.id, this.options}) : super._();

  @override
  GauthProviderRequests_set_input rebuild(
          void Function(GauthProviderRequests_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_set_inputBuilder toBuilder() =>
      new GauthProviderRequests_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_set_input &&
        id == other.id &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_set_input')
          ..add('id', id)
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_set_inputBuilder
    implements
        Builder<GauthProviderRequests_set_input,
            GauthProviderRequests_set_inputBuilder> {
  _$GauthProviderRequests_set_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _options;
  _i2.JsonObject? get options => _$this._options;
  set options(_i2.JsonObject? options) => _$this._options = options;

  GauthProviderRequests_set_inputBuilder();

  GauthProviderRequests_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id?.toBuilder();
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_set_input;
  }

  @override
  void update(void Function(GauthProviderRequests_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_set_input build() => _build();

  _$GauthProviderRequests_set_input _build() {
    _$GauthProviderRequests_set_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_set_input._(
              id: _id?.build(), options: options);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        _id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_stream_cursor_input
    extends GauthProviderRequests_stream_cursor_input {
  @override
  final GauthProviderRequests_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthProviderRequests_stream_cursor_input(
          [void Function(GauthProviderRequests_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthProviderRequests_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(initial_value,
        r'GauthProviderRequests_stream_cursor_input', 'initial_value');
  }

  @override
  GauthProviderRequests_stream_cursor_input rebuild(
          void Function(GauthProviderRequests_stream_cursor_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_stream_cursor_inputBuilder toBuilder() =>
      new GauthProviderRequests_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthProviderRequests_stream_cursor_inputBuilder
    implements
        Builder<GauthProviderRequests_stream_cursor_input,
            GauthProviderRequests_stream_cursor_inputBuilder> {
  _$GauthProviderRequests_stream_cursor_input? _$v;

  GauthProviderRequests_stream_cursor_value_inputBuilder? _initial_value;
  GauthProviderRequests_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthProviderRequests_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthProviderRequests_stream_cursor_value_inputBuilder?
              initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthProviderRequests_stream_cursor_inputBuilder();

  GauthProviderRequests_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_stream_cursor_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_stream_cursor_input build() => _build();

  _$GauthProviderRequests_stream_cursor_input _build() {
    _$GauthProviderRequests_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_stream_cursor_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_stream_cursor_value_input
    extends GauthProviderRequests_stream_cursor_value_input {
  @override
  final Guuid? id;
  @override
  final _i2.JsonObject? options;

  factory _$GauthProviderRequests_stream_cursor_value_input(
          [void Function(
                  GauthProviderRequests_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthProviderRequests_stream_cursor_value_inputBuilder()
            ..update(updates))
          ._build();

  _$GauthProviderRequests_stream_cursor_value_input._({this.id, this.options})
      : super._();

  @override
  GauthProviderRequests_stream_cursor_value_input rebuild(
          void Function(GauthProviderRequests_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthProviderRequests_stream_cursor_value_inputBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_stream_cursor_value_input &&
        id == other.id &&
        options == other.options;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), options.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviderRequests_stream_cursor_value_input')
          ..add('id', id)
          ..add('options', options))
        .toString();
  }
}

class GauthProviderRequests_stream_cursor_value_inputBuilder
    implements
        Builder<GauthProviderRequests_stream_cursor_value_input,
            GauthProviderRequests_stream_cursor_value_inputBuilder> {
  _$GauthProviderRequests_stream_cursor_value_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  _i2.JsonObject? _options;
  _i2.JsonObject? get options => _$this._options;
  set options(_i2.JsonObject? options) => _$this._options = options;

  GauthProviderRequests_stream_cursor_value_inputBuilder();

  GauthProviderRequests_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id?.toBuilder();
      _options = $v.options;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthProviderRequests_stream_cursor_value_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_stream_cursor_value_input build() => _build();

  _$GauthProviderRequests_stream_cursor_value_input _build() {
    _$GauthProviderRequests_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_stream_cursor_value_input._(
              id: _id?.build(), options: options);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        _id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviderRequests_updates extends GauthProviderRequests_updates {
  @override
  final GauthProviderRequests_append_input? G_append;
  @override
  final GauthProviderRequests_delete_at_path_input? G_delete_at_path;
  @override
  final GauthProviderRequests_delete_elem_input? G_delete_elem;
  @override
  final GauthProviderRequests_delete_key_input? G_delete_key;
  @override
  final GauthProviderRequests_prepend_input? G_prepend;
  @override
  final GauthProviderRequests_set_input? G_set;
  @override
  final GauthProviderRequests_bool_exp where;

  factory _$GauthProviderRequests_updates(
          [void Function(GauthProviderRequests_updatesBuilder)? updates]) =>
      (new GauthProviderRequests_updatesBuilder()..update(updates))._build();

  _$GauthProviderRequests_updates._(
      {this.G_append,
      this.G_delete_at_path,
      this.G_delete_elem,
      this.G_delete_key,
      this.G_prepend,
      this.G_set,
      required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthProviderRequests_updates', 'where');
  }

  @override
  GauthProviderRequests_updates rebuild(
          void Function(GauthProviderRequests_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviderRequests_updatesBuilder toBuilder() =>
      new GauthProviderRequests_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviderRequests_updates &&
        G_append == other.G_append &&
        G_delete_at_path == other.G_delete_at_path &&
        G_delete_elem == other.G_delete_elem &&
        G_delete_key == other.G_delete_key &&
        G_prepend == other.G_prepend &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, G_append.hashCode),
                            G_delete_at_path.hashCode),
                        G_delete_elem.hashCode),
                    G_delete_key.hashCode),
                G_prepend.hashCode),
            G_set.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviderRequests_updates')
          ..add('G_append', G_append)
          ..add('G_delete_at_path', G_delete_at_path)
          ..add('G_delete_elem', G_delete_elem)
          ..add('G_delete_key', G_delete_key)
          ..add('G_prepend', G_prepend)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthProviderRequests_updatesBuilder
    implements
        Builder<GauthProviderRequests_updates,
            GauthProviderRequests_updatesBuilder> {
  _$GauthProviderRequests_updates? _$v;

  GauthProviderRequests_append_inputBuilder? _G_append;
  GauthProviderRequests_append_inputBuilder get G_append =>
      _$this._G_append ??= new GauthProviderRequests_append_inputBuilder();
  set G_append(GauthProviderRequests_append_inputBuilder? G_append) =>
      _$this._G_append = G_append;

  GauthProviderRequests_delete_at_path_inputBuilder? _G_delete_at_path;
  GauthProviderRequests_delete_at_path_inputBuilder get G_delete_at_path =>
      _$this._G_delete_at_path ??=
          new GauthProviderRequests_delete_at_path_inputBuilder();
  set G_delete_at_path(
          GauthProviderRequests_delete_at_path_inputBuilder?
              G_delete_at_path) =>
      _$this._G_delete_at_path = G_delete_at_path;

  GauthProviderRequests_delete_elem_inputBuilder? _G_delete_elem;
  GauthProviderRequests_delete_elem_inputBuilder get G_delete_elem =>
      _$this._G_delete_elem ??=
          new GauthProviderRequests_delete_elem_inputBuilder();
  set G_delete_elem(
          GauthProviderRequests_delete_elem_inputBuilder? G_delete_elem) =>
      _$this._G_delete_elem = G_delete_elem;

  GauthProviderRequests_delete_key_inputBuilder? _G_delete_key;
  GauthProviderRequests_delete_key_inputBuilder get G_delete_key =>
      _$this._G_delete_key ??=
          new GauthProviderRequests_delete_key_inputBuilder();
  set G_delete_key(
          GauthProviderRequests_delete_key_inputBuilder? G_delete_key) =>
      _$this._G_delete_key = G_delete_key;

  GauthProviderRequests_prepend_inputBuilder? _G_prepend;
  GauthProviderRequests_prepend_inputBuilder get G_prepend =>
      _$this._G_prepend ??= new GauthProviderRequests_prepend_inputBuilder();
  set G_prepend(GauthProviderRequests_prepend_inputBuilder? G_prepend) =>
      _$this._G_prepend = G_prepend;

  GauthProviderRequests_set_inputBuilder? _G_set;
  GauthProviderRequests_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthProviderRequests_set_inputBuilder();
  set G_set(GauthProviderRequests_set_inputBuilder? G_set) =>
      _$this._G_set = G_set;

  GauthProviderRequests_bool_expBuilder? _where;
  GauthProviderRequests_bool_expBuilder get where =>
      _$this._where ??= new GauthProviderRequests_bool_expBuilder();
  set where(GauthProviderRequests_bool_expBuilder? where) =>
      _$this._where = where;

  GauthProviderRequests_updatesBuilder();

  GauthProviderRequests_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_append = $v.G_append?.toBuilder();
      _G_delete_at_path = $v.G_delete_at_path?.toBuilder();
      _G_delete_elem = $v.G_delete_elem?.toBuilder();
      _G_delete_key = $v.G_delete_key?.toBuilder();
      _G_prepend = $v.G_prepend?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviderRequests_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviderRequests_updates;
  }

  @override
  void update(void Function(GauthProviderRequests_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviderRequests_updates build() => _build();

  _$GauthProviderRequests_updates _build() {
    _$GauthProviderRequests_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthProviderRequests_updates._(
              G_append: _G_append?.build(),
              G_delete_at_path: _G_delete_at_path?.build(),
              G_delete_elem: _G_delete_elem?.build(),
              G_delete_key: _G_delete_key?.build(),
              G_prepend: _G_prepend?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_append';
        _G_append?.build();
        _$failedField = 'G_delete_at_path';
        _G_delete_at_path?.build();
        _$failedField = 'G_delete_elem';
        _G_delete_elem?.build();
        _$failedField = 'G_delete_key';
        _G_delete_key?.build();
        _$failedField = 'G_prepend';
        _G_prepend?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviderRequests_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_bool_exp extends GauthProviders_bool_exp {
  @override
  final BuiltList<GauthProviders_bool_exp>? G_and;
  @override
  final GauthProviders_bool_exp? G_not;
  @override
  final BuiltList<GauthProviders_bool_exp>? G_or;
  @override
  final GString_comparison_exp? id;
  @override
  final GauthUserProviders_bool_exp? userProviders;
  @override
  final GauthUserProviders_aggregate_bool_exp? userProviders_aggregate;

  factory _$GauthProviders_bool_exp(
          [void Function(GauthProviders_bool_expBuilder)? updates]) =>
      (new GauthProviders_bool_expBuilder()..update(updates))._build();

  _$GauthProviders_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.id,
      this.userProviders,
      this.userProviders_aggregate})
      : super._();

  @override
  GauthProviders_bool_exp rebuild(
          void Function(GauthProviders_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_bool_expBuilder toBuilder() =>
      new GauthProviders_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        id == other.id &&
        userProviders == other.userProviders &&
        userProviders_aggregate == other.userProviders_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc($jc(0, G_and.hashCode), G_not.hashCode), G_or.hashCode),
                id.hashCode),
            userProviders.hashCode),
        userProviders_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('id', id)
          ..add('userProviders', userProviders)
          ..add('userProviders_aggregate', userProviders_aggregate))
        .toString();
  }
}

class GauthProviders_bool_expBuilder
    implements
        Builder<GauthProviders_bool_exp, GauthProviders_bool_expBuilder> {
  _$GauthProviders_bool_exp? _$v;

  ListBuilder<GauthProviders_bool_exp>? _G_and;
  ListBuilder<GauthProviders_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthProviders_bool_exp>();
  set G_and(ListBuilder<GauthProviders_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthProviders_bool_expBuilder? _G_not;
  GauthProviders_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthProviders_bool_expBuilder();
  set G_not(GauthProviders_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<GauthProviders_bool_exp>? _G_or;
  ListBuilder<GauthProviders_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthProviders_bool_exp>();
  set G_or(ListBuilder<GauthProviders_bool_exp>? G_or) => _$this._G_or = G_or;

  GString_comparison_expBuilder? _id;
  GString_comparison_expBuilder get id =>
      _$this._id ??= new GString_comparison_expBuilder();
  set id(GString_comparison_expBuilder? id) => _$this._id = id;

  GauthUserProviders_bool_expBuilder? _userProviders;
  GauthUserProviders_bool_expBuilder get userProviders =>
      _$this._userProviders ??= new GauthUserProviders_bool_expBuilder();
  set userProviders(GauthUserProviders_bool_expBuilder? userProviders) =>
      _$this._userProviders = userProviders;

  GauthUserProviders_aggregate_bool_expBuilder? _userProviders_aggregate;
  GauthUserProviders_aggregate_bool_expBuilder get userProviders_aggregate =>
      _$this._userProviders_aggregate ??=
          new GauthUserProviders_aggregate_bool_expBuilder();
  set userProviders_aggregate(
          GauthUserProviders_aggregate_bool_expBuilder?
              userProviders_aggregate) =>
      _$this._userProviders_aggregate = userProviders_aggregate;

  GauthProviders_bool_expBuilder();

  GauthProviders_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _id = $v.id?.toBuilder();
      _userProviders = $v.userProviders?.toBuilder();
      _userProviders_aggregate = $v.userProviders_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_bool_exp;
  }

  @override
  void update(void Function(GauthProviders_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_bool_exp build() => _build();

  _$GauthProviders_bool_exp _build() {
    _$GauthProviders_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              id: _id?.build(),
              userProviders: _userProviders?.build(),
              userProviders_aggregate: _userProviders_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'userProviders';
        _userProviders?.build();
        _$failedField = 'userProviders_aggregate';
        _userProviders_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_insert_input extends GauthProviders_insert_input {
  @override
  final String? id;
  @override
  final GauthUserProviders_arr_rel_insert_input? userProviders;

  factory _$GauthProviders_insert_input(
          [void Function(GauthProviders_insert_inputBuilder)? updates]) =>
      (new GauthProviders_insert_inputBuilder()..update(updates))._build();

  _$GauthProviders_insert_input._({this.id, this.userProviders}) : super._();

  @override
  GauthProviders_insert_input rebuild(
          void Function(GauthProviders_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_insert_inputBuilder toBuilder() =>
      new GauthProviders_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_insert_input &&
        id == other.id &&
        userProviders == other.userProviders;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), userProviders.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_insert_input')
          ..add('id', id)
          ..add('userProviders', userProviders))
        .toString();
  }
}

class GauthProviders_insert_inputBuilder
    implements
        Builder<GauthProviders_insert_input,
            GauthProviders_insert_inputBuilder> {
  _$GauthProviders_insert_input? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GauthUserProviders_arr_rel_insert_inputBuilder? _userProviders;
  GauthUserProviders_arr_rel_insert_inputBuilder get userProviders =>
      _$this._userProviders ??=
          new GauthUserProviders_arr_rel_insert_inputBuilder();
  set userProviders(
          GauthUserProviders_arr_rel_insert_inputBuilder? userProviders) =>
      _$this._userProviders = userProviders;

  GauthProviders_insert_inputBuilder();

  GauthProviders_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _userProviders = $v.userProviders?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_insert_input;
  }

  @override
  void update(void Function(GauthProviders_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_insert_input build() => _build();

  _$GauthProviders_insert_input _build() {
    _$GauthProviders_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_insert_input._(
              id: id, userProviders: _userProviders?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'userProviders';
        _userProviders?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_obj_rel_insert_input
    extends GauthProviders_obj_rel_insert_input {
  @override
  final GauthProviders_insert_input data;
  @override
  final GauthProviders_on_conflict? on_conflict;

  factory _$GauthProviders_obj_rel_insert_input(
          [void Function(GauthProviders_obj_rel_insert_inputBuilder)?
              updates]) =>
      (new GauthProviders_obj_rel_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthProviders_obj_rel_insert_input._(
      {required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthProviders_obj_rel_insert_input', 'data');
  }

  @override
  GauthProviders_obj_rel_insert_input rebuild(
          void Function(GauthProviders_obj_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_obj_rel_insert_inputBuilder toBuilder() =>
      new GauthProviders_obj_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_obj_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_obj_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthProviders_obj_rel_insert_inputBuilder
    implements
        Builder<GauthProviders_obj_rel_insert_input,
            GauthProviders_obj_rel_insert_inputBuilder> {
  _$GauthProviders_obj_rel_insert_input? _$v;

  GauthProviders_insert_inputBuilder? _data;
  GauthProviders_insert_inputBuilder get data =>
      _$this._data ??= new GauthProviders_insert_inputBuilder();
  set data(GauthProviders_insert_inputBuilder? data) => _$this._data = data;

  GauthProviders_on_conflictBuilder? _on_conflict;
  GauthProviders_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthProviders_on_conflictBuilder();
  set on_conflict(GauthProviders_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthProviders_obj_rel_insert_inputBuilder();

  GauthProviders_obj_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_obj_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_obj_rel_insert_input;
  }

  @override
  void update(
      void Function(GauthProviders_obj_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_obj_rel_insert_input build() => _build();

  _$GauthProviders_obj_rel_insert_input _build() {
    _$GauthProviders_obj_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_obj_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_obj_rel_insert_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_on_conflict extends GauthProviders_on_conflict {
  @override
  final GauthProviders_constraint constraint;
  @override
  final BuiltList<GauthProviders_update_column> update_columns;
  @override
  final GauthProviders_bool_exp? where;

  factory _$GauthProviders_on_conflict(
          [void Function(GauthProviders_on_conflictBuilder)? updates]) =>
      (new GauthProviders_on_conflictBuilder()..update(updates))._build();

  _$GauthProviders_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthProviders_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthProviders_on_conflict', 'update_columns');
  }

  @override
  GauthProviders_on_conflict rebuild(
          void Function(GauthProviders_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_on_conflictBuilder toBuilder() =>
      new GauthProviders_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthProviders_on_conflictBuilder
    implements
        Builder<GauthProviders_on_conflict, GauthProviders_on_conflictBuilder> {
  _$GauthProviders_on_conflict? _$v;

  GauthProviders_constraint? _constraint;
  GauthProviders_constraint? get constraint => _$this._constraint;
  set constraint(GauthProviders_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthProviders_update_column>? _update_columns;
  ListBuilder<GauthProviders_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthProviders_update_column>();
  set update_columns(
          ListBuilder<GauthProviders_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthProviders_bool_expBuilder? _where;
  GauthProviders_bool_expBuilder get where =>
      _$this._where ??= new GauthProviders_bool_expBuilder();
  set where(GauthProviders_bool_expBuilder? where) => _$this._where = where;

  GauthProviders_on_conflictBuilder();

  GauthProviders_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_on_conflict;
  }

  @override
  void update(void Function(GauthProviders_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_on_conflict build() => _build();

  _$GauthProviders_on_conflict _build() {
    _$GauthProviders_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'GauthProviders_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_order_by extends GauthProviders_order_by {
  @override
  final Gorder_by? id;
  @override
  final GauthUserProviders_aggregate_order_by? userProviders_aggregate;

  factory _$GauthProviders_order_by(
          [void Function(GauthProviders_order_byBuilder)? updates]) =>
      (new GauthProviders_order_byBuilder()..update(updates))._build();

  _$GauthProviders_order_by._({this.id, this.userProviders_aggregate})
      : super._();

  @override
  GauthProviders_order_by rebuild(
          void Function(GauthProviders_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_order_byBuilder toBuilder() =>
      new GauthProviders_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_order_by &&
        id == other.id &&
        userProviders_aggregate == other.userProviders_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), userProviders_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_order_by')
          ..add('id', id)
          ..add('userProviders_aggregate', userProviders_aggregate))
        .toString();
  }
}

class GauthProviders_order_byBuilder
    implements
        Builder<GauthProviders_order_by, GauthProviders_order_byBuilder> {
  _$GauthProviders_order_by? _$v;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  GauthUserProviders_aggregate_order_byBuilder? _userProviders_aggregate;
  GauthUserProviders_aggregate_order_byBuilder get userProviders_aggregate =>
      _$this._userProviders_aggregate ??=
          new GauthUserProviders_aggregate_order_byBuilder();
  set userProviders_aggregate(
          GauthUserProviders_aggregate_order_byBuilder?
              userProviders_aggregate) =>
      _$this._userProviders_aggregate = userProviders_aggregate;

  GauthProviders_order_byBuilder();

  GauthProviders_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _userProviders_aggregate = $v.userProviders_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_order_by;
  }

  @override
  void update(void Function(GauthProviders_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_order_by build() => _build();

  _$GauthProviders_order_by _build() {
    _$GauthProviders_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_order_by._(
              id: id,
              userProviders_aggregate: _userProviders_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'userProviders_aggregate';
        _userProviders_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_pk_columns_input
    extends GauthProviders_pk_columns_input {
  @override
  final String id;

  factory _$GauthProviders_pk_columns_input(
          [void Function(GauthProviders_pk_columns_inputBuilder)? updates]) =>
      (new GauthProviders_pk_columns_inputBuilder()..update(updates))._build();

  _$GauthProviders_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GauthProviders_pk_columns_input', 'id');
  }

  @override
  GauthProviders_pk_columns_input rebuild(
          void Function(GauthProviders_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_pk_columns_inputBuilder toBuilder() =>
      new GauthProviders_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class GauthProviders_pk_columns_inputBuilder
    implements
        Builder<GauthProviders_pk_columns_input,
            GauthProviders_pk_columns_inputBuilder> {
  _$GauthProviders_pk_columns_input? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GauthProviders_pk_columns_inputBuilder();

  GauthProviders_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_pk_columns_input;
  }

  @override
  void update(void Function(GauthProviders_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_pk_columns_input build() => _build();

  _$GauthProviders_pk_columns_input _build() {
    final _$result = _$v ??
        new _$GauthProviders_pk_columns_input._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GauthProviders_pk_columns_input', 'id'));
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_set_input extends GauthProviders_set_input {
  @override
  final String? id;

  factory _$GauthProviders_set_input(
          [void Function(GauthProviders_set_inputBuilder)? updates]) =>
      (new GauthProviders_set_inputBuilder()..update(updates))._build();

  _$GauthProviders_set_input._({this.id}) : super._();

  @override
  GauthProviders_set_input rebuild(
          void Function(GauthProviders_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_set_inputBuilder toBuilder() =>
      new GauthProviders_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_set_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_set_input')
          ..add('id', id))
        .toString();
  }
}

class GauthProviders_set_inputBuilder
    implements
        Builder<GauthProviders_set_input, GauthProviders_set_inputBuilder> {
  _$GauthProviders_set_input? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GauthProviders_set_inputBuilder();

  GauthProviders_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_set_input;
  }

  @override
  void update(void Function(GauthProviders_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_set_input build() => _build();

  _$GauthProviders_set_input _build() {
    final _$result = _$v ?? new _$GauthProviders_set_input._(id: id);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_stream_cursor_input
    extends GauthProviders_stream_cursor_input {
  @override
  final GauthProviders_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthProviders_stream_cursor_input(
          [void Function(GauthProviders_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthProviders_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthProviders_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'GauthProviders_stream_cursor_input', 'initial_value');
  }

  @override
  GauthProviders_stream_cursor_input rebuild(
          void Function(GauthProviders_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_stream_cursor_inputBuilder toBuilder() =>
      new GauthProviders_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthProviders_stream_cursor_inputBuilder
    implements
        Builder<GauthProviders_stream_cursor_input,
            GauthProviders_stream_cursor_inputBuilder> {
  _$GauthProviders_stream_cursor_input? _$v;

  GauthProviders_stream_cursor_value_inputBuilder? _initial_value;
  GauthProviders_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthProviders_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthProviders_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthProviders_stream_cursor_inputBuilder();

  GauthProviders_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthProviders_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_stream_cursor_input build() => _build();

  _$GauthProviders_stream_cursor_input _build() {
    _$GauthProviders_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_stream_cursor_value_input
    extends GauthProviders_stream_cursor_value_input {
  @override
  final String? id;

  factory _$GauthProviders_stream_cursor_value_input(
          [void Function(GauthProviders_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthProviders_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$GauthProviders_stream_cursor_value_input._({this.id}) : super._();

  @override
  GauthProviders_stream_cursor_value_input rebuild(
          void Function(GauthProviders_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthProviders_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_stream_cursor_value_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthProviders_stream_cursor_value_input')
          ..add('id', id))
        .toString();
  }
}

class GauthProviders_stream_cursor_value_inputBuilder
    implements
        Builder<GauthProviders_stream_cursor_value_input,
            GauthProviders_stream_cursor_value_inputBuilder> {
  _$GauthProviders_stream_cursor_value_input? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GauthProviders_stream_cursor_value_inputBuilder();

  GauthProviders_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthProviders_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_stream_cursor_value_input build() => _build();

  _$GauthProviders_stream_cursor_value_input _build() {
    final _$result =
        _$v ?? new _$GauthProviders_stream_cursor_value_input._(id: id);
    replace(_$result);
    return _$result;
  }
}

class _$GauthProviders_updates extends GauthProviders_updates {
  @override
  final GauthProviders_set_input? G_set;
  @override
  final GauthProviders_bool_exp where;

  factory _$GauthProviders_updates(
          [void Function(GauthProviders_updatesBuilder)? updates]) =>
      (new GauthProviders_updatesBuilder()..update(updates))._build();

  _$GauthProviders_updates._({this.G_set, required this.where}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthProviders_updates', 'where');
  }

  @override
  GauthProviders_updates rebuild(
          void Function(GauthProviders_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthProviders_updatesBuilder toBuilder() =>
      new GauthProviders_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthProviders_updates &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthProviders_updates')
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthProviders_updatesBuilder
    implements Builder<GauthProviders_updates, GauthProviders_updatesBuilder> {
  _$GauthProviders_updates? _$v;

  GauthProviders_set_inputBuilder? _G_set;
  GauthProviders_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthProviders_set_inputBuilder();
  set G_set(GauthProviders_set_inputBuilder? G_set) => _$this._G_set = G_set;

  GauthProviders_bool_expBuilder? _where;
  GauthProviders_bool_expBuilder get where =>
      _$this._where ??= new GauthProviders_bool_expBuilder();
  set where(GauthProviders_bool_expBuilder? where) => _$this._where = where;

  GauthProviders_updatesBuilder();

  GauthProviders_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthProviders_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthProviders_updates;
  }

  @override
  void update(void Function(GauthProviders_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthProviders_updates build() => _build();

  _$GauthProviders_updates _build() {
    _$GauthProviders_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthProviders_updates._(
              G_set: _G_set?.build(), where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthProviders_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_aggregate_bool_exp
    extends GauthRefreshTokens_aggregate_bool_exp {
  @override
  final GauthRefreshTokens_aggregate_bool_exp_count? count;

  factory _$GauthRefreshTokens_aggregate_bool_exp(
          [void Function(GauthRefreshTokens_aggregate_bool_expBuilder)?
              updates]) =>
      (new GauthRefreshTokens_aggregate_bool_expBuilder()..update(updates))
          ._build();

  _$GauthRefreshTokens_aggregate_bool_exp._({this.count}) : super._();

  @override
  GauthRefreshTokens_aggregate_bool_exp rebuild(
          void Function(GauthRefreshTokens_aggregate_bool_expBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_aggregate_bool_expBuilder toBuilder() =>
      new GauthRefreshTokens_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_aggregate_bool_exp &&
        count == other.count;
  }

  @override
  int get hashCode {
    return $jf($jc(0, count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_aggregate_bool_exp')
          ..add('count', count))
        .toString();
  }
}

class GauthRefreshTokens_aggregate_bool_expBuilder
    implements
        Builder<GauthRefreshTokens_aggregate_bool_exp,
            GauthRefreshTokens_aggregate_bool_expBuilder> {
  _$GauthRefreshTokens_aggregate_bool_exp? _$v;

  GauthRefreshTokens_aggregate_bool_exp_countBuilder? _count;
  GauthRefreshTokens_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??=
          new GauthRefreshTokens_aggregate_bool_exp_countBuilder();
  set count(GauthRefreshTokens_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  GauthRefreshTokens_aggregate_bool_expBuilder();

  GauthRefreshTokens_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_aggregate_bool_exp;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_aggregate_bool_exp build() => _build();

  _$GauthRefreshTokens_aggregate_bool_exp _build() {
    _$GauthRefreshTokens_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_aggregate_bool_exp._(count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_aggregate_bool_exp',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_aggregate_bool_exp_count
    extends GauthRefreshTokens_aggregate_bool_exp_count {
  @override
  final BuiltList<GauthRefreshTokens_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final GauthRefreshTokens_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$GauthRefreshTokens_aggregate_bool_exp_count(
          [void Function(GauthRefreshTokens_aggregate_bool_exp_countBuilder)?
              updates]) =>
      (new GauthRefreshTokens_aggregate_bool_exp_countBuilder()
            ..update(updates))
          ._build();

  _$GauthRefreshTokens_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'GauthRefreshTokens_aggregate_bool_exp_count', 'predicate');
  }

  @override
  GauthRefreshTokens_aggregate_bool_exp_count rebuild(
          void Function(GauthRefreshTokens_aggregate_bool_exp_countBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_aggregate_bool_exp_countBuilder toBuilder() =>
      new GauthRefreshTokens_aggregate_bool_exp_countBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class GauthRefreshTokens_aggregate_bool_exp_countBuilder
    implements
        Builder<GauthRefreshTokens_aggregate_bool_exp_count,
            GauthRefreshTokens_aggregate_bool_exp_countBuilder> {
  _$GauthRefreshTokens_aggregate_bool_exp_count? _$v;

  ListBuilder<GauthRefreshTokens_select_column>? _arguments;
  ListBuilder<GauthRefreshTokens_select_column> get arguments =>
      _$this._arguments ??= new ListBuilder<GauthRefreshTokens_select_column>();
  set arguments(ListBuilder<GauthRefreshTokens_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  GauthRefreshTokens_bool_expBuilder? _filter;
  GauthRefreshTokens_bool_expBuilder get filter =>
      _$this._filter ??= new GauthRefreshTokens_bool_expBuilder();
  set filter(GauthRefreshTokens_bool_expBuilder? filter) =>
      _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  GauthRefreshTokens_aggregate_bool_exp_countBuilder();

  GauthRefreshTokens_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_aggregate_bool_exp_count;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_aggregate_bool_exp_countBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_aggregate_bool_exp_count build() => _build();

  _$GauthRefreshTokens_aggregate_bool_exp_count _build() {
    _$GauthRefreshTokens_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_aggregate_bool_exp_count',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_aggregate_order_by
    extends GauthRefreshTokens_aggregate_order_by {
  @override
  final Gorder_by? count;
  @override
  final GauthRefreshTokens_max_order_by? max;
  @override
  final GauthRefreshTokens_min_order_by? min;

  factory _$GauthRefreshTokens_aggregate_order_by(
          [void Function(GauthRefreshTokens_aggregate_order_byBuilder)?
              updates]) =>
      (new GauthRefreshTokens_aggregate_order_byBuilder()..update(updates))
          ._build();

  _$GauthRefreshTokens_aggregate_order_by._({this.count, this.max, this.min})
      : super._();

  @override
  GauthRefreshTokens_aggregate_order_by rebuild(
          void Function(GauthRefreshTokens_aggregate_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_aggregate_order_byBuilder toBuilder() =>
      new GauthRefreshTokens_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_aggregate_order_by &&
        count == other.count &&
        max == other.max &&
        min == other.min;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, count.hashCode), max.hashCode), min.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_aggregate_order_by')
          ..add('count', count)
          ..add('max', max)
          ..add('min', min))
        .toString();
  }
}

class GauthRefreshTokens_aggregate_order_byBuilder
    implements
        Builder<GauthRefreshTokens_aggregate_order_by,
            GauthRefreshTokens_aggregate_order_byBuilder> {
  _$GauthRefreshTokens_aggregate_order_by? _$v;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  GauthRefreshTokens_max_order_byBuilder? _max;
  GauthRefreshTokens_max_order_byBuilder get max =>
      _$this._max ??= new GauthRefreshTokens_max_order_byBuilder();
  set max(GauthRefreshTokens_max_order_byBuilder? max) => _$this._max = max;

  GauthRefreshTokens_min_order_byBuilder? _min;
  GauthRefreshTokens_min_order_byBuilder get min =>
      _$this._min ??= new GauthRefreshTokens_min_order_byBuilder();
  set min(GauthRefreshTokens_min_order_byBuilder? min) => _$this._min = min;

  GauthRefreshTokens_aggregate_order_byBuilder();

  GauthRefreshTokens_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_aggregate_order_by;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_aggregate_order_by build() => _build();

  _$GauthRefreshTokens_aggregate_order_by _build() {
    _$GauthRefreshTokens_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_aggregate_order_by._(
              count: count, max: _max?.build(), min: _min?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_aggregate_order_by',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_arr_rel_insert_input
    extends GauthRefreshTokens_arr_rel_insert_input {
  @override
  final BuiltList<GauthRefreshTokens_insert_input> data;
  @override
  final GauthRefreshTokens_on_conflict? on_conflict;

  factory _$GauthRefreshTokens_arr_rel_insert_input(
          [void Function(GauthRefreshTokens_arr_rel_insert_inputBuilder)?
              updates]) =>
      (new GauthRefreshTokens_arr_rel_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthRefreshTokens_arr_rel_insert_input._(
      {required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthRefreshTokens_arr_rel_insert_input', 'data');
  }

  @override
  GauthRefreshTokens_arr_rel_insert_input rebuild(
          void Function(GauthRefreshTokens_arr_rel_insert_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_arr_rel_insert_inputBuilder toBuilder() =>
      new GauthRefreshTokens_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthRefreshTokens_arr_rel_insert_inputBuilder
    implements
        Builder<GauthRefreshTokens_arr_rel_insert_input,
            GauthRefreshTokens_arr_rel_insert_inputBuilder> {
  _$GauthRefreshTokens_arr_rel_insert_input? _$v;

  ListBuilder<GauthRefreshTokens_insert_input>? _data;
  ListBuilder<GauthRefreshTokens_insert_input> get data =>
      _$this._data ??= new ListBuilder<GauthRefreshTokens_insert_input>();
  set data(ListBuilder<GauthRefreshTokens_insert_input>? data) =>
      _$this._data = data;

  GauthRefreshTokens_on_conflictBuilder? _on_conflict;
  GauthRefreshTokens_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthRefreshTokens_on_conflictBuilder();
  set on_conflict(GauthRefreshTokens_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthRefreshTokens_arr_rel_insert_inputBuilder();

  GauthRefreshTokens_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_arr_rel_insert_input;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_arr_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_arr_rel_insert_input build() => _build();

  _$GauthRefreshTokens_arr_rel_insert_input _build() {
    _$GauthRefreshTokens_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_arr_rel_insert_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_bool_exp extends GauthRefreshTokens_bool_exp {
  @override
  final BuiltList<GauthRefreshTokens_bool_exp>? G_and;
  @override
  final GauthRefreshTokens_bool_exp? G_not;
  @override
  final BuiltList<GauthRefreshTokens_bool_exp>? G_or;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final Gtimestamptz_comparison_exp? expiresAt;
  @override
  final Guuid_comparison_exp? refreshToken;
  @override
  final Gusers_bool_exp? user;
  @override
  final Guuid_comparison_exp? userId;

  factory _$GauthRefreshTokens_bool_exp(
          [void Function(GauthRefreshTokens_bool_expBuilder)? updates]) =>
      (new GauthRefreshTokens_bool_expBuilder()..update(updates))._build();

  _$GauthRefreshTokens_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.createdAt,
      this.expiresAt,
      this.refreshToken,
      this.user,
      this.userId})
      : super._();

  @override
  GauthRefreshTokens_bool_exp rebuild(
          void Function(GauthRefreshTokens_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_bool_expBuilder toBuilder() =>
      new GauthRefreshTokens_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, G_and.hashCode), G_not.hashCode),
                            G_or.hashCode),
                        createdAt.hashCode),
                    expiresAt.hashCode),
                refreshToken.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_bool_expBuilder
    implements
        Builder<GauthRefreshTokens_bool_exp,
            GauthRefreshTokens_bool_expBuilder> {
  _$GauthRefreshTokens_bool_exp? _$v;

  ListBuilder<GauthRefreshTokens_bool_exp>? _G_and;
  ListBuilder<GauthRefreshTokens_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthRefreshTokens_bool_exp>();
  set G_and(ListBuilder<GauthRefreshTokens_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthRefreshTokens_bool_expBuilder? _G_not;
  GauthRefreshTokens_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthRefreshTokens_bool_expBuilder();
  set G_not(GauthRefreshTokens_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<GauthRefreshTokens_bool_exp>? _G_or;
  ListBuilder<GauthRefreshTokens_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthRefreshTokens_bool_exp>();
  set G_or(ListBuilder<GauthRefreshTokens_bool_exp>? G_or) =>
      _$this._G_or = G_or;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  Gtimestamptz_comparison_expBuilder? _expiresAt;
  Gtimestamptz_comparison_expBuilder get expiresAt =>
      _$this._expiresAt ??= new Gtimestamptz_comparison_expBuilder();
  set expiresAt(Gtimestamptz_comparison_expBuilder? expiresAt) =>
      _$this._expiresAt = expiresAt;

  Guuid_comparison_expBuilder? _refreshToken;
  Guuid_comparison_expBuilder get refreshToken =>
      _$this._refreshToken ??= new Guuid_comparison_expBuilder();
  set refreshToken(Guuid_comparison_expBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gusers_bool_expBuilder? _user;
  Gusers_bool_expBuilder get user =>
      _$this._user ??= new Gusers_bool_expBuilder();
  set user(Gusers_bool_expBuilder? user) => _$this._user = user;

  Guuid_comparison_expBuilder? _userId;
  Guuid_comparison_expBuilder get userId =>
      _$this._userId ??= new Guuid_comparison_expBuilder();
  set userId(Guuid_comparison_expBuilder? userId) => _$this._userId = userId;

  GauthRefreshTokens_bool_expBuilder();

  GauthRefreshTokens_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _expiresAt = $v.expiresAt?.toBuilder();
      _refreshToken = $v.refreshToken?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_bool_exp;
  }

  @override
  void update(void Function(GauthRefreshTokens_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_bool_exp build() => _build();

  _$GauthRefreshTokens_bool_exp _build() {
    _$GauthRefreshTokens_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              createdAt: _createdAt?.build(),
              expiresAt: _expiresAt?.build(),
              refreshToken: _refreshToken?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'expiresAt';
        _expiresAt?.build();
        _$failedField = 'refreshToken';
        _refreshToken?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_insert_input
    extends GauthRefreshTokens_insert_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Gtimestamptz? expiresAt;
  @override
  final Guuid? refreshToken;
  @override
  final Gusers_obj_rel_insert_input? user;
  @override
  final Guuid? userId;

  factory _$GauthRefreshTokens_insert_input(
          [void Function(GauthRefreshTokens_insert_inputBuilder)? updates]) =>
      (new GauthRefreshTokens_insert_inputBuilder()..update(updates))._build();

  _$GauthRefreshTokens_insert_input._(
      {this.createdAt,
      this.expiresAt,
      this.refreshToken,
      this.user,
      this.userId})
      : super._();

  @override
  GauthRefreshTokens_insert_input rebuild(
          void Function(GauthRefreshTokens_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_insert_inputBuilder toBuilder() =>
      new GauthRefreshTokens_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_insert_input &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
                refreshToken.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_insert_input')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_insert_inputBuilder
    implements
        Builder<GauthRefreshTokens_insert_input,
            GauthRefreshTokens_insert_inputBuilder> {
  _$GauthRefreshTokens_insert_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GtimestamptzBuilder? _expiresAt;
  GtimestamptzBuilder get expiresAt =>
      _$this._expiresAt ??= new GtimestamptzBuilder();
  set expiresAt(GtimestamptzBuilder? expiresAt) =>
      _$this._expiresAt = expiresAt;

  GuuidBuilder? _refreshToken;
  GuuidBuilder get refreshToken => _$this._refreshToken ??= new GuuidBuilder();
  set refreshToken(GuuidBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gusers_obj_rel_insert_inputBuilder? _user;
  Gusers_obj_rel_insert_inputBuilder get user =>
      _$this._user ??= new Gusers_obj_rel_insert_inputBuilder();
  set user(Gusers_obj_rel_insert_inputBuilder? user) => _$this._user = user;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthRefreshTokens_insert_inputBuilder();

  GauthRefreshTokens_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _expiresAt = $v.expiresAt?.toBuilder();
      _refreshToken = $v.refreshToken?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_insert_input;
  }

  @override
  void update(void Function(GauthRefreshTokens_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_insert_input build() => _build();

  _$GauthRefreshTokens_insert_input _build() {
    _$GauthRefreshTokens_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_insert_input._(
              createdAt: _createdAt?.build(),
              expiresAt: _expiresAt?.build(),
              refreshToken: _refreshToken?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'expiresAt';
        _expiresAt?.build();
        _$failedField = 'refreshToken';
        _refreshToken?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_max_order_by
    extends GauthRefreshTokens_max_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? expiresAt;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gorder_by? userId;

  factory _$GauthRefreshTokens_max_order_by(
          [void Function(GauthRefreshTokens_max_order_byBuilder)? updates]) =>
      (new GauthRefreshTokens_max_order_byBuilder()..update(updates))._build();

  _$GauthRefreshTokens_max_order_by._(
      {this.createdAt, this.expiresAt, this.refreshToken, this.userId})
      : super._();

  @override
  GauthRefreshTokens_max_order_by rebuild(
          void Function(GauthRefreshTokens_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_max_order_byBuilder toBuilder() =>
      new GauthRefreshTokens_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_max_order_by &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
            refreshToken.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_max_order_by')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_max_order_byBuilder
    implements
        Builder<GauthRefreshTokens_max_order_by,
            GauthRefreshTokens_max_order_byBuilder> {
  _$GauthRefreshTokens_max_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _expiresAt;
  Gorder_by? get expiresAt => _$this._expiresAt;
  set expiresAt(Gorder_by? expiresAt) => _$this._expiresAt = expiresAt;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthRefreshTokens_max_order_byBuilder();

  GauthRefreshTokens_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _expiresAt = $v.expiresAt;
      _refreshToken = $v.refreshToken;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_max_order_by;
  }

  @override
  void update(void Function(GauthRefreshTokens_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_max_order_by build() => _build();

  _$GauthRefreshTokens_max_order_by _build() {
    final _$result = _$v ??
        new _$GauthRefreshTokens_max_order_by._(
            createdAt: createdAt,
            expiresAt: expiresAt,
            refreshToken: refreshToken,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_min_order_by
    extends GauthRefreshTokens_min_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? expiresAt;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gorder_by? userId;

  factory _$GauthRefreshTokens_min_order_by(
          [void Function(GauthRefreshTokens_min_order_byBuilder)? updates]) =>
      (new GauthRefreshTokens_min_order_byBuilder()..update(updates))._build();

  _$GauthRefreshTokens_min_order_by._(
      {this.createdAt, this.expiresAt, this.refreshToken, this.userId})
      : super._();

  @override
  GauthRefreshTokens_min_order_by rebuild(
          void Function(GauthRefreshTokens_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_min_order_byBuilder toBuilder() =>
      new GauthRefreshTokens_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_min_order_by &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
            refreshToken.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_min_order_by')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_min_order_byBuilder
    implements
        Builder<GauthRefreshTokens_min_order_by,
            GauthRefreshTokens_min_order_byBuilder> {
  _$GauthRefreshTokens_min_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _expiresAt;
  Gorder_by? get expiresAt => _$this._expiresAt;
  set expiresAt(Gorder_by? expiresAt) => _$this._expiresAt = expiresAt;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthRefreshTokens_min_order_byBuilder();

  GauthRefreshTokens_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _expiresAt = $v.expiresAt;
      _refreshToken = $v.refreshToken;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_min_order_by;
  }

  @override
  void update(void Function(GauthRefreshTokens_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_min_order_by build() => _build();

  _$GauthRefreshTokens_min_order_by _build() {
    final _$result = _$v ??
        new _$GauthRefreshTokens_min_order_by._(
            createdAt: createdAt,
            expiresAt: expiresAt,
            refreshToken: refreshToken,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_on_conflict extends GauthRefreshTokens_on_conflict {
  @override
  final GauthRefreshTokens_constraint constraint;
  @override
  final BuiltList<GauthRefreshTokens_update_column> update_columns;
  @override
  final GauthRefreshTokens_bool_exp? where;

  factory _$GauthRefreshTokens_on_conflict(
          [void Function(GauthRefreshTokens_on_conflictBuilder)? updates]) =>
      (new GauthRefreshTokens_on_conflictBuilder()..update(updates))._build();

  _$GauthRefreshTokens_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthRefreshTokens_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthRefreshTokens_on_conflict', 'update_columns');
  }

  @override
  GauthRefreshTokens_on_conflict rebuild(
          void Function(GauthRefreshTokens_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_on_conflictBuilder toBuilder() =>
      new GauthRefreshTokens_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthRefreshTokens_on_conflictBuilder
    implements
        Builder<GauthRefreshTokens_on_conflict,
            GauthRefreshTokens_on_conflictBuilder> {
  _$GauthRefreshTokens_on_conflict? _$v;

  GauthRefreshTokens_constraint? _constraint;
  GauthRefreshTokens_constraint? get constraint => _$this._constraint;
  set constraint(GauthRefreshTokens_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthRefreshTokens_update_column>? _update_columns;
  ListBuilder<GauthRefreshTokens_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthRefreshTokens_update_column>();
  set update_columns(
          ListBuilder<GauthRefreshTokens_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthRefreshTokens_bool_expBuilder? _where;
  GauthRefreshTokens_bool_expBuilder get where =>
      _$this._where ??= new GauthRefreshTokens_bool_expBuilder();
  set where(GauthRefreshTokens_bool_expBuilder? where) => _$this._where = where;

  GauthRefreshTokens_on_conflictBuilder();

  GauthRefreshTokens_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_on_conflict;
  }

  @override
  void update(void Function(GauthRefreshTokens_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_on_conflict build() => _build();

  _$GauthRefreshTokens_on_conflict _build() {
    _$GauthRefreshTokens_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'GauthRefreshTokens_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_order_by extends GauthRefreshTokens_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? expiresAt;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gusers_order_by? user;
  @override
  final Gorder_by? userId;

  factory _$GauthRefreshTokens_order_by(
          [void Function(GauthRefreshTokens_order_byBuilder)? updates]) =>
      (new GauthRefreshTokens_order_byBuilder()..update(updates))._build();

  _$GauthRefreshTokens_order_by._(
      {this.createdAt,
      this.expiresAt,
      this.refreshToken,
      this.user,
      this.userId})
      : super._();

  @override
  GauthRefreshTokens_order_by rebuild(
          void Function(GauthRefreshTokens_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_order_byBuilder toBuilder() =>
      new GauthRefreshTokens_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_order_by &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
                refreshToken.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_order_by')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_order_byBuilder
    implements
        Builder<GauthRefreshTokens_order_by,
            GauthRefreshTokens_order_byBuilder> {
  _$GauthRefreshTokens_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _expiresAt;
  Gorder_by? get expiresAt => _$this._expiresAt;
  set expiresAt(Gorder_by? expiresAt) => _$this._expiresAt = expiresAt;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gusers_order_byBuilder? _user;
  Gusers_order_byBuilder get user =>
      _$this._user ??= new Gusers_order_byBuilder();
  set user(Gusers_order_byBuilder? user) => _$this._user = user;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthRefreshTokens_order_byBuilder();

  GauthRefreshTokens_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _expiresAt = $v.expiresAt;
      _refreshToken = $v.refreshToken;
      _user = $v.user?.toBuilder();
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_order_by;
  }

  @override
  void update(void Function(GauthRefreshTokens_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_order_by build() => _build();

  _$GauthRefreshTokens_order_by _build() {
    _$GauthRefreshTokens_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_order_by._(
              createdAt: createdAt,
              expiresAt: expiresAt,
              refreshToken: refreshToken,
              user: _user?.build(),
              userId: userId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_pk_columns_input
    extends GauthRefreshTokens_pk_columns_input {
  @override
  final Guuid refreshToken;

  factory _$GauthRefreshTokens_pk_columns_input(
          [void Function(GauthRefreshTokens_pk_columns_inputBuilder)?
              updates]) =>
      (new GauthRefreshTokens_pk_columns_inputBuilder()..update(updates))
          ._build();

  _$GauthRefreshTokens_pk_columns_input._({required this.refreshToken})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        refreshToken, r'GauthRefreshTokens_pk_columns_input', 'refreshToken');
  }

  @override
  GauthRefreshTokens_pk_columns_input rebuild(
          void Function(GauthRefreshTokens_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_pk_columns_inputBuilder toBuilder() =>
      new GauthRefreshTokens_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_pk_columns_input &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    return $jf($jc(0, refreshToken.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_pk_columns_input')
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class GauthRefreshTokens_pk_columns_inputBuilder
    implements
        Builder<GauthRefreshTokens_pk_columns_input,
            GauthRefreshTokens_pk_columns_inputBuilder> {
  _$GauthRefreshTokens_pk_columns_input? _$v;

  GuuidBuilder? _refreshToken;
  GuuidBuilder get refreshToken => _$this._refreshToken ??= new GuuidBuilder();
  set refreshToken(GuuidBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  GauthRefreshTokens_pk_columns_inputBuilder();

  GauthRefreshTokens_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _refreshToken = $v.refreshToken.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_pk_columns_input;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_pk_columns_input build() => _build();

  _$GauthRefreshTokens_pk_columns_input _build() {
    _$GauthRefreshTokens_pk_columns_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_pk_columns_input._(
              refreshToken: refreshToken.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'refreshToken';
        refreshToken.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_pk_columns_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_set_input extends GauthRefreshTokens_set_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Gtimestamptz? expiresAt;
  @override
  final Guuid? refreshToken;
  @override
  final Guuid? userId;

  factory _$GauthRefreshTokens_set_input(
          [void Function(GauthRefreshTokens_set_inputBuilder)? updates]) =>
      (new GauthRefreshTokens_set_inputBuilder()..update(updates))._build();

  _$GauthRefreshTokens_set_input._(
      {this.createdAt, this.expiresAt, this.refreshToken, this.userId})
      : super._();

  @override
  GauthRefreshTokens_set_input rebuild(
          void Function(GauthRefreshTokens_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_set_inputBuilder toBuilder() =>
      new GauthRefreshTokens_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_set_input &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
            refreshToken.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_set_input')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_set_inputBuilder
    implements
        Builder<GauthRefreshTokens_set_input,
            GauthRefreshTokens_set_inputBuilder> {
  _$GauthRefreshTokens_set_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GtimestamptzBuilder? _expiresAt;
  GtimestamptzBuilder get expiresAt =>
      _$this._expiresAt ??= new GtimestamptzBuilder();
  set expiresAt(GtimestamptzBuilder? expiresAt) =>
      _$this._expiresAt = expiresAt;

  GuuidBuilder? _refreshToken;
  GuuidBuilder get refreshToken => _$this._refreshToken ??= new GuuidBuilder();
  set refreshToken(GuuidBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthRefreshTokens_set_inputBuilder();

  GauthRefreshTokens_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _expiresAt = $v.expiresAt?.toBuilder();
      _refreshToken = $v.refreshToken?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_set_input;
  }

  @override
  void update(void Function(GauthRefreshTokens_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_set_input build() => _build();

  _$GauthRefreshTokens_set_input _build() {
    _$GauthRefreshTokens_set_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_set_input._(
              createdAt: _createdAt?.build(),
              expiresAt: _expiresAt?.build(),
              refreshToken: _refreshToken?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'expiresAt';
        _expiresAt?.build();
        _$failedField = 'refreshToken';
        _refreshToken?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_stream_cursor_input
    extends GauthRefreshTokens_stream_cursor_input {
  @override
  final GauthRefreshTokens_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthRefreshTokens_stream_cursor_input(
          [void Function(GauthRefreshTokens_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthRefreshTokens_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthRefreshTokens_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(initial_value,
        r'GauthRefreshTokens_stream_cursor_input', 'initial_value');
  }

  @override
  GauthRefreshTokens_stream_cursor_input rebuild(
          void Function(GauthRefreshTokens_stream_cursor_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_stream_cursor_inputBuilder toBuilder() =>
      new GauthRefreshTokens_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthRefreshTokens_stream_cursor_inputBuilder
    implements
        Builder<GauthRefreshTokens_stream_cursor_input,
            GauthRefreshTokens_stream_cursor_inputBuilder> {
  _$GauthRefreshTokens_stream_cursor_input? _$v;

  GauthRefreshTokens_stream_cursor_value_inputBuilder? _initial_value;
  GauthRefreshTokens_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthRefreshTokens_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthRefreshTokens_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthRefreshTokens_stream_cursor_inputBuilder();

  GauthRefreshTokens_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_stream_cursor_input build() => _build();

  _$GauthRefreshTokens_stream_cursor_input _build() {
    _$GauthRefreshTokens_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_stream_cursor_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_stream_cursor_value_input
    extends GauthRefreshTokens_stream_cursor_value_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Gtimestamptz? expiresAt;
  @override
  final Guuid? refreshToken;
  @override
  final Guuid? userId;

  factory _$GauthRefreshTokens_stream_cursor_value_input(
          [void Function(GauthRefreshTokens_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthRefreshTokens_stream_cursor_value_inputBuilder()
            ..update(updates))
          ._build();

  _$GauthRefreshTokens_stream_cursor_value_input._(
      {this.createdAt, this.expiresAt, this.refreshToken, this.userId})
      : super._();

  @override
  GauthRefreshTokens_stream_cursor_value_input rebuild(
          void Function(GauthRefreshTokens_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthRefreshTokens_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_stream_cursor_value_input &&
        createdAt == other.createdAt &&
        expiresAt == other.expiresAt &&
        refreshToken == other.refreshToken &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), expiresAt.hashCode),
            refreshToken.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthRefreshTokens_stream_cursor_value_input')
          ..add('createdAt', createdAt)
          ..add('expiresAt', expiresAt)
          ..add('refreshToken', refreshToken)
          ..add('userId', userId))
        .toString();
  }
}

class GauthRefreshTokens_stream_cursor_value_inputBuilder
    implements
        Builder<GauthRefreshTokens_stream_cursor_value_input,
            GauthRefreshTokens_stream_cursor_value_inputBuilder> {
  _$GauthRefreshTokens_stream_cursor_value_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GtimestamptzBuilder? _expiresAt;
  GtimestamptzBuilder get expiresAt =>
      _$this._expiresAt ??= new GtimestamptzBuilder();
  set expiresAt(GtimestamptzBuilder? expiresAt) =>
      _$this._expiresAt = expiresAt;

  GuuidBuilder? _refreshToken;
  GuuidBuilder get refreshToken => _$this._refreshToken ??= new GuuidBuilder();
  set refreshToken(GuuidBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthRefreshTokens_stream_cursor_value_inputBuilder();

  GauthRefreshTokens_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _expiresAt = $v.expiresAt?.toBuilder();
      _refreshToken = $v.refreshToken?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthRefreshTokens_stream_cursor_value_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_stream_cursor_value_input build() => _build();

  _$GauthRefreshTokens_stream_cursor_value_input _build() {
    _$GauthRefreshTokens_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_stream_cursor_value_input._(
              createdAt: _createdAt?.build(),
              expiresAt: _expiresAt?.build(),
              refreshToken: _refreshToken?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'expiresAt';
        _expiresAt?.build();
        _$failedField = 'refreshToken';
        _refreshToken?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRefreshTokens_updates extends GauthRefreshTokens_updates {
  @override
  final GauthRefreshTokens_set_input? G_set;
  @override
  final GauthRefreshTokens_bool_exp where;

  factory _$GauthRefreshTokens_updates(
          [void Function(GauthRefreshTokens_updatesBuilder)? updates]) =>
      (new GauthRefreshTokens_updatesBuilder()..update(updates))._build();

  _$GauthRefreshTokens_updates._({this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthRefreshTokens_updates', 'where');
  }

  @override
  GauthRefreshTokens_updates rebuild(
          void Function(GauthRefreshTokens_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRefreshTokens_updatesBuilder toBuilder() =>
      new GauthRefreshTokens_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRefreshTokens_updates &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRefreshTokens_updates')
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthRefreshTokens_updatesBuilder
    implements
        Builder<GauthRefreshTokens_updates, GauthRefreshTokens_updatesBuilder> {
  _$GauthRefreshTokens_updates? _$v;

  GauthRefreshTokens_set_inputBuilder? _G_set;
  GauthRefreshTokens_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthRefreshTokens_set_inputBuilder();
  set G_set(GauthRefreshTokens_set_inputBuilder? G_set) =>
      _$this._G_set = G_set;

  GauthRefreshTokens_bool_expBuilder? _where;
  GauthRefreshTokens_bool_expBuilder get where =>
      _$this._where ??= new GauthRefreshTokens_bool_expBuilder();
  set where(GauthRefreshTokens_bool_expBuilder? where) => _$this._where = where;

  GauthRefreshTokens_updatesBuilder();

  GauthRefreshTokens_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRefreshTokens_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRefreshTokens_updates;
  }

  @override
  void update(void Function(GauthRefreshTokens_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRefreshTokens_updates build() => _build();

  _$GauthRefreshTokens_updates _build() {
    _$GauthRefreshTokens_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthRefreshTokens_updates._(
              G_set: _G_set?.build(), where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRefreshTokens_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_bool_exp extends GauthRoles_bool_exp {
  @override
  final BuiltList<GauthRoles_bool_exp>? G_and;
  @override
  final GauthRoles_bool_exp? G_not;
  @override
  final BuiltList<GauthRoles_bool_exp>? G_or;
  @override
  final GString_comparison_exp? role;
  @override
  final GauthUserRoles_bool_exp? userRoles;
  @override
  final GauthUserRoles_aggregate_bool_exp? userRoles_aggregate;
  @override
  final Gusers_bool_exp? usersByDefaultRole;
  @override
  final Gusers_aggregate_bool_exp? usersByDefaultRole_aggregate;

  factory _$GauthRoles_bool_exp(
          [void Function(GauthRoles_bool_expBuilder)? updates]) =>
      (new GauthRoles_bool_expBuilder()..update(updates))._build();

  _$GauthRoles_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.role,
      this.userRoles,
      this.userRoles_aggregate,
      this.usersByDefaultRole,
      this.usersByDefaultRole_aggregate})
      : super._();

  @override
  GauthRoles_bool_exp rebuild(
          void Function(GauthRoles_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_bool_expBuilder toBuilder() =>
      new GauthRoles_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        role == other.role &&
        userRoles == other.userRoles &&
        userRoles_aggregate == other.userRoles_aggregate &&
        usersByDefaultRole == other.usersByDefaultRole &&
        usersByDefaultRole_aggregate == other.usersByDefaultRole_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, G_and.hashCode), G_not.hashCode),
                            G_or.hashCode),
                        role.hashCode),
                    userRoles.hashCode),
                userRoles_aggregate.hashCode),
            usersByDefaultRole.hashCode),
        usersByDefaultRole_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('role', role)
          ..add('userRoles', userRoles)
          ..add('userRoles_aggregate', userRoles_aggregate)
          ..add('usersByDefaultRole', usersByDefaultRole)
          ..add('usersByDefaultRole_aggregate', usersByDefaultRole_aggregate))
        .toString();
  }
}

class GauthRoles_bool_expBuilder
    implements Builder<GauthRoles_bool_exp, GauthRoles_bool_expBuilder> {
  _$GauthRoles_bool_exp? _$v;

  ListBuilder<GauthRoles_bool_exp>? _G_and;
  ListBuilder<GauthRoles_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthRoles_bool_exp>();
  set G_and(ListBuilder<GauthRoles_bool_exp>? G_and) => _$this._G_and = G_and;

  GauthRoles_bool_expBuilder? _G_not;
  GauthRoles_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthRoles_bool_expBuilder();
  set G_not(GauthRoles_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<GauthRoles_bool_exp>? _G_or;
  ListBuilder<GauthRoles_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthRoles_bool_exp>();
  set G_or(ListBuilder<GauthRoles_bool_exp>? G_or) => _$this._G_or = G_or;

  GString_comparison_expBuilder? _role;
  GString_comparison_expBuilder get role =>
      _$this._role ??= new GString_comparison_expBuilder();
  set role(GString_comparison_expBuilder? role) => _$this._role = role;

  GauthUserRoles_bool_expBuilder? _userRoles;
  GauthUserRoles_bool_expBuilder get userRoles =>
      _$this._userRoles ??= new GauthUserRoles_bool_expBuilder();
  set userRoles(GauthUserRoles_bool_expBuilder? userRoles) =>
      _$this._userRoles = userRoles;

  GauthUserRoles_aggregate_bool_expBuilder? _userRoles_aggregate;
  GauthUserRoles_aggregate_bool_expBuilder get userRoles_aggregate =>
      _$this._userRoles_aggregate ??=
          new GauthUserRoles_aggregate_bool_expBuilder();
  set userRoles_aggregate(
          GauthUserRoles_aggregate_bool_expBuilder? userRoles_aggregate) =>
      _$this._userRoles_aggregate = userRoles_aggregate;

  Gusers_bool_expBuilder? _usersByDefaultRole;
  Gusers_bool_expBuilder get usersByDefaultRole =>
      _$this._usersByDefaultRole ??= new Gusers_bool_expBuilder();
  set usersByDefaultRole(Gusers_bool_expBuilder? usersByDefaultRole) =>
      _$this._usersByDefaultRole = usersByDefaultRole;

  Gusers_aggregate_bool_expBuilder? _usersByDefaultRole_aggregate;
  Gusers_aggregate_bool_expBuilder get usersByDefaultRole_aggregate =>
      _$this._usersByDefaultRole_aggregate ??=
          new Gusers_aggregate_bool_expBuilder();
  set usersByDefaultRole_aggregate(
          Gusers_aggregate_bool_expBuilder? usersByDefaultRole_aggregate) =>
      _$this._usersByDefaultRole_aggregate = usersByDefaultRole_aggregate;

  GauthRoles_bool_expBuilder();

  GauthRoles_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _role = $v.role?.toBuilder();
      _userRoles = $v.userRoles?.toBuilder();
      _userRoles_aggregate = $v.userRoles_aggregate?.toBuilder();
      _usersByDefaultRole = $v.usersByDefaultRole?.toBuilder();
      _usersByDefaultRole_aggregate =
          $v.usersByDefaultRole_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_bool_exp;
  }

  @override
  void update(void Function(GauthRoles_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_bool_exp build() => _build();

  _$GauthRoles_bool_exp _build() {
    _$GauthRoles_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              role: _role?.build(),
              userRoles: _userRoles?.build(),
              userRoles_aggregate: _userRoles_aggregate?.build(),
              usersByDefaultRole: _usersByDefaultRole?.build(),
              usersByDefaultRole_aggregate:
                  _usersByDefaultRole_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'role';
        _role?.build();
        _$failedField = 'userRoles';
        _userRoles?.build();
        _$failedField = 'userRoles_aggregate';
        _userRoles_aggregate?.build();
        _$failedField = 'usersByDefaultRole';
        _usersByDefaultRole?.build();
        _$failedField = 'usersByDefaultRole_aggregate';
        _usersByDefaultRole_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_insert_input extends GauthRoles_insert_input {
  @override
  final String? role;
  @override
  final GauthUserRoles_arr_rel_insert_input? userRoles;
  @override
  final Gusers_arr_rel_insert_input? usersByDefaultRole;

  factory _$GauthRoles_insert_input(
          [void Function(GauthRoles_insert_inputBuilder)? updates]) =>
      (new GauthRoles_insert_inputBuilder()..update(updates))._build();

  _$GauthRoles_insert_input._(
      {this.role, this.userRoles, this.usersByDefaultRole})
      : super._();

  @override
  GauthRoles_insert_input rebuild(
          void Function(GauthRoles_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_insert_inputBuilder toBuilder() =>
      new GauthRoles_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_insert_input &&
        role == other.role &&
        userRoles == other.userRoles &&
        usersByDefaultRole == other.usersByDefaultRole;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, role.hashCode), userRoles.hashCode),
        usersByDefaultRole.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_insert_input')
          ..add('role', role)
          ..add('userRoles', userRoles)
          ..add('usersByDefaultRole', usersByDefaultRole))
        .toString();
  }
}

class GauthRoles_insert_inputBuilder
    implements
        Builder<GauthRoles_insert_input, GauthRoles_insert_inputBuilder> {
  _$GauthRoles_insert_input? _$v;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GauthUserRoles_arr_rel_insert_inputBuilder? _userRoles;
  GauthUserRoles_arr_rel_insert_inputBuilder get userRoles =>
      _$this._userRoles ??= new GauthUserRoles_arr_rel_insert_inputBuilder();
  set userRoles(GauthUserRoles_arr_rel_insert_inputBuilder? userRoles) =>
      _$this._userRoles = userRoles;

  Gusers_arr_rel_insert_inputBuilder? _usersByDefaultRole;
  Gusers_arr_rel_insert_inputBuilder get usersByDefaultRole =>
      _$this._usersByDefaultRole ??= new Gusers_arr_rel_insert_inputBuilder();
  set usersByDefaultRole(
          Gusers_arr_rel_insert_inputBuilder? usersByDefaultRole) =>
      _$this._usersByDefaultRole = usersByDefaultRole;

  GauthRoles_insert_inputBuilder();

  GauthRoles_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _role = $v.role;
      _userRoles = $v.userRoles?.toBuilder();
      _usersByDefaultRole = $v.usersByDefaultRole?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_insert_input;
  }

  @override
  void update(void Function(GauthRoles_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_insert_input build() => _build();

  _$GauthRoles_insert_input _build() {
    _$GauthRoles_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_insert_input._(
              role: role,
              userRoles: _userRoles?.build(),
              usersByDefaultRole: _usersByDefaultRole?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'userRoles';
        _userRoles?.build();
        _$failedField = 'usersByDefaultRole';
        _usersByDefaultRole?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_obj_rel_insert_input
    extends GauthRoles_obj_rel_insert_input {
  @override
  final GauthRoles_insert_input data;
  @override
  final GauthRoles_on_conflict? on_conflict;

  factory _$GauthRoles_obj_rel_insert_input(
          [void Function(GauthRoles_obj_rel_insert_inputBuilder)? updates]) =>
      (new GauthRoles_obj_rel_insert_inputBuilder()..update(updates))._build();

  _$GauthRoles_obj_rel_insert_input._({required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthRoles_obj_rel_insert_input', 'data');
  }

  @override
  GauthRoles_obj_rel_insert_input rebuild(
          void Function(GauthRoles_obj_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_obj_rel_insert_inputBuilder toBuilder() =>
      new GauthRoles_obj_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_obj_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_obj_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthRoles_obj_rel_insert_inputBuilder
    implements
        Builder<GauthRoles_obj_rel_insert_input,
            GauthRoles_obj_rel_insert_inputBuilder> {
  _$GauthRoles_obj_rel_insert_input? _$v;

  GauthRoles_insert_inputBuilder? _data;
  GauthRoles_insert_inputBuilder get data =>
      _$this._data ??= new GauthRoles_insert_inputBuilder();
  set data(GauthRoles_insert_inputBuilder? data) => _$this._data = data;

  GauthRoles_on_conflictBuilder? _on_conflict;
  GauthRoles_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthRoles_on_conflictBuilder();
  set on_conflict(GauthRoles_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthRoles_obj_rel_insert_inputBuilder();

  GauthRoles_obj_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_obj_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_obj_rel_insert_input;
  }

  @override
  void update(void Function(GauthRoles_obj_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_obj_rel_insert_input build() => _build();

  _$GauthRoles_obj_rel_insert_input _build() {
    _$GauthRoles_obj_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_obj_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_obj_rel_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_on_conflict extends GauthRoles_on_conflict {
  @override
  final GauthRoles_constraint constraint;
  @override
  final BuiltList<GauthRoles_update_column> update_columns;
  @override
  final GauthRoles_bool_exp? where;

  factory _$GauthRoles_on_conflict(
          [void Function(GauthRoles_on_conflictBuilder)? updates]) =>
      (new GauthRoles_on_conflictBuilder()..update(updates))._build();

  _$GauthRoles_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthRoles_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthRoles_on_conflict', 'update_columns');
  }

  @override
  GauthRoles_on_conflict rebuild(
          void Function(GauthRoles_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_on_conflictBuilder toBuilder() =>
      new GauthRoles_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthRoles_on_conflictBuilder
    implements Builder<GauthRoles_on_conflict, GauthRoles_on_conflictBuilder> {
  _$GauthRoles_on_conflict? _$v;

  GauthRoles_constraint? _constraint;
  GauthRoles_constraint? get constraint => _$this._constraint;
  set constraint(GauthRoles_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthRoles_update_column>? _update_columns;
  ListBuilder<GauthRoles_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<GauthRoles_update_column>();
  set update_columns(ListBuilder<GauthRoles_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthRoles_bool_expBuilder? _where;
  GauthRoles_bool_expBuilder get where =>
      _$this._where ??= new GauthRoles_bool_expBuilder();
  set where(GauthRoles_bool_expBuilder? where) => _$this._where = where;

  GauthRoles_on_conflictBuilder();

  GauthRoles_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_on_conflict;
  }

  @override
  void update(void Function(GauthRoles_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_on_conflict build() => _build();

  _$GauthRoles_on_conflict _build() {
    _$GauthRoles_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'GauthRoles_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_order_by extends GauthRoles_order_by {
  @override
  final Gorder_by? role;
  @override
  final GauthUserRoles_aggregate_order_by? userRoles_aggregate;
  @override
  final Gusers_aggregate_order_by? usersByDefaultRole_aggregate;

  factory _$GauthRoles_order_by(
          [void Function(GauthRoles_order_byBuilder)? updates]) =>
      (new GauthRoles_order_byBuilder()..update(updates))._build();

  _$GauthRoles_order_by._(
      {this.role, this.userRoles_aggregate, this.usersByDefaultRole_aggregate})
      : super._();

  @override
  GauthRoles_order_by rebuild(
          void Function(GauthRoles_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_order_byBuilder toBuilder() =>
      new GauthRoles_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_order_by &&
        role == other.role &&
        userRoles_aggregate == other.userRoles_aggregate &&
        usersByDefaultRole_aggregate == other.usersByDefaultRole_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, role.hashCode), userRoles_aggregate.hashCode),
        usersByDefaultRole_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_order_by')
          ..add('role', role)
          ..add('userRoles_aggregate', userRoles_aggregate)
          ..add('usersByDefaultRole_aggregate', usersByDefaultRole_aggregate))
        .toString();
  }
}

class GauthRoles_order_byBuilder
    implements Builder<GauthRoles_order_by, GauthRoles_order_byBuilder> {
  _$GauthRoles_order_by? _$v;

  Gorder_by? _role;
  Gorder_by? get role => _$this._role;
  set role(Gorder_by? role) => _$this._role = role;

  GauthUserRoles_aggregate_order_byBuilder? _userRoles_aggregate;
  GauthUserRoles_aggregate_order_byBuilder get userRoles_aggregate =>
      _$this._userRoles_aggregate ??=
          new GauthUserRoles_aggregate_order_byBuilder();
  set userRoles_aggregate(
          GauthUserRoles_aggregate_order_byBuilder? userRoles_aggregate) =>
      _$this._userRoles_aggregate = userRoles_aggregate;

  Gusers_aggregate_order_byBuilder? _usersByDefaultRole_aggregate;
  Gusers_aggregate_order_byBuilder get usersByDefaultRole_aggregate =>
      _$this._usersByDefaultRole_aggregate ??=
          new Gusers_aggregate_order_byBuilder();
  set usersByDefaultRole_aggregate(
          Gusers_aggregate_order_byBuilder? usersByDefaultRole_aggregate) =>
      _$this._usersByDefaultRole_aggregate = usersByDefaultRole_aggregate;

  GauthRoles_order_byBuilder();

  GauthRoles_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _role = $v.role;
      _userRoles_aggregate = $v.userRoles_aggregate?.toBuilder();
      _usersByDefaultRole_aggregate =
          $v.usersByDefaultRole_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_order_by;
  }

  @override
  void update(void Function(GauthRoles_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_order_by build() => _build();

  _$GauthRoles_order_by _build() {
    _$GauthRoles_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_order_by._(
              role: role,
              userRoles_aggregate: _userRoles_aggregate?.build(),
              usersByDefaultRole_aggregate:
                  _usersByDefaultRole_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'userRoles_aggregate';
        _userRoles_aggregate?.build();
        _$failedField = 'usersByDefaultRole_aggregate';
        _usersByDefaultRole_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_pk_columns_input extends GauthRoles_pk_columns_input {
  @override
  final String role;

  factory _$GauthRoles_pk_columns_input(
          [void Function(GauthRoles_pk_columns_inputBuilder)? updates]) =>
      (new GauthRoles_pk_columns_inputBuilder()..update(updates))._build();

  _$GauthRoles_pk_columns_input._({required this.role}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        role, r'GauthRoles_pk_columns_input', 'role');
  }

  @override
  GauthRoles_pk_columns_input rebuild(
          void Function(GauthRoles_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_pk_columns_inputBuilder toBuilder() =>
      new GauthRoles_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_pk_columns_input && role == other.role;
  }

  @override
  int get hashCode {
    return $jf($jc(0, role.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_pk_columns_input')
          ..add('role', role))
        .toString();
  }
}

class GauthRoles_pk_columns_inputBuilder
    implements
        Builder<GauthRoles_pk_columns_input,
            GauthRoles_pk_columns_inputBuilder> {
  _$GauthRoles_pk_columns_input? _$v;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GauthRoles_pk_columns_inputBuilder();

  GauthRoles_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_pk_columns_input;
  }

  @override
  void update(void Function(GauthRoles_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_pk_columns_input build() => _build();

  _$GauthRoles_pk_columns_input _build() {
    final _$result = _$v ??
        new _$GauthRoles_pk_columns_input._(
            role: BuiltValueNullFieldError.checkNotNull(
                role, r'GauthRoles_pk_columns_input', 'role'));
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_set_input extends GauthRoles_set_input {
  @override
  final String? role;

  factory _$GauthRoles_set_input(
          [void Function(GauthRoles_set_inputBuilder)? updates]) =>
      (new GauthRoles_set_inputBuilder()..update(updates))._build();

  _$GauthRoles_set_input._({this.role}) : super._();

  @override
  GauthRoles_set_input rebuild(
          void Function(GauthRoles_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_set_inputBuilder toBuilder() =>
      new GauthRoles_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_set_input && role == other.role;
  }

  @override
  int get hashCode {
    return $jf($jc(0, role.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_set_input')
          ..add('role', role))
        .toString();
  }
}

class GauthRoles_set_inputBuilder
    implements Builder<GauthRoles_set_input, GauthRoles_set_inputBuilder> {
  _$GauthRoles_set_input? _$v;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GauthRoles_set_inputBuilder();

  GauthRoles_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_set_input;
  }

  @override
  void update(void Function(GauthRoles_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_set_input build() => _build();

  _$GauthRoles_set_input _build() {
    final _$result = _$v ?? new _$GauthRoles_set_input._(role: role);
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_stream_cursor_input extends GauthRoles_stream_cursor_input {
  @override
  final GauthRoles_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthRoles_stream_cursor_input(
          [void Function(GauthRoles_stream_cursor_inputBuilder)? updates]) =>
      (new GauthRoles_stream_cursor_inputBuilder()..update(updates))._build();

  _$GauthRoles_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'GauthRoles_stream_cursor_input', 'initial_value');
  }

  @override
  GauthRoles_stream_cursor_input rebuild(
          void Function(GauthRoles_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_stream_cursor_inputBuilder toBuilder() =>
      new GauthRoles_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthRoles_stream_cursor_inputBuilder
    implements
        Builder<GauthRoles_stream_cursor_input,
            GauthRoles_stream_cursor_inputBuilder> {
  _$GauthRoles_stream_cursor_input? _$v;

  GauthRoles_stream_cursor_value_inputBuilder? _initial_value;
  GauthRoles_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthRoles_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthRoles_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthRoles_stream_cursor_inputBuilder();

  GauthRoles_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_stream_cursor_input;
  }

  @override
  void update(void Function(GauthRoles_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_stream_cursor_input build() => _build();

  _$GauthRoles_stream_cursor_input _build() {
    _$GauthRoles_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_stream_cursor_value_input
    extends GauthRoles_stream_cursor_value_input {
  @override
  final String? role;

  factory _$GauthRoles_stream_cursor_value_input(
          [void Function(GauthRoles_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthRoles_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$GauthRoles_stream_cursor_value_input._({this.role}) : super._();

  @override
  GauthRoles_stream_cursor_value_input rebuild(
          void Function(GauthRoles_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthRoles_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_stream_cursor_value_input && role == other.role;
  }

  @override
  int get hashCode {
    return $jf($jc(0, role.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_stream_cursor_value_input')
          ..add('role', role))
        .toString();
  }
}

class GauthRoles_stream_cursor_value_inputBuilder
    implements
        Builder<GauthRoles_stream_cursor_value_input,
            GauthRoles_stream_cursor_value_inputBuilder> {
  _$GauthRoles_stream_cursor_value_input? _$v;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GauthRoles_stream_cursor_value_inputBuilder();

  GauthRoles_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthRoles_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_stream_cursor_value_input build() => _build();

  _$GauthRoles_stream_cursor_value_input _build() {
    final _$result =
        _$v ?? new _$GauthRoles_stream_cursor_value_input._(role: role);
    replace(_$result);
    return _$result;
  }
}

class _$GauthRoles_updates extends GauthRoles_updates {
  @override
  final GauthRoles_set_input? G_set;
  @override
  final GauthRoles_bool_exp where;

  factory _$GauthRoles_updates(
          [void Function(GauthRoles_updatesBuilder)? updates]) =>
      (new GauthRoles_updatesBuilder()..update(updates))._build();

  _$GauthRoles_updates._({this.G_set, required this.where}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthRoles_updates', 'where');
  }

  @override
  GauthRoles_updates rebuild(
          void Function(GauthRoles_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthRoles_updatesBuilder toBuilder() =>
      new GauthRoles_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthRoles_updates &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthRoles_updates')
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthRoles_updatesBuilder
    implements Builder<GauthRoles_updates, GauthRoles_updatesBuilder> {
  _$GauthRoles_updates? _$v;

  GauthRoles_set_inputBuilder? _G_set;
  GauthRoles_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthRoles_set_inputBuilder();
  set G_set(GauthRoles_set_inputBuilder? G_set) => _$this._G_set = G_set;

  GauthRoles_bool_expBuilder? _where;
  GauthRoles_bool_expBuilder get where =>
      _$this._where ??= new GauthRoles_bool_expBuilder();
  set where(GauthRoles_bool_expBuilder? where) => _$this._where = where;

  GauthRoles_updatesBuilder();

  GauthRoles_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthRoles_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthRoles_updates;
  }

  @override
  void update(void Function(GauthRoles_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthRoles_updates build() => _build();

  _$GauthRoles_updates _build() {
    _$GauthRoles_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthRoles_updates._(
              G_set: _G_set?.build(), where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthRoles_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_aggregate_bool_exp
    extends GauthUserProviders_aggregate_bool_exp {
  @override
  final GauthUserProviders_aggregate_bool_exp_count? count;

  factory _$GauthUserProviders_aggregate_bool_exp(
          [void Function(GauthUserProviders_aggregate_bool_expBuilder)?
              updates]) =>
      (new GauthUserProviders_aggregate_bool_expBuilder()..update(updates))
          ._build();

  _$GauthUserProviders_aggregate_bool_exp._({this.count}) : super._();

  @override
  GauthUserProviders_aggregate_bool_exp rebuild(
          void Function(GauthUserProviders_aggregate_bool_expBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_aggregate_bool_expBuilder toBuilder() =>
      new GauthUserProviders_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_aggregate_bool_exp &&
        count == other.count;
  }

  @override
  int get hashCode {
    return $jf($jc(0, count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_aggregate_bool_exp')
          ..add('count', count))
        .toString();
  }
}

class GauthUserProviders_aggregate_bool_expBuilder
    implements
        Builder<GauthUserProviders_aggregate_bool_exp,
            GauthUserProviders_aggregate_bool_expBuilder> {
  _$GauthUserProviders_aggregate_bool_exp? _$v;

  GauthUserProviders_aggregate_bool_exp_countBuilder? _count;
  GauthUserProviders_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??=
          new GauthUserProviders_aggregate_bool_exp_countBuilder();
  set count(GauthUserProviders_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  GauthUserProviders_aggregate_bool_expBuilder();

  GauthUserProviders_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_aggregate_bool_exp;
  }

  @override
  void update(
      void Function(GauthUserProviders_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_aggregate_bool_exp build() => _build();

  _$GauthUserProviders_aggregate_bool_exp _build() {
    _$GauthUserProviders_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_aggregate_bool_exp._(count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_aggregate_bool_exp',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_aggregate_bool_exp_count
    extends GauthUserProviders_aggregate_bool_exp_count {
  @override
  final BuiltList<GauthUserProviders_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final GauthUserProviders_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$GauthUserProviders_aggregate_bool_exp_count(
          [void Function(GauthUserProviders_aggregate_bool_exp_countBuilder)?
              updates]) =>
      (new GauthUserProviders_aggregate_bool_exp_countBuilder()
            ..update(updates))
          ._build();

  _$GauthUserProviders_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'GauthUserProviders_aggregate_bool_exp_count', 'predicate');
  }

  @override
  GauthUserProviders_aggregate_bool_exp_count rebuild(
          void Function(GauthUserProviders_aggregate_bool_exp_countBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_aggregate_bool_exp_countBuilder toBuilder() =>
      new GauthUserProviders_aggregate_bool_exp_countBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class GauthUserProviders_aggregate_bool_exp_countBuilder
    implements
        Builder<GauthUserProviders_aggregate_bool_exp_count,
            GauthUserProviders_aggregate_bool_exp_countBuilder> {
  _$GauthUserProviders_aggregate_bool_exp_count? _$v;

  ListBuilder<GauthUserProviders_select_column>? _arguments;
  ListBuilder<GauthUserProviders_select_column> get arguments =>
      _$this._arguments ??= new ListBuilder<GauthUserProviders_select_column>();
  set arguments(ListBuilder<GauthUserProviders_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  GauthUserProviders_bool_expBuilder? _filter;
  GauthUserProviders_bool_expBuilder get filter =>
      _$this._filter ??= new GauthUserProviders_bool_expBuilder();
  set filter(GauthUserProviders_bool_expBuilder? filter) =>
      _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  GauthUserProviders_aggregate_bool_exp_countBuilder();

  GauthUserProviders_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_aggregate_bool_exp_count;
  }

  @override
  void update(
      void Function(GauthUserProviders_aggregate_bool_exp_countBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_aggregate_bool_exp_count build() => _build();

  _$GauthUserProviders_aggregate_bool_exp_count _build() {
    _$GauthUserProviders_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_aggregate_bool_exp_count',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_aggregate_order_by
    extends GauthUserProviders_aggregate_order_by {
  @override
  final Gorder_by? count;
  @override
  final GauthUserProviders_max_order_by? max;
  @override
  final GauthUserProviders_min_order_by? min;

  factory _$GauthUserProviders_aggregate_order_by(
          [void Function(GauthUserProviders_aggregate_order_byBuilder)?
              updates]) =>
      (new GauthUserProviders_aggregate_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserProviders_aggregate_order_by._({this.count, this.max, this.min})
      : super._();

  @override
  GauthUserProviders_aggregate_order_by rebuild(
          void Function(GauthUserProviders_aggregate_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_aggregate_order_byBuilder toBuilder() =>
      new GauthUserProviders_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_aggregate_order_by &&
        count == other.count &&
        max == other.max &&
        min == other.min;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, count.hashCode), max.hashCode), min.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_aggregate_order_by')
          ..add('count', count)
          ..add('max', max)
          ..add('min', min))
        .toString();
  }
}

class GauthUserProviders_aggregate_order_byBuilder
    implements
        Builder<GauthUserProviders_aggregate_order_by,
            GauthUserProviders_aggregate_order_byBuilder> {
  _$GauthUserProviders_aggregate_order_by? _$v;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  GauthUserProviders_max_order_byBuilder? _max;
  GauthUserProviders_max_order_byBuilder get max =>
      _$this._max ??= new GauthUserProviders_max_order_byBuilder();
  set max(GauthUserProviders_max_order_byBuilder? max) => _$this._max = max;

  GauthUserProviders_min_order_byBuilder? _min;
  GauthUserProviders_min_order_byBuilder get min =>
      _$this._min ??= new GauthUserProviders_min_order_byBuilder();
  set min(GauthUserProviders_min_order_byBuilder? min) => _$this._min = min;

  GauthUserProviders_aggregate_order_byBuilder();

  GauthUserProviders_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_aggregate_order_by;
  }

  @override
  void update(
      void Function(GauthUserProviders_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_aggregate_order_by build() => _build();

  _$GauthUserProviders_aggregate_order_by _build() {
    _$GauthUserProviders_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_aggregate_order_by._(
              count: count, max: _max?.build(), min: _min?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_aggregate_order_by',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_arr_rel_insert_input
    extends GauthUserProviders_arr_rel_insert_input {
  @override
  final BuiltList<GauthUserProviders_insert_input> data;
  @override
  final GauthUserProviders_on_conflict? on_conflict;

  factory _$GauthUserProviders_arr_rel_insert_input(
          [void Function(GauthUserProviders_arr_rel_insert_inputBuilder)?
              updates]) =>
      (new GauthUserProviders_arr_rel_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthUserProviders_arr_rel_insert_input._(
      {required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthUserProviders_arr_rel_insert_input', 'data');
  }

  @override
  GauthUserProviders_arr_rel_insert_input rebuild(
          void Function(GauthUserProviders_arr_rel_insert_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_arr_rel_insert_inputBuilder toBuilder() =>
      new GauthUserProviders_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthUserProviders_arr_rel_insert_inputBuilder
    implements
        Builder<GauthUserProviders_arr_rel_insert_input,
            GauthUserProviders_arr_rel_insert_inputBuilder> {
  _$GauthUserProviders_arr_rel_insert_input? _$v;

  ListBuilder<GauthUserProviders_insert_input>? _data;
  ListBuilder<GauthUserProviders_insert_input> get data =>
      _$this._data ??= new ListBuilder<GauthUserProviders_insert_input>();
  set data(ListBuilder<GauthUserProviders_insert_input>? data) =>
      _$this._data = data;

  GauthUserProviders_on_conflictBuilder? _on_conflict;
  GauthUserProviders_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthUserProviders_on_conflictBuilder();
  set on_conflict(GauthUserProviders_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthUserProviders_arr_rel_insert_inputBuilder();

  GauthUserProviders_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_arr_rel_insert_input;
  }

  @override
  void update(
      void Function(GauthUserProviders_arr_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_arr_rel_insert_input build() => _build();

  _$GauthUserProviders_arr_rel_insert_input _build() {
    _$GauthUserProviders_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_arr_rel_insert_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_bool_exp extends GauthUserProviders_bool_exp {
  @override
  final BuiltList<GauthUserProviders_bool_exp>? G_and;
  @override
  final GauthUserProviders_bool_exp? G_not;
  @override
  final BuiltList<GauthUserProviders_bool_exp>? G_or;
  @override
  final GString_comparison_exp? accessToken;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GauthProviders_bool_exp? provider;
  @override
  final GString_comparison_exp? providerId;
  @override
  final GString_comparison_exp? providerUserId;
  @override
  final GString_comparison_exp? refreshToken;
  @override
  final Gtimestamptz_comparison_exp? updatedAt;
  @override
  final Gusers_bool_exp? user;
  @override
  final Guuid_comparison_exp? userId;

  factory _$GauthUserProviders_bool_exp(
          [void Function(GauthUserProviders_bool_expBuilder)? updates]) =>
      (new GauthUserProviders_bool_expBuilder()..update(updates))._build();

  _$GauthUserProviders_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.accessToken,
      this.createdAt,
      this.id,
      this.provider,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserProviders_bool_exp rebuild(
          void Function(GauthUserProviders_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_bool_expBuilder toBuilder() =>
      new GauthUserProviders_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        provider == other.provider &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, G_and.hashCode),
                                                    G_not.hashCode),
                                                G_or.hashCode),
                                            accessToken.hashCode),
                                        createdAt.hashCode),
                                    id.hashCode),
                                provider.hashCode),
                            providerId.hashCode),
                        providerUserId.hashCode),
                    refreshToken.hashCode),
                updatedAt.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('provider', provider)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_bool_expBuilder
    implements
        Builder<GauthUserProviders_bool_exp,
            GauthUserProviders_bool_expBuilder> {
  _$GauthUserProviders_bool_exp? _$v;

  ListBuilder<GauthUserProviders_bool_exp>? _G_and;
  ListBuilder<GauthUserProviders_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthUserProviders_bool_exp>();
  set G_and(ListBuilder<GauthUserProviders_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthUserProviders_bool_expBuilder? _G_not;
  GauthUserProviders_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthUserProviders_bool_expBuilder();
  set G_not(GauthUserProviders_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<GauthUserProviders_bool_exp>? _G_or;
  ListBuilder<GauthUserProviders_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthUserProviders_bool_exp>();
  set G_or(ListBuilder<GauthUserProviders_bool_exp>? G_or) =>
      _$this._G_or = G_or;

  GString_comparison_expBuilder? _accessToken;
  GString_comparison_expBuilder get accessToken =>
      _$this._accessToken ??= new GString_comparison_expBuilder();
  set accessToken(GString_comparison_expBuilder? accessToken) =>
      _$this._accessToken = accessToken;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GauthProviders_bool_expBuilder? _provider;
  GauthProviders_bool_expBuilder get provider =>
      _$this._provider ??= new GauthProviders_bool_expBuilder();
  set provider(GauthProviders_bool_expBuilder? provider) =>
      _$this._provider = provider;

  GString_comparison_expBuilder? _providerId;
  GString_comparison_expBuilder get providerId =>
      _$this._providerId ??= new GString_comparison_expBuilder();
  set providerId(GString_comparison_expBuilder? providerId) =>
      _$this._providerId = providerId;

  GString_comparison_expBuilder? _providerUserId;
  GString_comparison_expBuilder get providerUserId =>
      _$this._providerUserId ??= new GString_comparison_expBuilder();
  set providerUserId(GString_comparison_expBuilder? providerUserId) =>
      _$this._providerUserId = providerUserId;

  GString_comparison_expBuilder? _refreshToken;
  GString_comparison_expBuilder get refreshToken =>
      _$this._refreshToken ??= new GString_comparison_expBuilder();
  set refreshToken(GString_comparison_expBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gtimestamptz_comparison_expBuilder? _updatedAt;
  Gtimestamptz_comparison_expBuilder get updatedAt =>
      _$this._updatedAt ??= new Gtimestamptz_comparison_expBuilder();
  set updatedAt(Gtimestamptz_comparison_expBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gusers_bool_expBuilder? _user;
  Gusers_bool_expBuilder get user =>
      _$this._user ??= new Gusers_bool_expBuilder();
  set user(Gusers_bool_expBuilder? user) => _$this._user = user;

  Guuid_comparison_expBuilder? _userId;
  Guuid_comparison_expBuilder get userId =>
      _$this._userId ??= new Guuid_comparison_expBuilder();
  set userId(Guuid_comparison_expBuilder? userId) => _$this._userId = userId;

  GauthUserProviders_bool_expBuilder();

  GauthUserProviders_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _accessToken = $v.accessToken?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _provider = $v.provider?.toBuilder();
      _providerId = $v.providerId?.toBuilder();
      _providerUserId = $v.providerUserId?.toBuilder();
      _refreshToken = $v.refreshToken?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_bool_exp;
  }

  @override
  void update(void Function(GauthUserProviders_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_bool_exp build() => _build();

  _$GauthUserProviders_bool_exp _build() {
    _$GauthUserProviders_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              accessToken: _accessToken?.build(),
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              provider: _provider?.build(),
              providerId: _providerId?.build(),
              providerUserId: _providerUserId?.build(),
              refreshToken: _refreshToken?.build(),
              updatedAt: _updatedAt?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'accessToken';
        _accessToken?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'provider';
        _provider?.build();
        _$failedField = 'providerId';
        _providerId?.build();
        _$failedField = 'providerUserId';
        _providerUserId?.build();
        _$failedField = 'refreshToken';
        _refreshToken?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_insert_input
    extends GauthUserProviders_insert_input {
  @override
  final String? accessToken;
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final GauthProviders_obj_rel_insert_input? provider;
  @override
  final String? providerId;
  @override
  final String? providerUserId;
  @override
  final String? refreshToken;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Gusers_obj_rel_insert_input? user;
  @override
  final Guuid? userId;

  factory _$GauthUserProviders_insert_input(
          [void Function(GauthUserProviders_insert_inputBuilder)? updates]) =>
      (new GauthUserProviders_insert_inputBuilder()..update(updates))._build();

  _$GauthUserProviders_insert_input._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.provider,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserProviders_insert_input rebuild(
          void Function(GauthUserProviders_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_insert_inputBuilder toBuilder() =>
      new GauthUserProviders_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_insert_input &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        provider == other.provider &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, accessToken.hashCode),
                                        createdAt.hashCode),
                                    id.hashCode),
                                provider.hashCode),
                            providerId.hashCode),
                        providerUserId.hashCode),
                    refreshToken.hashCode),
                updatedAt.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_insert_input')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('provider', provider)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_insert_inputBuilder
    implements
        Builder<GauthUserProviders_insert_input,
            GauthUserProviders_insert_inputBuilder> {
  _$GauthUserProviders_insert_input? _$v;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  GauthProviders_obj_rel_insert_inputBuilder? _provider;
  GauthProviders_obj_rel_insert_inputBuilder get provider =>
      _$this._provider ??= new GauthProviders_obj_rel_insert_inputBuilder();
  set provider(GauthProviders_obj_rel_insert_inputBuilder? provider) =>
      _$this._provider = provider;

  String? _providerId;
  String? get providerId => _$this._providerId;
  set providerId(String? providerId) => _$this._providerId = providerId;

  String? _providerUserId;
  String? get providerUserId => _$this._providerUserId;
  set providerUserId(String? providerUserId) =>
      _$this._providerUserId = providerUserId;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gusers_obj_rel_insert_inputBuilder? _user;
  Gusers_obj_rel_insert_inputBuilder get user =>
      _$this._user ??= new Gusers_obj_rel_insert_inputBuilder();
  set user(Gusers_obj_rel_insert_inputBuilder? user) => _$this._user = user;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserProviders_insert_inputBuilder();

  GauthUserProviders_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _provider = $v.provider?.toBuilder();
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_insert_input;
  }

  @override
  void update(void Function(GauthUserProviders_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_insert_input build() => _build();

  _$GauthUserProviders_insert_input _build() {
    _$GauthUserProviders_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_insert_input._(
              accessToken: accessToken,
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              provider: _provider?.build(),
              providerId: providerId,
              providerUserId: providerUserId,
              refreshToken: refreshToken,
              updatedAt: _updatedAt?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'provider';
        _provider?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_max_order_by
    extends GauthUserProviders_max_order_by {
  @override
  final Gorder_by? accessToken;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? providerId;
  @override
  final Gorder_by? providerUserId;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gorder_by? userId;

  factory _$GauthUserProviders_max_order_by(
          [void Function(GauthUserProviders_max_order_byBuilder)? updates]) =>
      (new GauthUserProviders_max_order_byBuilder()..update(updates))._build();

  _$GauthUserProviders_max_order_by._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.userId})
      : super._();

  @override
  GauthUserProviders_max_order_by rebuild(
          void Function(GauthUserProviders_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_max_order_byBuilder toBuilder() =>
      new GauthUserProviders_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_max_order_by &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, accessToken.hashCode),
                                createdAt.hashCode),
                            id.hashCode),
                        providerId.hashCode),
                    providerUserId.hashCode),
                refreshToken.hashCode),
            updatedAt.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_max_order_by')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_max_order_byBuilder
    implements
        Builder<GauthUserProviders_max_order_by,
            GauthUserProviders_max_order_byBuilder> {
  _$GauthUserProviders_max_order_by? _$v;

  Gorder_by? _accessToken;
  Gorder_by? get accessToken => _$this._accessToken;
  set accessToken(Gorder_by? accessToken) => _$this._accessToken = accessToken;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _providerId;
  Gorder_by? get providerId => _$this._providerId;
  set providerId(Gorder_by? providerId) => _$this._providerId = providerId;

  Gorder_by? _providerUserId;
  Gorder_by? get providerUserId => _$this._providerUserId;
  set providerUserId(Gorder_by? providerUserId) =>
      _$this._providerUserId = providerUserId;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserProviders_max_order_byBuilder();

  GauthUserProviders_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_max_order_by;
  }

  @override
  void update(void Function(GauthUserProviders_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_max_order_by build() => _build();

  _$GauthUserProviders_max_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserProviders_max_order_by._(
            accessToken: accessToken,
            createdAt: createdAt,
            id: id,
            providerId: providerId,
            providerUserId: providerUserId,
            refreshToken: refreshToken,
            updatedAt: updatedAt,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_min_order_by
    extends GauthUserProviders_min_order_by {
  @override
  final Gorder_by? accessToken;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? providerId;
  @override
  final Gorder_by? providerUserId;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gorder_by? userId;

  factory _$GauthUserProviders_min_order_by(
          [void Function(GauthUserProviders_min_order_byBuilder)? updates]) =>
      (new GauthUserProviders_min_order_byBuilder()..update(updates))._build();

  _$GauthUserProviders_min_order_by._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.userId})
      : super._();

  @override
  GauthUserProviders_min_order_by rebuild(
          void Function(GauthUserProviders_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_min_order_byBuilder toBuilder() =>
      new GauthUserProviders_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_min_order_by &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, accessToken.hashCode),
                                createdAt.hashCode),
                            id.hashCode),
                        providerId.hashCode),
                    providerUserId.hashCode),
                refreshToken.hashCode),
            updatedAt.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_min_order_by')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_min_order_byBuilder
    implements
        Builder<GauthUserProviders_min_order_by,
            GauthUserProviders_min_order_byBuilder> {
  _$GauthUserProviders_min_order_by? _$v;

  Gorder_by? _accessToken;
  Gorder_by? get accessToken => _$this._accessToken;
  set accessToken(Gorder_by? accessToken) => _$this._accessToken = accessToken;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _providerId;
  Gorder_by? get providerId => _$this._providerId;
  set providerId(Gorder_by? providerId) => _$this._providerId = providerId;

  Gorder_by? _providerUserId;
  Gorder_by? get providerUserId => _$this._providerUserId;
  set providerUserId(Gorder_by? providerUserId) =>
      _$this._providerUserId = providerUserId;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserProviders_min_order_byBuilder();

  GauthUserProviders_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_min_order_by;
  }

  @override
  void update(void Function(GauthUserProviders_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_min_order_by build() => _build();

  _$GauthUserProviders_min_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserProviders_min_order_by._(
            accessToken: accessToken,
            createdAt: createdAt,
            id: id,
            providerId: providerId,
            providerUserId: providerUserId,
            refreshToken: refreshToken,
            updatedAt: updatedAt,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_on_conflict extends GauthUserProviders_on_conflict {
  @override
  final GauthUserProviders_constraint constraint;
  @override
  final BuiltList<GauthUserProviders_update_column> update_columns;
  @override
  final GauthUserProviders_bool_exp? where;

  factory _$GauthUserProviders_on_conflict(
          [void Function(GauthUserProviders_on_conflictBuilder)? updates]) =>
      (new GauthUserProviders_on_conflictBuilder()..update(updates))._build();

  _$GauthUserProviders_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthUserProviders_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthUserProviders_on_conflict', 'update_columns');
  }

  @override
  GauthUserProviders_on_conflict rebuild(
          void Function(GauthUserProviders_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_on_conflictBuilder toBuilder() =>
      new GauthUserProviders_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthUserProviders_on_conflictBuilder
    implements
        Builder<GauthUserProviders_on_conflict,
            GauthUserProviders_on_conflictBuilder> {
  _$GauthUserProviders_on_conflict? _$v;

  GauthUserProviders_constraint? _constraint;
  GauthUserProviders_constraint? get constraint => _$this._constraint;
  set constraint(GauthUserProviders_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthUserProviders_update_column>? _update_columns;
  ListBuilder<GauthUserProviders_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthUserProviders_update_column>();
  set update_columns(
          ListBuilder<GauthUserProviders_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthUserProviders_bool_expBuilder? _where;
  GauthUserProviders_bool_expBuilder get where =>
      _$this._where ??= new GauthUserProviders_bool_expBuilder();
  set where(GauthUserProviders_bool_expBuilder? where) => _$this._where = where;

  GauthUserProviders_on_conflictBuilder();

  GauthUserProviders_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_on_conflict;
  }

  @override
  void update(void Function(GauthUserProviders_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_on_conflict build() => _build();

  _$GauthUserProviders_on_conflict _build() {
    _$GauthUserProviders_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'GauthUserProviders_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_order_by extends GauthUserProviders_order_by {
  @override
  final Gorder_by? accessToken;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final GauthProviders_order_by? provider;
  @override
  final Gorder_by? providerId;
  @override
  final Gorder_by? providerUserId;
  @override
  final Gorder_by? refreshToken;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gusers_order_by? user;
  @override
  final Gorder_by? userId;

  factory _$GauthUserProviders_order_by(
          [void Function(GauthUserProviders_order_byBuilder)? updates]) =>
      (new GauthUserProviders_order_byBuilder()..update(updates))._build();

  _$GauthUserProviders_order_by._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.provider,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserProviders_order_by rebuild(
          void Function(GauthUserProviders_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_order_byBuilder toBuilder() =>
      new GauthUserProviders_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_order_by &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        provider == other.provider &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, accessToken.hashCode),
                                        createdAt.hashCode),
                                    id.hashCode),
                                provider.hashCode),
                            providerId.hashCode),
                        providerUserId.hashCode),
                    refreshToken.hashCode),
                updatedAt.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_order_by')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('provider', provider)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_order_byBuilder
    implements
        Builder<GauthUserProviders_order_by,
            GauthUserProviders_order_byBuilder> {
  _$GauthUserProviders_order_by? _$v;

  Gorder_by? _accessToken;
  Gorder_by? get accessToken => _$this._accessToken;
  set accessToken(Gorder_by? accessToken) => _$this._accessToken = accessToken;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  GauthProviders_order_byBuilder? _provider;
  GauthProviders_order_byBuilder get provider =>
      _$this._provider ??= new GauthProviders_order_byBuilder();
  set provider(GauthProviders_order_byBuilder? provider) =>
      _$this._provider = provider;

  Gorder_by? _providerId;
  Gorder_by? get providerId => _$this._providerId;
  set providerId(Gorder_by? providerId) => _$this._providerId = providerId;

  Gorder_by? _providerUserId;
  Gorder_by? get providerUserId => _$this._providerUserId;
  set providerUserId(Gorder_by? providerUserId) =>
      _$this._providerUserId = providerUserId;

  Gorder_by? _refreshToken;
  Gorder_by? get refreshToken => _$this._refreshToken;
  set refreshToken(Gorder_by? refreshToken) =>
      _$this._refreshToken = refreshToken;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gusers_order_byBuilder? _user;
  Gusers_order_byBuilder get user =>
      _$this._user ??= new Gusers_order_byBuilder();
  set user(Gusers_order_byBuilder? user) => _$this._user = user;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserProviders_order_byBuilder();

  GauthUserProviders_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt;
      _id = $v.id;
      _provider = $v.provider?.toBuilder();
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt;
      _user = $v.user?.toBuilder();
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_order_by;
  }

  @override
  void update(void Function(GauthUserProviders_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_order_by build() => _build();

  _$GauthUserProviders_order_by _build() {
    _$GauthUserProviders_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_order_by._(
              accessToken: accessToken,
              createdAt: createdAt,
              id: id,
              provider: _provider?.build(),
              providerId: providerId,
              providerUserId: providerUserId,
              refreshToken: refreshToken,
              updatedAt: updatedAt,
              user: _user?.build(),
              userId: userId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'provider';
        _provider?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_pk_columns_input
    extends GauthUserProviders_pk_columns_input {
  @override
  final Guuid id;

  factory _$GauthUserProviders_pk_columns_input(
          [void Function(GauthUserProviders_pk_columns_inputBuilder)?
              updates]) =>
      (new GauthUserProviders_pk_columns_inputBuilder()..update(updates))
          ._build();

  _$GauthUserProviders_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GauthUserProviders_pk_columns_input', 'id');
  }

  @override
  GauthUserProviders_pk_columns_input rebuild(
          void Function(GauthUserProviders_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_pk_columns_inputBuilder toBuilder() =>
      new GauthUserProviders_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class GauthUserProviders_pk_columns_inputBuilder
    implements
        Builder<GauthUserProviders_pk_columns_input,
            GauthUserProviders_pk_columns_inputBuilder> {
  _$GauthUserProviders_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  GauthUserProviders_pk_columns_inputBuilder();

  GauthUserProviders_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_pk_columns_input;
  }

  @override
  void update(
      void Function(GauthUserProviders_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_pk_columns_input build() => _build();

  _$GauthUserProviders_pk_columns_input _build() {
    _$GauthUserProviders_pk_columns_input _$result;
    try {
      _$result =
          _$v ?? new _$GauthUserProviders_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_pk_columns_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_set_input extends GauthUserProviders_set_input {
  @override
  final String? accessToken;
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final String? providerId;
  @override
  final String? providerUserId;
  @override
  final String? refreshToken;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Guuid? userId;

  factory _$GauthUserProviders_set_input(
          [void Function(GauthUserProviders_set_inputBuilder)? updates]) =>
      (new GauthUserProviders_set_inputBuilder()..update(updates))._build();

  _$GauthUserProviders_set_input._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.userId})
      : super._();

  @override
  GauthUserProviders_set_input rebuild(
          void Function(GauthUserProviders_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_set_inputBuilder toBuilder() =>
      new GauthUserProviders_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_set_input &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, accessToken.hashCode),
                                createdAt.hashCode),
                            id.hashCode),
                        providerId.hashCode),
                    providerUserId.hashCode),
                refreshToken.hashCode),
            updatedAt.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_set_input')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_set_inputBuilder
    implements
        Builder<GauthUserProviders_set_input,
            GauthUserProviders_set_inputBuilder> {
  _$GauthUserProviders_set_input? _$v;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _providerId;
  String? get providerId => _$this._providerId;
  set providerId(String? providerId) => _$this._providerId = providerId;

  String? _providerUserId;
  String? get providerUserId => _$this._providerUserId;
  set providerUserId(String? providerUserId) =>
      _$this._providerUserId = providerUserId;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserProviders_set_inputBuilder();

  GauthUserProviders_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_set_input;
  }

  @override
  void update(void Function(GauthUserProviders_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_set_input build() => _build();

  _$GauthUserProviders_set_input _build() {
    _$GauthUserProviders_set_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_set_input._(
              accessToken: accessToken,
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              providerId: providerId,
              providerUserId: providerUserId,
              refreshToken: refreshToken,
              updatedAt: _updatedAt?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_stream_cursor_input
    extends GauthUserProviders_stream_cursor_input {
  @override
  final GauthUserProviders_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthUserProviders_stream_cursor_input(
          [void Function(GauthUserProviders_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthUserProviders_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthUserProviders_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(initial_value,
        r'GauthUserProviders_stream_cursor_input', 'initial_value');
  }

  @override
  GauthUserProviders_stream_cursor_input rebuild(
          void Function(GauthUserProviders_stream_cursor_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_stream_cursor_inputBuilder toBuilder() =>
      new GauthUserProviders_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthUserProviders_stream_cursor_inputBuilder
    implements
        Builder<GauthUserProviders_stream_cursor_input,
            GauthUserProviders_stream_cursor_inputBuilder> {
  _$GauthUserProviders_stream_cursor_input? _$v;

  GauthUserProviders_stream_cursor_value_inputBuilder? _initial_value;
  GauthUserProviders_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthUserProviders_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthUserProviders_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthUserProviders_stream_cursor_inputBuilder();

  GauthUserProviders_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthUserProviders_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_stream_cursor_input build() => _build();

  _$GauthUserProviders_stream_cursor_input _build() {
    _$GauthUserProviders_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_stream_cursor_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_stream_cursor_value_input
    extends GauthUserProviders_stream_cursor_value_input {
  @override
  final String? accessToken;
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final String? providerId;
  @override
  final String? providerUserId;
  @override
  final String? refreshToken;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Guuid? userId;

  factory _$GauthUserProviders_stream_cursor_value_input(
          [void Function(GauthUserProviders_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthUserProviders_stream_cursor_value_inputBuilder()
            ..update(updates))
          ._build();

  _$GauthUserProviders_stream_cursor_value_input._(
      {this.accessToken,
      this.createdAt,
      this.id,
      this.providerId,
      this.providerUserId,
      this.refreshToken,
      this.updatedAt,
      this.userId})
      : super._();

  @override
  GauthUserProviders_stream_cursor_value_input rebuild(
          void Function(GauthUserProviders_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthUserProviders_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_stream_cursor_value_input &&
        accessToken == other.accessToken &&
        createdAt == other.createdAt &&
        id == other.id &&
        providerId == other.providerId &&
        providerUserId == other.providerUserId &&
        refreshToken == other.refreshToken &&
        updatedAt == other.updatedAt &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, accessToken.hashCode),
                                createdAt.hashCode),
                            id.hashCode),
                        providerId.hashCode),
                    providerUserId.hashCode),
                refreshToken.hashCode),
            updatedAt.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserProviders_stream_cursor_value_input')
          ..add('accessToken', accessToken)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('providerId', providerId)
          ..add('providerUserId', providerUserId)
          ..add('refreshToken', refreshToken)
          ..add('updatedAt', updatedAt)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserProviders_stream_cursor_value_inputBuilder
    implements
        Builder<GauthUserProviders_stream_cursor_value_input,
            GauthUserProviders_stream_cursor_value_inputBuilder> {
  _$GauthUserProviders_stream_cursor_value_input? _$v;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _providerId;
  String? get providerId => _$this._providerId;
  set providerId(String? providerId) => _$this._providerId = providerId;

  String? _providerUserId;
  String? get providerUserId => _$this._providerUserId;
  set providerUserId(String? providerUserId) =>
      _$this._providerUserId = providerUserId;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserProviders_stream_cursor_value_inputBuilder();

  GauthUserProviders_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _accessToken = $v.accessToken;
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _providerId = $v.providerId;
      _providerUserId = $v.providerUserId;
      _refreshToken = $v.refreshToken;
      _updatedAt = $v.updatedAt?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthUserProviders_stream_cursor_value_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_stream_cursor_value_input build() => _build();

  _$GauthUserProviders_stream_cursor_value_input _build() {
    _$GauthUserProviders_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_stream_cursor_value_input._(
              accessToken: accessToken,
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              providerId: providerId,
              providerUserId: providerUserId,
              refreshToken: refreshToken,
              updatedAt: _updatedAt?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserProviders_updates extends GauthUserProviders_updates {
  @override
  final GauthUserProviders_set_input? G_set;
  @override
  final GauthUserProviders_bool_exp where;

  factory _$GauthUserProviders_updates(
          [void Function(GauthUserProviders_updatesBuilder)? updates]) =>
      (new GauthUserProviders_updatesBuilder()..update(updates))._build();

  _$GauthUserProviders_updates._({this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthUserProviders_updates', 'where');
  }

  @override
  GauthUserProviders_updates rebuild(
          void Function(GauthUserProviders_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserProviders_updatesBuilder toBuilder() =>
      new GauthUserProviders_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserProviders_updates &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserProviders_updates')
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthUserProviders_updatesBuilder
    implements
        Builder<GauthUserProviders_updates, GauthUserProviders_updatesBuilder> {
  _$GauthUserProviders_updates? _$v;

  GauthUserProviders_set_inputBuilder? _G_set;
  GauthUserProviders_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthUserProviders_set_inputBuilder();
  set G_set(GauthUserProviders_set_inputBuilder? G_set) =>
      _$this._G_set = G_set;

  GauthUserProviders_bool_expBuilder? _where;
  GauthUserProviders_bool_expBuilder get where =>
      _$this._where ??= new GauthUserProviders_bool_expBuilder();
  set where(GauthUserProviders_bool_expBuilder? where) => _$this._where = where;

  GauthUserProviders_updatesBuilder();

  GauthUserProviders_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserProviders_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserProviders_updates;
  }

  @override
  void update(void Function(GauthUserProviders_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserProviders_updates build() => _build();

  _$GauthUserProviders_updates _build() {
    _$GauthUserProviders_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthUserProviders_updates._(
              G_set: _G_set?.build(), where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserProviders_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_aggregate_bool_exp
    extends GauthUserRoles_aggregate_bool_exp {
  @override
  final GauthUserRoles_aggregate_bool_exp_count? count;

  factory _$GauthUserRoles_aggregate_bool_exp(
          [void Function(GauthUserRoles_aggregate_bool_expBuilder)? updates]) =>
      (new GauthUserRoles_aggregate_bool_expBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_aggregate_bool_exp._({this.count}) : super._();

  @override
  GauthUserRoles_aggregate_bool_exp rebuild(
          void Function(GauthUserRoles_aggregate_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_aggregate_bool_expBuilder toBuilder() =>
      new GauthUserRoles_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_aggregate_bool_exp && count == other.count;
  }

  @override
  int get hashCode {
    return $jf($jc(0, count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_aggregate_bool_exp')
          ..add('count', count))
        .toString();
  }
}

class GauthUserRoles_aggregate_bool_expBuilder
    implements
        Builder<GauthUserRoles_aggregate_bool_exp,
            GauthUserRoles_aggregate_bool_expBuilder> {
  _$GauthUserRoles_aggregate_bool_exp? _$v;

  GauthUserRoles_aggregate_bool_exp_countBuilder? _count;
  GauthUserRoles_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??= new GauthUserRoles_aggregate_bool_exp_countBuilder();
  set count(GauthUserRoles_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  GauthUserRoles_aggregate_bool_expBuilder();

  GauthUserRoles_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_aggregate_bool_exp;
  }

  @override
  void update(
      void Function(GauthUserRoles_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_aggregate_bool_exp build() => _build();

  _$GauthUserRoles_aggregate_bool_exp _build() {
    _$GauthUserRoles_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_aggregate_bool_exp._(count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_aggregate_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_aggregate_bool_exp_count
    extends GauthUserRoles_aggregate_bool_exp_count {
  @override
  final BuiltList<GauthUserRoles_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final GauthUserRoles_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$GauthUserRoles_aggregate_bool_exp_count(
          [void Function(GauthUserRoles_aggregate_bool_exp_countBuilder)?
              updates]) =>
      (new GauthUserRoles_aggregate_bool_exp_countBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'GauthUserRoles_aggregate_bool_exp_count', 'predicate');
  }

  @override
  GauthUserRoles_aggregate_bool_exp_count rebuild(
          void Function(GauthUserRoles_aggregate_bool_exp_countBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_aggregate_bool_exp_countBuilder toBuilder() =>
      new GauthUserRoles_aggregate_bool_exp_countBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserRoles_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class GauthUserRoles_aggregate_bool_exp_countBuilder
    implements
        Builder<GauthUserRoles_aggregate_bool_exp_count,
            GauthUserRoles_aggregate_bool_exp_countBuilder> {
  _$GauthUserRoles_aggregate_bool_exp_count? _$v;

  ListBuilder<GauthUserRoles_select_column>? _arguments;
  ListBuilder<GauthUserRoles_select_column> get arguments =>
      _$this._arguments ??= new ListBuilder<GauthUserRoles_select_column>();
  set arguments(ListBuilder<GauthUserRoles_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  GauthUserRoles_bool_expBuilder? _filter;
  GauthUserRoles_bool_expBuilder get filter =>
      _$this._filter ??= new GauthUserRoles_bool_expBuilder();
  set filter(GauthUserRoles_bool_expBuilder? filter) => _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  GauthUserRoles_aggregate_bool_exp_countBuilder();

  GauthUserRoles_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_aggregate_bool_exp_count;
  }

  @override
  void update(
      void Function(GauthUserRoles_aggregate_bool_exp_countBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_aggregate_bool_exp_count build() => _build();

  _$GauthUserRoles_aggregate_bool_exp_count _build() {
    _$GauthUserRoles_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_aggregate_bool_exp_count',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_aggregate_order_by
    extends GauthUserRoles_aggregate_order_by {
  @override
  final Gorder_by? count;
  @override
  final GauthUserRoles_max_order_by? max;
  @override
  final GauthUserRoles_min_order_by? min;

  factory _$GauthUserRoles_aggregate_order_by(
          [void Function(GauthUserRoles_aggregate_order_byBuilder)? updates]) =>
      (new GauthUserRoles_aggregate_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_aggregate_order_by._({this.count, this.max, this.min})
      : super._();

  @override
  GauthUserRoles_aggregate_order_by rebuild(
          void Function(GauthUserRoles_aggregate_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_aggregate_order_byBuilder toBuilder() =>
      new GauthUserRoles_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_aggregate_order_by &&
        count == other.count &&
        max == other.max &&
        min == other.min;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, count.hashCode), max.hashCode), min.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_aggregate_order_by')
          ..add('count', count)
          ..add('max', max)
          ..add('min', min))
        .toString();
  }
}

class GauthUserRoles_aggregate_order_byBuilder
    implements
        Builder<GauthUserRoles_aggregate_order_by,
            GauthUserRoles_aggregate_order_byBuilder> {
  _$GauthUserRoles_aggregate_order_by? _$v;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  GauthUserRoles_max_order_byBuilder? _max;
  GauthUserRoles_max_order_byBuilder get max =>
      _$this._max ??= new GauthUserRoles_max_order_byBuilder();
  set max(GauthUserRoles_max_order_byBuilder? max) => _$this._max = max;

  GauthUserRoles_min_order_byBuilder? _min;
  GauthUserRoles_min_order_byBuilder get min =>
      _$this._min ??= new GauthUserRoles_min_order_byBuilder();
  set min(GauthUserRoles_min_order_byBuilder? min) => _$this._min = min;

  GauthUserRoles_aggregate_order_byBuilder();

  GauthUserRoles_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_aggregate_order_by;
  }

  @override
  void update(
      void Function(GauthUserRoles_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_aggregate_order_by build() => _build();

  _$GauthUserRoles_aggregate_order_by _build() {
    _$GauthUserRoles_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_aggregate_order_by._(
              count: count, max: _max?.build(), min: _min?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_aggregate_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_arr_rel_insert_input
    extends GauthUserRoles_arr_rel_insert_input {
  @override
  final BuiltList<GauthUserRoles_insert_input> data;
  @override
  final GauthUserRoles_on_conflict? on_conflict;

  factory _$GauthUserRoles_arr_rel_insert_input(
          [void Function(GauthUserRoles_arr_rel_insert_inputBuilder)?
              updates]) =>
      (new GauthUserRoles_arr_rel_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_arr_rel_insert_input._(
      {required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthUserRoles_arr_rel_insert_input', 'data');
  }

  @override
  GauthUserRoles_arr_rel_insert_input rebuild(
          void Function(GauthUserRoles_arr_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_arr_rel_insert_inputBuilder toBuilder() =>
      new GauthUserRoles_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthUserRoles_arr_rel_insert_inputBuilder
    implements
        Builder<GauthUserRoles_arr_rel_insert_input,
            GauthUserRoles_arr_rel_insert_inputBuilder> {
  _$GauthUserRoles_arr_rel_insert_input? _$v;

  ListBuilder<GauthUserRoles_insert_input>? _data;
  ListBuilder<GauthUserRoles_insert_input> get data =>
      _$this._data ??= new ListBuilder<GauthUserRoles_insert_input>();
  set data(ListBuilder<GauthUserRoles_insert_input>? data) =>
      _$this._data = data;

  GauthUserRoles_on_conflictBuilder? _on_conflict;
  GauthUserRoles_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthUserRoles_on_conflictBuilder();
  set on_conflict(GauthUserRoles_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthUserRoles_arr_rel_insert_inputBuilder();

  GauthUserRoles_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_arr_rel_insert_input;
  }

  @override
  void update(
      void Function(GauthUserRoles_arr_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_arr_rel_insert_input build() => _build();

  _$GauthUserRoles_arr_rel_insert_input _build() {
    _$GauthUserRoles_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_arr_rel_insert_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_bool_exp extends GauthUserRoles_bool_exp {
  @override
  final BuiltList<GauthUserRoles_bool_exp>? G_and;
  @override
  final GauthUserRoles_bool_exp? G_not;
  @override
  final BuiltList<GauthUserRoles_bool_exp>? G_or;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GString_comparison_exp? role;
  @override
  final GauthRoles_bool_exp? roleByRole;
  @override
  final Gusers_bool_exp? user;
  @override
  final Guuid_comparison_exp? userId;

  factory _$GauthUserRoles_bool_exp(
          [void Function(GauthUserRoles_bool_expBuilder)? updates]) =>
      (new GauthUserRoles_bool_expBuilder()..update(updates))._build();

  _$GauthUserRoles_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.createdAt,
      this.id,
      this.role,
      this.roleByRole,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserRoles_bool_exp rebuild(
          void Function(GauthUserRoles_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_bool_expBuilder toBuilder() =>
      new GauthUserRoles_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        roleByRole == other.roleByRole &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_and.hashCode), G_not.hashCode),
                                G_or.hashCode),
                            createdAt.hashCode),
                        id.hashCode),
                    role.hashCode),
                roleByRole.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('roleByRole', roleByRole)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_bool_expBuilder
    implements
        Builder<GauthUserRoles_bool_exp, GauthUserRoles_bool_expBuilder> {
  _$GauthUserRoles_bool_exp? _$v;

  ListBuilder<GauthUserRoles_bool_exp>? _G_and;
  ListBuilder<GauthUserRoles_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthUserRoles_bool_exp>();
  set G_and(ListBuilder<GauthUserRoles_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthUserRoles_bool_expBuilder? _G_not;
  GauthUserRoles_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthUserRoles_bool_expBuilder();
  set G_not(GauthUserRoles_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<GauthUserRoles_bool_exp>? _G_or;
  ListBuilder<GauthUserRoles_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthUserRoles_bool_exp>();
  set G_or(ListBuilder<GauthUserRoles_bool_exp>? G_or) => _$this._G_or = G_or;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GString_comparison_expBuilder? _role;
  GString_comparison_expBuilder get role =>
      _$this._role ??= new GString_comparison_expBuilder();
  set role(GString_comparison_expBuilder? role) => _$this._role = role;

  GauthRoles_bool_expBuilder? _roleByRole;
  GauthRoles_bool_expBuilder get roleByRole =>
      _$this._roleByRole ??= new GauthRoles_bool_expBuilder();
  set roleByRole(GauthRoles_bool_expBuilder? roleByRole) =>
      _$this._roleByRole = roleByRole;

  Gusers_bool_expBuilder? _user;
  Gusers_bool_expBuilder get user =>
      _$this._user ??= new Gusers_bool_expBuilder();
  set user(Gusers_bool_expBuilder? user) => _$this._user = user;

  Guuid_comparison_expBuilder? _userId;
  Guuid_comparison_expBuilder get userId =>
      _$this._userId ??= new Guuid_comparison_expBuilder();
  set userId(Guuid_comparison_expBuilder? userId) => _$this._userId = userId;

  GauthUserRoles_bool_expBuilder();

  GauthUserRoles_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _role = $v.role?.toBuilder();
      _roleByRole = $v.roleByRole?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_bool_exp;
  }

  @override
  void update(void Function(GauthUserRoles_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_bool_exp build() => _build();

  _$GauthUserRoles_bool_exp _build() {
    _$GauthUserRoles_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              role: _role?.build(),
              roleByRole: _roleByRole?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'role';
        _role?.build();
        _$failedField = 'roleByRole';
        _roleByRole?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_insert_input extends GauthUserRoles_insert_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final String? role;
  @override
  final GauthRoles_obj_rel_insert_input? roleByRole;
  @override
  final Gusers_obj_rel_insert_input? user;
  @override
  final Guuid? userId;

  factory _$GauthUserRoles_insert_input(
          [void Function(GauthUserRoles_insert_inputBuilder)? updates]) =>
      (new GauthUserRoles_insert_inputBuilder()..update(updates))._build();

  _$GauthUserRoles_insert_input._(
      {this.createdAt,
      this.id,
      this.role,
      this.roleByRole,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserRoles_insert_input rebuild(
          void Function(GauthUserRoles_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_insert_inputBuilder toBuilder() =>
      new GauthUserRoles_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_insert_input &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        roleByRole == other.roleByRole &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, createdAt.hashCode), id.hashCode),
                    role.hashCode),
                roleByRole.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_insert_input')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('roleByRole', roleByRole)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_insert_inputBuilder
    implements
        Builder<GauthUserRoles_insert_input,
            GauthUserRoles_insert_inputBuilder> {
  _$GauthUserRoles_insert_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GauthRoles_obj_rel_insert_inputBuilder? _roleByRole;
  GauthRoles_obj_rel_insert_inputBuilder get roleByRole =>
      _$this._roleByRole ??= new GauthRoles_obj_rel_insert_inputBuilder();
  set roleByRole(GauthRoles_obj_rel_insert_inputBuilder? roleByRole) =>
      _$this._roleByRole = roleByRole;

  Gusers_obj_rel_insert_inputBuilder? _user;
  Gusers_obj_rel_insert_inputBuilder get user =>
      _$this._user ??= new Gusers_obj_rel_insert_inputBuilder();
  set user(Gusers_obj_rel_insert_inputBuilder? user) => _$this._user = user;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserRoles_insert_inputBuilder();

  GauthUserRoles_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _role = $v.role;
      _roleByRole = $v.roleByRole?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_insert_input;
  }

  @override
  void update(void Function(GauthUserRoles_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_insert_input build() => _build();

  _$GauthUserRoles_insert_input _build() {
    _$GauthUserRoles_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_insert_input._(
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              role: role,
              roleByRole: _roleByRole?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'roleByRole';
        _roleByRole?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_max_order_by extends GauthUserRoles_max_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? role;
  @override
  final Gorder_by? userId;

  factory _$GauthUserRoles_max_order_by(
          [void Function(GauthUserRoles_max_order_byBuilder)? updates]) =>
      (new GauthUserRoles_max_order_byBuilder()..update(updates))._build();

  _$GauthUserRoles_max_order_by._(
      {this.createdAt, this.id, this.role, this.userId})
      : super._();

  @override
  GauthUserRoles_max_order_by rebuild(
          void Function(GauthUserRoles_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_max_order_byBuilder toBuilder() =>
      new GauthUserRoles_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_max_order_by &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), id.hashCode), role.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_max_order_by')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_max_order_byBuilder
    implements
        Builder<GauthUserRoles_max_order_by,
            GauthUserRoles_max_order_byBuilder> {
  _$GauthUserRoles_max_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _role;
  Gorder_by? get role => _$this._role;
  set role(Gorder_by? role) => _$this._role = role;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserRoles_max_order_byBuilder();

  GauthUserRoles_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _id = $v.id;
      _role = $v.role;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_max_order_by;
  }

  @override
  void update(void Function(GauthUserRoles_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_max_order_by build() => _build();

  _$GauthUserRoles_max_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserRoles_max_order_by._(
            createdAt: createdAt, id: id, role: role, userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_min_order_by extends GauthUserRoles_min_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? role;
  @override
  final Gorder_by? userId;

  factory _$GauthUserRoles_min_order_by(
          [void Function(GauthUserRoles_min_order_byBuilder)? updates]) =>
      (new GauthUserRoles_min_order_byBuilder()..update(updates))._build();

  _$GauthUserRoles_min_order_by._(
      {this.createdAt, this.id, this.role, this.userId})
      : super._();

  @override
  GauthUserRoles_min_order_by rebuild(
          void Function(GauthUserRoles_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_min_order_byBuilder toBuilder() =>
      new GauthUserRoles_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_min_order_by &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), id.hashCode), role.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_min_order_by')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_min_order_byBuilder
    implements
        Builder<GauthUserRoles_min_order_by,
            GauthUserRoles_min_order_byBuilder> {
  _$GauthUserRoles_min_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _role;
  Gorder_by? get role => _$this._role;
  set role(Gorder_by? role) => _$this._role = role;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserRoles_min_order_byBuilder();

  GauthUserRoles_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _id = $v.id;
      _role = $v.role;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_min_order_by;
  }

  @override
  void update(void Function(GauthUserRoles_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_min_order_by build() => _build();

  _$GauthUserRoles_min_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserRoles_min_order_by._(
            createdAt: createdAt, id: id, role: role, userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_on_conflict extends GauthUserRoles_on_conflict {
  @override
  final GauthUserRoles_constraint constraint;
  @override
  final BuiltList<GauthUserRoles_update_column> update_columns;
  @override
  final GauthUserRoles_bool_exp? where;

  factory _$GauthUserRoles_on_conflict(
          [void Function(GauthUserRoles_on_conflictBuilder)? updates]) =>
      (new GauthUserRoles_on_conflictBuilder()..update(updates))._build();

  _$GauthUserRoles_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthUserRoles_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthUserRoles_on_conflict', 'update_columns');
  }

  @override
  GauthUserRoles_on_conflict rebuild(
          void Function(GauthUserRoles_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_on_conflictBuilder toBuilder() =>
      new GauthUserRoles_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthUserRoles_on_conflictBuilder
    implements
        Builder<GauthUserRoles_on_conflict, GauthUserRoles_on_conflictBuilder> {
  _$GauthUserRoles_on_conflict? _$v;

  GauthUserRoles_constraint? _constraint;
  GauthUserRoles_constraint? get constraint => _$this._constraint;
  set constraint(GauthUserRoles_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthUserRoles_update_column>? _update_columns;
  ListBuilder<GauthUserRoles_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthUserRoles_update_column>();
  set update_columns(
          ListBuilder<GauthUserRoles_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthUserRoles_bool_expBuilder? _where;
  GauthUserRoles_bool_expBuilder get where =>
      _$this._where ??= new GauthUserRoles_bool_expBuilder();
  set where(GauthUserRoles_bool_expBuilder? where) => _$this._where = where;

  GauthUserRoles_on_conflictBuilder();

  GauthUserRoles_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_on_conflict;
  }

  @override
  void update(void Function(GauthUserRoles_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_on_conflict build() => _build();

  _$GauthUserRoles_on_conflict _build() {
    _$GauthUserRoles_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'GauthUserRoles_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_order_by extends GauthUserRoles_order_by {
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? role;
  @override
  final GauthRoles_order_by? roleByRole;
  @override
  final Gusers_order_by? user;
  @override
  final Gorder_by? userId;

  factory _$GauthUserRoles_order_by(
          [void Function(GauthUserRoles_order_byBuilder)? updates]) =>
      (new GauthUserRoles_order_byBuilder()..update(updates))._build();

  _$GauthUserRoles_order_by._(
      {this.createdAt,
      this.id,
      this.role,
      this.roleByRole,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserRoles_order_by rebuild(
          void Function(GauthUserRoles_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_order_byBuilder toBuilder() =>
      new GauthUserRoles_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_order_by &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        roleByRole == other.roleByRole &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, createdAt.hashCode), id.hashCode),
                    role.hashCode),
                roleByRole.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_order_by')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('roleByRole', roleByRole)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_order_byBuilder
    implements
        Builder<GauthUserRoles_order_by, GauthUserRoles_order_byBuilder> {
  _$GauthUserRoles_order_by? _$v;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _role;
  Gorder_by? get role => _$this._role;
  set role(Gorder_by? role) => _$this._role = role;

  GauthRoles_order_byBuilder? _roleByRole;
  GauthRoles_order_byBuilder get roleByRole =>
      _$this._roleByRole ??= new GauthRoles_order_byBuilder();
  set roleByRole(GauthRoles_order_byBuilder? roleByRole) =>
      _$this._roleByRole = roleByRole;

  Gusers_order_byBuilder? _user;
  Gusers_order_byBuilder get user =>
      _$this._user ??= new Gusers_order_byBuilder();
  set user(Gusers_order_byBuilder? user) => _$this._user = user;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserRoles_order_byBuilder();

  GauthUserRoles_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt;
      _id = $v.id;
      _role = $v.role;
      _roleByRole = $v.roleByRole?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_order_by;
  }

  @override
  void update(void Function(GauthUserRoles_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_order_by build() => _build();

  _$GauthUserRoles_order_by _build() {
    _$GauthUserRoles_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_order_by._(
              createdAt: createdAt,
              id: id,
              role: role,
              roleByRole: _roleByRole?.build(),
              user: _user?.build(),
              userId: userId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'roleByRole';
        _roleByRole?.build();
        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_pk_columns_input
    extends GauthUserRoles_pk_columns_input {
  @override
  final Guuid id;

  factory _$GauthUserRoles_pk_columns_input(
          [void Function(GauthUserRoles_pk_columns_inputBuilder)? updates]) =>
      (new GauthUserRoles_pk_columns_inputBuilder()..update(updates))._build();

  _$GauthUserRoles_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GauthUserRoles_pk_columns_input', 'id');
  }

  @override
  GauthUserRoles_pk_columns_input rebuild(
          void Function(GauthUserRoles_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_pk_columns_inputBuilder toBuilder() =>
      new GauthUserRoles_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class GauthUserRoles_pk_columns_inputBuilder
    implements
        Builder<GauthUserRoles_pk_columns_input,
            GauthUserRoles_pk_columns_inputBuilder> {
  _$GauthUserRoles_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  GauthUserRoles_pk_columns_inputBuilder();

  GauthUserRoles_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_pk_columns_input;
  }

  @override
  void update(void Function(GauthUserRoles_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_pk_columns_input build() => _build();

  _$GauthUserRoles_pk_columns_input _build() {
    _$GauthUserRoles_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$GauthUserRoles_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_set_input extends GauthUserRoles_set_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final String? role;
  @override
  final Guuid? userId;

  factory _$GauthUserRoles_set_input(
          [void Function(GauthUserRoles_set_inputBuilder)? updates]) =>
      (new GauthUserRoles_set_inputBuilder()..update(updates))._build();

  _$GauthUserRoles_set_input._(
      {this.createdAt, this.id, this.role, this.userId})
      : super._();

  @override
  GauthUserRoles_set_input rebuild(
          void Function(GauthUserRoles_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_set_inputBuilder toBuilder() =>
      new GauthUserRoles_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_set_input &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), id.hashCode), role.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_set_input')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_set_inputBuilder
    implements
        Builder<GauthUserRoles_set_input, GauthUserRoles_set_inputBuilder> {
  _$GauthUserRoles_set_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserRoles_set_inputBuilder();

  GauthUserRoles_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _role = $v.role;
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_set_input;
  }

  @override
  void update(void Function(GauthUserRoles_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_set_input build() => _build();

  _$GauthUserRoles_set_input _build() {
    _$GauthUserRoles_set_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_set_input._(
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              role: role,
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_stream_cursor_input
    extends GauthUserRoles_stream_cursor_input {
  @override
  final GauthUserRoles_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthUserRoles_stream_cursor_input(
          [void Function(GauthUserRoles_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthUserRoles_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'GauthUserRoles_stream_cursor_input', 'initial_value');
  }

  @override
  GauthUserRoles_stream_cursor_input rebuild(
          void Function(GauthUserRoles_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_stream_cursor_inputBuilder toBuilder() =>
      new GauthUserRoles_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthUserRoles_stream_cursor_inputBuilder
    implements
        Builder<GauthUserRoles_stream_cursor_input,
            GauthUserRoles_stream_cursor_inputBuilder> {
  _$GauthUserRoles_stream_cursor_input? _$v;

  GauthUserRoles_stream_cursor_value_inputBuilder? _initial_value;
  GauthUserRoles_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthUserRoles_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthUserRoles_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthUserRoles_stream_cursor_inputBuilder();

  GauthUserRoles_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthUserRoles_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_stream_cursor_input build() => _build();

  _$GauthUserRoles_stream_cursor_input _build() {
    _$GauthUserRoles_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_stream_cursor_value_input
    extends GauthUserRoles_stream_cursor_value_input {
  @override
  final Gtimestamptz? createdAt;
  @override
  final Guuid? id;
  @override
  final String? role;
  @override
  final Guuid? userId;

  factory _$GauthUserRoles_stream_cursor_value_input(
          [void Function(GauthUserRoles_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthUserRoles_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$GauthUserRoles_stream_cursor_value_input._(
      {this.createdAt, this.id, this.role, this.userId})
      : super._();

  @override
  GauthUserRoles_stream_cursor_value_input rebuild(
          void Function(GauthUserRoles_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthUserRoles_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_stream_cursor_value_input &&
        createdAt == other.createdAt &&
        id == other.id &&
        role == other.role &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, createdAt.hashCode), id.hashCode), role.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserRoles_stream_cursor_value_input')
          ..add('createdAt', createdAt)
          ..add('id', id)
          ..add('role', role)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserRoles_stream_cursor_value_inputBuilder
    implements
        Builder<GauthUserRoles_stream_cursor_value_input,
            GauthUserRoles_stream_cursor_value_inputBuilder> {
  _$GauthUserRoles_stream_cursor_value_input? _$v;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _role;
  String? get role => _$this._role;
  set role(String? role) => _$this._role = role;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserRoles_stream_cursor_value_inputBuilder();

  GauthUserRoles_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _id = $v.id?.toBuilder();
      _role = $v.role;
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthUserRoles_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_stream_cursor_value_input build() => _build();

  _$GauthUserRoles_stream_cursor_value_input _build() {
    _$GauthUserRoles_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_stream_cursor_value_input._(
              createdAt: _createdAt?.build(),
              id: _id?.build(),
              role: role,
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserRoles_updates extends GauthUserRoles_updates {
  @override
  final GauthUserRoles_set_input? G_set;
  @override
  final GauthUserRoles_bool_exp where;

  factory _$GauthUserRoles_updates(
          [void Function(GauthUserRoles_updatesBuilder)? updates]) =>
      (new GauthUserRoles_updatesBuilder()..update(updates))._build();

  _$GauthUserRoles_updates._({this.G_set, required this.where}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthUserRoles_updates', 'where');
  }

  @override
  GauthUserRoles_updates rebuild(
          void Function(GauthUserRoles_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserRoles_updatesBuilder toBuilder() =>
      new GauthUserRoles_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserRoles_updates &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserRoles_updates')
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthUserRoles_updatesBuilder
    implements Builder<GauthUserRoles_updates, GauthUserRoles_updatesBuilder> {
  _$GauthUserRoles_updates? _$v;

  GauthUserRoles_set_inputBuilder? _G_set;
  GauthUserRoles_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthUserRoles_set_inputBuilder();
  set G_set(GauthUserRoles_set_inputBuilder? G_set) => _$this._G_set = G_set;

  GauthUserRoles_bool_expBuilder? _where;
  GauthUserRoles_bool_expBuilder get where =>
      _$this._where ??= new GauthUserRoles_bool_expBuilder();
  set where(GauthUserRoles_bool_expBuilder? where) => _$this._where = where;

  GauthUserRoles_updatesBuilder();

  GauthUserRoles_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserRoles_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserRoles_updates;
  }

  @override
  void update(void Function(GauthUserRoles_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserRoles_updates build() => _build();

  _$GauthUserRoles_updates _build() {
    _$GauthUserRoles_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthUserRoles_updates._(
              G_set: _G_set?.build(), where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserRoles_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_aggregate_bool_exp
    extends GauthUserSecurityKeys_aggregate_bool_exp {
  @override
  final GauthUserSecurityKeys_aggregate_bool_exp_count? count;

  factory _$GauthUserSecurityKeys_aggregate_bool_exp(
          [void Function(GauthUserSecurityKeys_aggregate_bool_expBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_aggregate_bool_expBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_aggregate_bool_exp._({this.count}) : super._();

  @override
  GauthUserSecurityKeys_aggregate_bool_exp rebuild(
          void Function(GauthUserSecurityKeys_aggregate_bool_expBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_aggregate_bool_expBuilder toBuilder() =>
      new GauthUserSecurityKeys_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_aggregate_bool_exp &&
        count == other.count;
  }

  @override
  int get hashCode {
    return $jf($jc(0, count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_aggregate_bool_exp')
          ..add('count', count))
        .toString();
  }
}

class GauthUserSecurityKeys_aggregate_bool_expBuilder
    implements
        Builder<GauthUserSecurityKeys_aggregate_bool_exp,
            GauthUserSecurityKeys_aggregate_bool_expBuilder> {
  _$GauthUserSecurityKeys_aggregate_bool_exp? _$v;

  GauthUserSecurityKeys_aggregate_bool_exp_countBuilder? _count;
  GauthUserSecurityKeys_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??=
          new GauthUserSecurityKeys_aggregate_bool_exp_countBuilder();
  set count(GauthUserSecurityKeys_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  GauthUserSecurityKeys_aggregate_bool_expBuilder();

  GauthUserSecurityKeys_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_aggregate_bool_exp;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_aggregate_bool_exp build() => _build();

  _$GauthUserSecurityKeys_aggregate_bool_exp _build() {
    _$GauthUserSecurityKeys_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_aggregate_bool_exp._(
              count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_aggregate_bool_exp',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_aggregate_bool_exp_count
    extends GauthUserSecurityKeys_aggregate_bool_exp_count {
  @override
  final BuiltList<GauthUserSecurityKeys_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final GauthUserSecurityKeys_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$GauthUserSecurityKeys_aggregate_bool_exp_count(
          [void Function(GauthUserSecurityKeys_aggregate_bool_exp_countBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_aggregate_bool_exp_countBuilder()
            ..update(updates))
          ._build();

  _$GauthUserSecurityKeys_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(predicate,
        r'GauthUserSecurityKeys_aggregate_bool_exp_count', 'predicate');
  }

  @override
  GauthUserSecurityKeys_aggregate_bool_exp_count rebuild(
          void Function(GauthUserSecurityKeys_aggregate_bool_exp_countBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_aggregate_bool_exp_countBuilder toBuilder() =>
      new GauthUserSecurityKeys_aggregate_bool_exp_countBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class GauthUserSecurityKeys_aggregate_bool_exp_countBuilder
    implements
        Builder<GauthUserSecurityKeys_aggregate_bool_exp_count,
            GauthUserSecurityKeys_aggregate_bool_exp_countBuilder> {
  _$GauthUserSecurityKeys_aggregate_bool_exp_count? _$v;

  ListBuilder<GauthUserSecurityKeys_select_column>? _arguments;
  ListBuilder<GauthUserSecurityKeys_select_column> get arguments =>
      _$this._arguments ??=
          new ListBuilder<GauthUserSecurityKeys_select_column>();
  set arguments(ListBuilder<GauthUserSecurityKeys_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  GauthUserSecurityKeys_bool_expBuilder? _filter;
  GauthUserSecurityKeys_bool_expBuilder get filter =>
      _$this._filter ??= new GauthUserSecurityKeys_bool_expBuilder();
  set filter(GauthUserSecurityKeys_bool_expBuilder? filter) =>
      _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  GauthUserSecurityKeys_aggregate_bool_exp_countBuilder();

  GauthUserSecurityKeys_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_aggregate_bool_exp_count;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_aggregate_bool_exp_countBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_aggregate_bool_exp_count build() => _build();

  _$GauthUserSecurityKeys_aggregate_bool_exp_count _build() {
    _$GauthUserSecurityKeys_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_aggregate_bool_exp_count',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_aggregate_order_by
    extends GauthUserSecurityKeys_aggregate_order_by {
  @override
  final GauthUserSecurityKeys_avg_order_by? avg;
  @override
  final Gorder_by? count;
  @override
  final GauthUserSecurityKeys_max_order_by? max;
  @override
  final GauthUserSecurityKeys_min_order_by? min;
  @override
  final GauthUserSecurityKeys_stddev_order_by? stddev;
  @override
  final GauthUserSecurityKeys_stddev_pop_order_by? stddev_pop;
  @override
  final GauthUserSecurityKeys_stddev_samp_order_by? stddev_samp;
  @override
  final GauthUserSecurityKeys_sum_order_by? sum;
  @override
  final GauthUserSecurityKeys_var_pop_order_by? var_pop;
  @override
  final GauthUserSecurityKeys_var_samp_order_by? var_samp;
  @override
  final GauthUserSecurityKeys_variance_order_by? variance;

  factory _$GauthUserSecurityKeys_aggregate_order_by(
          [void Function(GauthUserSecurityKeys_aggregate_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_aggregate_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_aggregate_order_by._(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance})
      : super._();

  @override
  GauthUserSecurityKeys_aggregate_order_by rebuild(
          void Function(GauthUserSecurityKeys_aggregate_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_aggregate_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_aggregate_order_by &&
        avg == other.avg &&
        count == other.count &&
        max == other.max &&
        min == other.min &&
        stddev == other.stddev &&
        stddev_pop == other.stddev_pop &&
        stddev_samp == other.stddev_samp &&
        sum == other.sum &&
        var_pop == other.var_pop &&
        var_samp == other.var_samp &&
        variance == other.variance;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, avg.hashCode),
                                            count.hashCode),
                                        max.hashCode),
                                    min.hashCode),
                                stddev.hashCode),
                            stddev_pop.hashCode),
                        stddev_samp.hashCode),
                    sum.hashCode),
                var_pop.hashCode),
            var_samp.hashCode),
        variance.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_aggregate_order_by')
          ..add('avg', avg)
          ..add('count', count)
          ..add('max', max)
          ..add('min', min)
          ..add('stddev', stddev)
          ..add('stddev_pop', stddev_pop)
          ..add('stddev_samp', stddev_samp)
          ..add('sum', sum)
          ..add('var_pop', var_pop)
          ..add('var_samp', var_samp)
          ..add('variance', variance))
        .toString();
  }
}

class GauthUserSecurityKeys_aggregate_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_aggregate_order_by,
            GauthUserSecurityKeys_aggregate_order_byBuilder> {
  _$GauthUserSecurityKeys_aggregate_order_by? _$v;

  GauthUserSecurityKeys_avg_order_byBuilder? _avg;
  GauthUserSecurityKeys_avg_order_byBuilder get avg =>
      _$this._avg ??= new GauthUserSecurityKeys_avg_order_byBuilder();
  set avg(GauthUserSecurityKeys_avg_order_byBuilder? avg) => _$this._avg = avg;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  GauthUserSecurityKeys_max_order_byBuilder? _max;
  GauthUserSecurityKeys_max_order_byBuilder get max =>
      _$this._max ??= new GauthUserSecurityKeys_max_order_byBuilder();
  set max(GauthUserSecurityKeys_max_order_byBuilder? max) => _$this._max = max;

  GauthUserSecurityKeys_min_order_byBuilder? _min;
  GauthUserSecurityKeys_min_order_byBuilder get min =>
      _$this._min ??= new GauthUserSecurityKeys_min_order_byBuilder();
  set min(GauthUserSecurityKeys_min_order_byBuilder? min) => _$this._min = min;

  GauthUserSecurityKeys_stddev_order_byBuilder? _stddev;
  GauthUserSecurityKeys_stddev_order_byBuilder get stddev =>
      _$this._stddev ??= new GauthUserSecurityKeys_stddev_order_byBuilder();
  set stddev(GauthUserSecurityKeys_stddev_order_byBuilder? stddev) =>
      _$this._stddev = stddev;

  GauthUserSecurityKeys_stddev_pop_order_byBuilder? _stddev_pop;
  GauthUserSecurityKeys_stddev_pop_order_byBuilder get stddev_pop =>
      _$this._stddev_pop ??=
          new GauthUserSecurityKeys_stddev_pop_order_byBuilder();
  set stddev_pop(
          GauthUserSecurityKeys_stddev_pop_order_byBuilder? stddev_pop) =>
      _$this._stddev_pop = stddev_pop;

  GauthUserSecurityKeys_stddev_samp_order_byBuilder? _stddev_samp;
  GauthUserSecurityKeys_stddev_samp_order_byBuilder get stddev_samp =>
      _$this._stddev_samp ??=
          new GauthUserSecurityKeys_stddev_samp_order_byBuilder();
  set stddev_samp(
          GauthUserSecurityKeys_stddev_samp_order_byBuilder? stddev_samp) =>
      _$this._stddev_samp = stddev_samp;

  GauthUserSecurityKeys_sum_order_byBuilder? _sum;
  GauthUserSecurityKeys_sum_order_byBuilder get sum =>
      _$this._sum ??= new GauthUserSecurityKeys_sum_order_byBuilder();
  set sum(GauthUserSecurityKeys_sum_order_byBuilder? sum) => _$this._sum = sum;

  GauthUserSecurityKeys_var_pop_order_byBuilder? _var_pop;
  GauthUserSecurityKeys_var_pop_order_byBuilder get var_pop =>
      _$this._var_pop ??= new GauthUserSecurityKeys_var_pop_order_byBuilder();
  set var_pop(GauthUserSecurityKeys_var_pop_order_byBuilder? var_pop) =>
      _$this._var_pop = var_pop;

  GauthUserSecurityKeys_var_samp_order_byBuilder? _var_samp;
  GauthUserSecurityKeys_var_samp_order_byBuilder get var_samp =>
      _$this._var_samp ??= new GauthUserSecurityKeys_var_samp_order_byBuilder();
  set var_samp(GauthUserSecurityKeys_var_samp_order_byBuilder? var_samp) =>
      _$this._var_samp = var_samp;

  GauthUserSecurityKeys_variance_order_byBuilder? _variance;
  GauthUserSecurityKeys_variance_order_byBuilder get variance =>
      _$this._variance ??= new GauthUserSecurityKeys_variance_order_byBuilder();
  set variance(GauthUserSecurityKeys_variance_order_byBuilder? variance) =>
      _$this._variance = variance;

  GauthUserSecurityKeys_aggregate_order_byBuilder();

  GauthUserSecurityKeys_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _avg = $v.avg?.toBuilder();
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _stddev = $v.stddev?.toBuilder();
      _stddev_pop = $v.stddev_pop?.toBuilder();
      _stddev_samp = $v.stddev_samp?.toBuilder();
      _sum = $v.sum?.toBuilder();
      _var_pop = $v.var_pop?.toBuilder();
      _var_samp = $v.var_samp?.toBuilder();
      _variance = $v.variance?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_aggregate_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_aggregate_order_by build() => _build();

  _$GauthUserSecurityKeys_aggregate_order_by _build() {
    _$GauthUserSecurityKeys_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_aggregate_order_by._(
              avg: _avg?.build(),
              count: count,
              max: _max?.build(),
              min: _min?.build(),
              stddev: _stddev?.build(),
              stddev_pop: _stddev_pop?.build(),
              stddev_samp: _stddev_samp?.build(),
              sum: _sum?.build(),
              var_pop: _var_pop?.build(),
              var_samp: _var_samp?.build(),
              variance: _variance?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avg';
        _avg?.build();

        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
        _$failedField = 'stddev';
        _stddev?.build();
        _$failedField = 'stddev_pop';
        _stddev_pop?.build();
        _$failedField = 'stddev_samp';
        _stddev_samp?.build();
        _$failedField = 'sum';
        _sum?.build();
        _$failedField = 'var_pop';
        _var_pop?.build();
        _$failedField = 'var_samp';
        _var_samp?.build();
        _$failedField = 'variance';
        _variance?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_aggregate_order_by',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_arr_rel_insert_input
    extends GauthUserSecurityKeys_arr_rel_insert_input {
  @override
  final BuiltList<GauthUserSecurityKeys_insert_input> data;
  @override
  final GauthUserSecurityKeys_on_conflict? on_conflict;

  factory _$GauthUserSecurityKeys_arr_rel_insert_input(
          [void Function(GauthUserSecurityKeys_arr_rel_insert_inputBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_arr_rel_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_arr_rel_insert_input._(
      {required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'GauthUserSecurityKeys_arr_rel_insert_input', 'data');
  }

  @override
  GauthUserSecurityKeys_arr_rel_insert_input rebuild(
          void Function(GauthUserSecurityKeys_arr_rel_insert_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_arr_rel_insert_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class GauthUserSecurityKeys_arr_rel_insert_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_arr_rel_insert_input,
            GauthUserSecurityKeys_arr_rel_insert_inputBuilder> {
  _$GauthUserSecurityKeys_arr_rel_insert_input? _$v;

  ListBuilder<GauthUserSecurityKeys_insert_input>? _data;
  ListBuilder<GauthUserSecurityKeys_insert_input> get data =>
      _$this._data ??= new ListBuilder<GauthUserSecurityKeys_insert_input>();
  set data(ListBuilder<GauthUserSecurityKeys_insert_input>? data) =>
      _$this._data = data;

  GauthUserSecurityKeys_on_conflictBuilder? _on_conflict;
  GauthUserSecurityKeys_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new GauthUserSecurityKeys_on_conflictBuilder();
  set on_conflict(GauthUserSecurityKeys_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  GauthUserSecurityKeys_arr_rel_insert_inputBuilder();

  GauthUserSecurityKeys_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_arr_rel_insert_input;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_arr_rel_insert_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_arr_rel_insert_input build() => _build();

  _$GauthUserSecurityKeys_arr_rel_insert_input _build() {
    _$GauthUserSecurityKeys_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_arr_rel_insert_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_avg_order_by
    extends GauthUserSecurityKeys_avg_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_avg_order_by(
          [void Function(GauthUserSecurityKeys_avg_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_avg_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_avg_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_avg_order_by rebuild(
          void Function(GauthUserSecurityKeys_avg_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_avg_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_avg_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_avg_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_avg_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_avg_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_avg_order_by,
            GauthUserSecurityKeys_avg_order_byBuilder> {
  _$GauthUserSecurityKeys_avg_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_avg_order_byBuilder();

  GauthUserSecurityKeys_avg_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_avg_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_avg_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_avg_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_avg_order_by build() => _build();

  _$GauthUserSecurityKeys_avg_order_by _build() {
    final _$result =
        _$v ?? new _$GauthUserSecurityKeys_avg_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_bool_exp extends GauthUserSecurityKeys_bool_exp {
  @override
  final BuiltList<GauthUserSecurityKeys_bool_exp>? G_and;
  @override
  final GauthUserSecurityKeys_bool_exp? G_not;
  @override
  final BuiltList<GauthUserSecurityKeys_bool_exp>? G_or;
  @override
  final Gbigint_comparison_exp? counter;
  @override
  final GString_comparison_exp? credentialId;
  @override
  final Gbytea_comparison_exp? credentialPublicKey;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GString_comparison_exp? nickname;
  @override
  final GString_comparison_exp? transports;
  @override
  final Gusers_bool_exp? user;
  @override
  final Guuid_comparison_exp? userId;

  factory _$GauthUserSecurityKeys_bool_exp(
          [void Function(GauthUserSecurityKeys_bool_expBuilder)? updates]) =>
      (new GauthUserSecurityKeys_bool_expBuilder()..update(updates))._build();

  _$GauthUserSecurityKeys_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.counter,
      this.credentialId,
      this.credentialPublicKey,
      this.id,
      this.nickname,
      this.transports,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_bool_exp rebuild(
          void Function(GauthUserSecurityKeys_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_bool_expBuilder toBuilder() =>
      new GauthUserSecurityKeys_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        credentialPublicKey == other.credentialPublicKey &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, G_and.hashCode),
                                            G_not.hashCode),
                                        G_or.hashCode),
                                    counter.hashCode),
                                credentialId.hashCode),
                            credentialPublicKey.hashCode),
                        id.hashCode),
                    nickname.hashCode),
                transports.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('credentialPublicKey', credentialPublicKey)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_bool_expBuilder
    implements
        Builder<GauthUserSecurityKeys_bool_exp,
            GauthUserSecurityKeys_bool_expBuilder> {
  _$GauthUserSecurityKeys_bool_exp? _$v;

  ListBuilder<GauthUserSecurityKeys_bool_exp>? _G_and;
  ListBuilder<GauthUserSecurityKeys_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<GauthUserSecurityKeys_bool_exp>();
  set G_and(ListBuilder<GauthUserSecurityKeys_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  GauthUserSecurityKeys_bool_expBuilder? _G_not;
  GauthUserSecurityKeys_bool_expBuilder get G_not =>
      _$this._G_not ??= new GauthUserSecurityKeys_bool_expBuilder();
  set G_not(GauthUserSecurityKeys_bool_expBuilder? G_not) =>
      _$this._G_not = G_not;

  ListBuilder<GauthUserSecurityKeys_bool_exp>? _G_or;
  ListBuilder<GauthUserSecurityKeys_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<GauthUserSecurityKeys_bool_exp>();
  set G_or(ListBuilder<GauthUserSecurityKeys_bool_exp>? G_or) =>
      _$this._G_or = G_or;

  Gbigint_comparison_expBuilder? _counter;
  Gbigint_comparison_expBuilder get counter =>
      _$this._counter ??= new Gbigint_comparison_expBuilder();
  set counter(Gbigint_comparison_expBuilder? counter) =>
      _$this._counter = counter;

  GString_comparison_expBuilder? _credentialId;
  GString_comparison_expBuilder get credentialId =>
      _$this._credentialId ??= new GString_comparison_expBuilder();
  set credentialId(GString_comparison_expBuilder? credentialId) =>
      _$this._credentialId = credentialId;

  Gbytea_comparison_expBuilder? _credentialPublicKey;
  Gbytea_comparison_expBuilder get credentialPublicKey =>
      _$this._credentialPublicKey ??= new Gbytea_comparison_expBuilder();
  set credentialPublicKey(Gbytea_comparison_expBuilder? credentialPublicKey) =>
      _$this._credentialPublicKey = credentialPublicKey;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GString_comparison_expBuilder? _nickname;
  GString_comparison_expBuilder get nickname =>
      _$this._nickname ??= new GString_comparison_expBuilder();
  set nickname(GString_comparison_expBuilder? nickname) =>
      _$this._nickname = nickname;

  GString_comparison_expBuilder? _transports;
  GString_comparison_expBuilder get transports =>
      _$this._transports ??= new GString_comparison_expBuilder();
  set transports(GString_comparison_expBuilder? transports) =>
      _$this._transports = transports;

  Gusers_bool_expBuilder? _user;
  Gusers_bool_expBuilder get user =>
      _$this._user ??= new Gusers_bool_expBuilder();
  set user(Gusers_bool_expBuilder? user) => _$this._user = user;

  Guuid_comparison_expBuilder? _userId;
  Guuid_comparison_expBuilder get userId =>
      _$this._userId ??= new Guuid_comparison_expBuilder();
  set userId(Guuid_comparison_expBuilder? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_bool_expBuilder();

  GauthUserSecurityKeys_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _counter = $v.counter?.toBuilder();
      _credentialId = $v.credentialId?.toBuilder();
      _credentialPublicKey = $v.credentialPublicKey?.toBuilder();
      _id = $v.id?.toBuilder();
      _nickname = $v.nickname?.toBuilder();
      _transports = $v.transports?.toBuilder();
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_bool_exp;
  }

  @override
  void update(void Function(GauthUserSecurityKeys_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_bool_exp build() => _build();

  _$GauthUserSecurityKeys_bool_exp _build() {
    _$GauthUserSecurityKeys_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              counter: _counter?.build(),
              credentialId: _credentialId?.build(),
              credentialPublicKey: _credentialPublicKey?.build(),
              id: _id?.build(),
              nickname: _nickname?.build(),
              transports: _transports?.build(),
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'counter';
        _counter?.build();
        _$failedField = 'credentialId';
        _credentialId?.build();
        _$failedField = 'credentialPublicKey';
        _credentialPublicKey?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'nickname';
        _nickname?.build();
        _$failedField = 'transports';
        _transports?.build();
        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_inc_input
    extends GauthUserSecurityKeys_inc_input {
  @override
  final Gbigint? counter;

  factory _$GauthUserSecurityKeys_inc_input(
          [void Function(GauthUserSecurityKeys_inc_inputBuilder)? updates]) =>
      (new GauthUserSecurityKeys_inc_inputBuilder()..update(updates))._build();

  _$GauthUserSecurityKeys_inc_input._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_inc_input rebuild(
          void Function(GauthUserSecurityKeys_inc_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_inc_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_inc_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_inc_input && counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_inc_input')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_inc_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_inc_input,
            GauthUserSecurityKeys_inc_inputBuilder> {
  _$GauthUserSecurityKeys_inc_input? _$v;

  GbigintBuilder? _counter;
  GbigintBuilder get counter => _$this._counter ??= new GbigintBuilder();
  set counter(GbigintBuilder? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_inc_inputBuilder();

  GauthUserSecurityKeys_inc_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_inc_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_inc_input;
  }

  @override
  void update(void Function(GauthUserSecurityKeys_inc_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_inc_input build() => _build();

  _$GauthUserSecurityKeys_inc_input _build() {
    _$GauthUserSecurityKeys_inc_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_inc_input._(counter: _counter?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'counter';
        _counter?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_inc_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_insert_input
    extends GauthUserSecurityKeys_insert_input {
  @override
  final Gbigint? counter;
  @override
  final String? credentialId;
  @override
  final Gbytea? credentialPublicKey;
  @override
  final Guuid? id;
  @override
  final String? nickname;
  @override
  final String? transports;
  @override
  final Gusers_obj_rel_insert_input? user;
  @override
  final Guuid? userId;

  factory _$GauthUserSecurityKeys_insert_input(
          [void Function(GauthUserSecurityKeys_insert_inputBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_insert_inputBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_insert_input._(
      {this.counter,
      this.credentialId,
      this.credentialPublicKey,
      this.id,
      this.nickname,
      this.transports,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_insert_input rebuild(
          void Function(GauthUserSecurityKeys_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_insert_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_insert_input &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        credentialPublicKey == other.credentialPublicKey &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, counter.hashCode),
                                credentialId.hashCode),
                            credentialPublicKey.hashCode),
                        id.hashCode),
                    nickname.hashCode),
                transports.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_insert_input')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('credentialPublicKey', credentialPublicKey)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_insert_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_insert_input,
            GauthUserSecurityKeys_insert_inputBuilder> {
  _$GauthUserSecurityKeys_insert_input? _$v;

  GbigintBuilder? _counter;
  GbigintBuilder get counter => _$this._counter ??= new GbigintBuilder();
  set counter(GbigintBuilder? counter) => _$this._counter = counter;

  String? _credentialId;
  String? get credentialId => _$this._credentialId;
  set credentialId(String? credentialId) => _$this._credentialId = credentialId;

  GbyteaBuilder? _credentialPublicKey;
  GbyteaBuilder get credentialPublicKey =>
      _$this._credentialPublicKey ??= new GbyteaBuilder();
  set credentialPublicKey(GbyteaBuilder? credentialPublicKey) =>
      _$this._credentialPublicKey = credentialPublicKey;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _nickname;
  String? get nickname => _$this._nickname;
  set nickname(String? nickname) => _$this._nickname = nickname;

  String? _transports;
  String? get transports => _$this._transports;
  set transports(String? transports) => _$this._transports = transports;

  Gusers_obj_rel_insert_inputBuilder? _user;
  Gusers_obj_rel_insert_inputBuilder get user =>
      _$this._user ??= new Gusers_obj_rel_insert_inputBuilder();
  set user(Gusers_obj_rel_insert_inputBuilder? user) => _$this._user = user;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_insert_inputBuilder();

  GauthUserSecurityKeys_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter?.toBuilder();
      _credentialId = $v.credentialId;
      _credentialPublicKey = $v.credentialPublicKey?.toBuilder();
      _id = $v.id?.toBuilder();
      _nickname = $v.nickname;
      _transports = $v.transports;
      _user = $v.user?.toBuilder();
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_insert_input;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_insert_input build() => _build();

  _$GauthUserSecurityKeys_insert_input _build() {
    _$GauthUserSecurityKeys_insert_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_insert_input._(
              counter: _counter?.build(),
              credentialId: credentialId,
              credentialPublicKey: _credentialPublicKey?.build(),
              id: _id?.build(),
              nickname: nickname,
              transports: transports,
              user: _user?.build(),
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'counter';
        _counter?.build();

        _$failedField = 'credentialPublicKey';
        _credentialPublicKey?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'user';
        _user?.build();
        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_max_order_by
    extends GauthUserSecurityKeys_max_order_by {
  @override
  final Gorder_by? counter;
  @override
  final Gorder_by? credentialId;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? nickname;
  @override
  final Gorder_by? transports;
  @override
  final Gorder_by? userId;

  factory _$GauthUserSecurityKeys_max_order_by(
          [void Function(GauthUserSecurityKeys_max_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_max_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_max_order_by._(
      {this.counter,
      this.credentialId,
      this.id,
      this.nickname,
      this.transports,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_max_order_by rebuild(
          void Function(GauthUserSecurityKeys_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_max_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_max_order_by &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, counter.hashCode), credentialId.hashCode),
                    id.hashCode),
                nickname.hashCode),
            transports.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_max_order_by')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_max_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_max_order_by,
            GauthUserSecurityKeys_max_order_byBuilder> {
  _$GauthUserSecurityKeys_max_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  Gorder_by? _credentialId;
  Gorder_by? get credentialId => _$this._credentialId;
  set credentialId(Gorder_by? credentialId) =>
      _$this._credentialId = credentialId;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _nickname;
  Gorder_by? get nickname => _$this._nickname;
  set nickname(Gorder_by? nickname) => _$this._nickname = nickname;

  Gorder_by? _transports;
  Gorder_by? get transports => _$this._transports;
  set transports(Gorder_by? transports) => _$this._transports = transports;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_max_order_byBuilder();

  GauthUserSecurityKeys_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _credentialId = $v.credentialId;
      _id = $v.id;
      _nickname = $v.nickname;
      _transports = $v.transports;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_max_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_max_order_by build() => _build();

  _$GauthUserSecurityKeys_max_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_max_order_by._(
            counter: counter,
            credentialId: credentialId,
            id: id,
            nickname: nickname,
            transports: transports,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_min_order_by
    extends GauthUserSecurityKeys_min_order_by {
  @override
  final Gorder_by? counter;
  @override
  final Gorder_by? credentialId;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? nickname;
  @override
  final Gorder_by? transports;
  @override
  final Gorder_by? userId;

  factory _$GauthUserSecurityKeys_min_order_by(
          [void Function(GauthUserSecurityKeys_min_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_min_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_min_order_by._(
      {this.counter,
      this.credentialId,
      this.id,
      this.nickname,
      this.transports,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_min_order_by rebuild(
          void Function(GauthUserSecurityKeys_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_min_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_min_order_by &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, counter.hashCode), credentialId.hashCode),
                    id.hashCode),
                nickname.hashCode),
            transports.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_min_order_by')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_min_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_min_order_by,
            GauthUserSecurityKeys_min_order_byBuilder> {
  _$GauthUserSecurityKeys_min_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  Gorder_by? _credentialId;
  Gorder_by? get credentialId => _$this._credentialId;
  set credentialId(Gorder_by? credentialId) =>
      _$this._credentialId = credentialId;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _nickname;
  Gorder_by? get nickname => _$this._nickname;
  set nickname(Gorder_by? nickname) => _$this._nickname = nickname;

  Gorder_by? _transports;
  Gorder_by? get transports => _$this._transports;
  set transports(Gorder_by? transports) => _$this._transports = transports;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_min_order_byBuilder();

  GauthUserSecurityKeys_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _credentialId = $v.credentialId;
      _id = $v.id;
      _nickname = $v.nickname;
      _transports = $v.transports;
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_min_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_min_order_by build() => _build();

  _$GauthUserSecurityKeys_min_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_min_order_by._(
            counter: counter,
            credentialId: credentialId,
            id: id,
            nickname: nickname,
            transports: transports,
            userId: userId);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_on_conflict
    extends GauthUserSecurityKeys_on_conflict {
  @override
  final GauthUserSecurityKeys_constraint constraint;
  @override
  final BuiltList<GauthUserSecurityKeys_update_column> update_columns;
  @override
  final GauthUserSecurityKeys_bool_exp? where;

  factory _$GauthUserSecurityKeys_on_conflict(
          [void Function(GauthUserSecurityKeys_on_conflictBuilder)? updates]) =>
      (new GauthUserSecurityKeys_on_conflictBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'GauthUserSecurityKeys_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'GauthUserSecurityKeys_on_conflict', 'update_columns');
  }

  @override
  GauthUserSecurityKeys_on_conflict rebuild(
          void Function(GauthUserSecurityKeys_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_on_conflictBuilder toBuilder() =>
      new GauthUserSecurityKeys_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class GauthUserSecurityKeys_on_conflictBuilder
    implements
        Builder<GauthUserSecurityKeys_on_conflict,
            GauthUserSecurityKeys_on_conflictBuilder> {
  _$GauthUserSecurityKeys_on_conflict? _$v;

  GauthUserSecurityKeys_constraint? _constraint;
  GauthUserSecurityKeys_constraint? get constraint => _$this._constraint;
  set constraint(GauthUserSecurityKeys_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<GauthUserSecurityKeys_update_column>? _update_columns;
  ListBuilder<GauthUserSecurityKeys_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<GauthUserSecurityKeys_update_column>();
  set update_columns(
          ListBuilder<GauthUserSecurityKeys_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  GauthUserSecurityKeys_bool_expBuilder? _where;
  GauthUserSecurityKeys_bool_expBuilder get where =>
      _$this._where ??= new GauthUserSecurityKeys_bool_expBuilder();
  set where(GauthUserSecurityKeys_bool_expBuilder? where) =>
      _$this._where = where;

  GauthUserSecurityKeys_on_conflictBuilder();

  GauthUserSecurityKeys_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_on_conflict;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_on_conflict build() => _build();

  _$GauthUserSecurityKeys_on_conflict _build() {
    _$GauthUserSecurityKeys_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(constraint,
                  r'GauthUserSecurityKeys_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_order_by extends GauthUserSecurityKeys_order_by {
  @override
  final Gorder_by? counter;
  @override
  final Gorder_by? credentialId;
  @override
  final Gorder_by? credentialPublicKey;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? nickname;
  @override
  final Gorder_by? transports;
  @override
  final Gusers_order_by? user;
  @override
  final Gorder_by? userId;

  factory _$GauthUserSecurityKeys_order_by(
          [void Function(GauthUserSecurityKeys_order_byBuilder)? updates]) =>
      (new GauthUserSecurityKeys_order_byBuilder()..update(updates))._build();

  _$GauthUserSecurityKeys_order_by._(
      {this.counter,
      this.credentialId,
      this.credentialPublicKey,
      this.id,
      this.nickname,
      this.transports,
      this.user,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_order_by rebuild(
          void Function(GauthUserSecurityKeys_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_order_by &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        credentialPublicKey == other.credentialPublicKey &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        user == other.user &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, counter.hashCode),
                                credentialId.hashCode),
                            credentialPublicKey.hashCode),
                        id.hashCode),
                    nickname.hashCode),
                transports.hashCode),
            user.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_order_by')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('credentialPublicKey', credentialPublicKey)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('user', user)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_order_by,
            GauthUserSecurityKeys_order_byBuilder> {
  _$GauthUserSecurityKeys_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  Gorder_by? _credentialId;
  Gorder_by? get credentialId => _$this._credentialId;
  set credentialId(Gorder_by? credentialId) =>
      _$this._credentialId = credentialId;

  Gorder_by? _credentialPublicKey;
  Gorder_by? get credentialPublicKey => _$this._credentialPublicKey;
  set credentialPublicKey(Gorder_by? credentialPublicKey) =>
      _$this._credentialPublicKey = credentialPublicKey;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _nickname;
  Gorder_by? get nickname => _$this._nickname;
  set nickname(Gorder_by? nickname) => _$this._nickname = nickname;

  Gorder_by? _transports;
  Gorder_by? get transports => _$this._transports;
  set transports(Gorder_by? transports) => _$this._transports = transports;

  Gusers_order_byBuilder? _user;
  Gusers_order_byBuilder get user =>
      _$this._user ??= new Gusers_order_byBuilder();
  set user(Gusers_order_byBuilder? user) => _$this._user = user;

  Gorder_by? _userId;
  Gorder_by? get userId => _$this._userId;
  set userId(Gorder_by? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_order_byBuilder();

  GauthUserSecurityKeys_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _credentialId = $v.credentialId;
      _credentialPublicKey = $v.credentialPublicKey;
      _id = $v.id;
      _nickname = $v.nickname;
      _transports = $v.transports;
      _user = $v.user?.toBuilder();
      _userId = $v.userId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_order_by;
  }

  @override
  void update(void Function(GauthUserSecurityKeys_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_order_by build() => _build();

  _$GauthUserSecurityKeys_order_by _build() {
    _$GauthUserSecurityKeys_order_by _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_order_by._(
              counter: counter,
              credentialId: credentialId,
              credentialPublicKey: credentialPublicKey,
              id: id,
              nickname: nickname,
              transports: transports,
              user: _user?.build(),
              userId: userId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_pk_columns_input
    extends GauthUserSecurityKeys_pk_columns_input {
  @override
  final Guuid id;

  factory _$GauthUserSecurityKeys_pk_columns_input(
          [void Function(GauthUserSecurityKeys_pk_columns_inputBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_pk_columns_inputBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GauthUserSecurityKeys_pk_columns_input', 'id');
  }

  @override
  GauthUserSecurityKeys_pk_columns_input rebuild(
          void Function(GauthUserSecurityKeys_pk_columns_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_pk_columns_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class GauthUserSecurityKeys_pk_columns_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_pk_columns_input,
            GauthUserSecurityKeys_pk_columns_inputBuilder> {
  _$GauthUserSecurityKeys_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  GauthUserSecurityKeys_pk_columns_inputBuilder();

  GauthUserSecurityKeys_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_pk_columns_input;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_pk_columns_input build() => _build();

  _$GauthUserSecurityKeys_pk_columns_input _build() {
    _$GauthUserSecurityKeys_pk_columns_input _$result;
    try {
      _$result =
          _$v ?? new _$GauthUserSecurityKeys_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_pk_columns_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_set_input
    extends GauthUserSecurityKeys_set_input {
  @override
  final Gbigint? counter;
  @override
  final String? credentialId;
  @override
  final Gbytea? credentialPublicKey;
  @override
  final Guuid? id;
  @override
  final String? nickname;
  @override
  final String? transports;
  @override
  final Guuid? userId;

  factory _$GauthUserSecurityKeys_set_input(
          [void Function(GauthUserSecurityKeys_set_inputBuilder)? updates]) =>
      (new GauthUserSecurityKeys_set_inputBuilder()..update(updates))._build();

  _$GauthUserSecurityKeys_set_input._(
      {this.counter,
      this.credentialId,
      this.credentialPublicKey,
      this.id,
      this.nickname,
      this.transports,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_set_input rebuild(
          void Function(GauthUserSecurityKeys_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_set_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_set_input &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        credentialPublicKey == other.credentialPublicKey &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, counter.hashCode), credentialId.hashCode),
                        credentialPublicKey.hashCode),
                    id.hashCode),
                nickname.hashCode),
            transports.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_set_input')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('credentialPublicKey', credentialPublicKey)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_set_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_set_input,
            GauthUserSecurityKeys_set_inputBuilder> {
  _$GauthUserSecurityKeys_set_input? _$v;

  GbigintBuilder? _counter;
  GbigintBuilder get counter => _$this._counter ??= new GbigintBuilder();
  set counter(GbigintBuilder? counter) => _$this._counter = counter;

  String? _credentialId;
  String? get credentialId => _$this._credentialId;
  set credentialId(String? credentialId) => _$this._credentialId = credentialId;

  GbyteaBuilder? _credentialPublicKey;
  GbyteaBuilder get credentialPublicKey =>
      _$this._credentialPublicKey ??= new GbyteaBuilder();
  set credentialPublicKey(GbyteaBuilder? credentialPublicKey) =>
      _$this._credentialPublicKey = credentialPublicKey;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _nickname;
  String? get nickname => _$this._nickname;
  set nickname(String? nickname) => _$this._nickname = nickname;

  String? _transports;
  String? get transports => _$this._transports;
  set transports(String? transports) => _$this._transports = transports;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_set_inputBuilder();

  GauthUserSecurityKeys_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter?.toBuilder();
      _credentialId = $v.credentialId;
      _credentialPublicKey = $v.credentialPublicKey?.toBuilder();
      _id = $v.id?.toBuilder();
      _nickname = $v.nickname;
      _transports = $v.transports;
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_set_input;
  }

  @override
  void update(void Function(GauthUserSecurityKeys_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_set_input build() => _build();

  _$GauthUserSecurityKeys_set_input _build() {
    _$GauthUserSecurityKeys_set_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_set_input._(
              counter: _counter?.build(),
              credentialId: credentialId,
              credentialPublicKey: _credentialPublicKey?.build(),
              id: _id?.build(),
              nickname: nickname,
              transports: transports,
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'counter';
        _counter?.build();

        _$failedField = 'credentialPublicKey';
        _credentialPublicKey?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_stddev_order_by
    extends GauthUserSecurityKeys_stddev_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_stddev_order_by(
          [void Function(GauthUserSecurityKeys_stddev_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_stddev_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_stddev_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_stddev_order_by rebuild(
          void Function(GauthUserSecurityKeys_stddev_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_stddev_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_stddev_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_stddev_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_stddev_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_stddev_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_stddev_order_by,
            GauthUserSecurityKeys_stddev_order_byBuilder> {
  _$GauthUserSecurityKeys_stddev_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_stddev_order_byBuilder();

  GauthUserSecurityKeys_stddev_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_stddev_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_stddev_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_stddev_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_stddev_order_by build() => _build();

  _$GauthUserSecurityKeys_stddev_order_by _build() {
    final _$result =
        _$v ?? new _$GauthUserSecurityKeys_stddev_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_stddev_pop_order_by
    extends GauthUserSecurityKeys_stddev_pop_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_stddev_pop_order_by(
          [void Function(GauthUserSecurityKeys_stddev_pop_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_stddev_pop_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_stddev_pop_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_stddev_pop_order_by rebuild(
          void Function(GauthUserSecurityKeys_stddev_pop_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_stddev_pop_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_stddev_pop_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_stddev_pop_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_stddev_pop_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_stddev_pop_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_stddev_pop_order_by,
            GauthUserSecurityKeys_stddev_pop_order_byBuilder> {
  _$GauthUserSecurityKeys_stddev_pop_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_stddev_pop_order_byBuilder();

  GauthUserSecurityKeys_stddev_pop_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_stddev_pop_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_stddev_pop_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_stddev_pop_order_byBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_stddev_pop_order_by build() => _build();

  _$GauthUserSecurityKeys_stddev_pop_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_stddev_pop_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_stddev_samp_order_by
    extends GauthUserSecurityKeys_stddev_samp_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_stddev_samp_order_by(
          [void Function(GauthUserSecurityKeys_stddev_samp_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_stddev_samp_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_stddev_samp_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_stddev_samp_order_by rebuild(
          void Function(GauthUserSecurityKeys_stddev_samp_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_stddev_samp_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_stddev_samp_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_stddev_samp_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_stddev_samp_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_stddev_samp_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_stddev_samp_order_by,
            GauthUserSecurityKeys_stddev_samp_order_byBuilder> {
  _$GauthUserSecurityKeys_stddev_samp_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_stddev_samp_order_byBuilder();

  GauthUserSecurityKeys_stddev_samp_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_stddev_samp_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_stddev_samp_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_stddev_samp_order_byBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_stddev_samp_order_by build() => _build();

  _$GauthUserSecurityKeys_stddev_samp_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_stddev_samp_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_stream_cursor_input
    extends GauthUserSecurityKeys_stream_cursor_input {
  @override
  final GauthUserSecurityKeys_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$GauthUserSecurityKeys_stream_cursor_input(
          [void Function(GauthUserSecurityKeys_stream_cursor_inputBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(initial_value,
        r'GauthUserSecurityKeys_stream_cursor_input', 'initial_value');
  }

  @override
  GauthUserSecurityKeys_stream_cursor_input rebuild(
          void Function(GauthUserSecurityKeys_stream_cursor_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_stream_cursor_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class GauthUserSecurityKeys_stream_cursor_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_stream_cursor_input,
            GauthUserSecurityKeys_stream_cursor_inputBuilder> {
  _$GauthUserSecurityKeys_stream_cursor_input? _$v;

  GauthUserSecurityKeys_stream_cursor_value_inputBuilder? _initial_value;
  GauthUserSecurityKeys_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new GauthUserSecurityKeys_stream_cursor_value_inputBuilder();
  set initial_value(
          GauthUserSecurityKeys_stream_cursor_value_inputBuilder?
              initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  GauthUserSecurityKeys_stream_cursor_inputBuilder();

  GauthUserSecurityKeys_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_stream_cursor_input;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_stream_cursor_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_stream_cursor_input build() => _build();

  _$GauthUserSecurityKeys_stream_cursor_input _build() {
    _$GauthUserSecurityKeys_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_stream_cursor_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_stream_cursor_value_input
    extends GauthUserSecurityKeys_stream_cursor_value_input {
  @override
  final Gbigint? counter;
  @override
  final String? credentialId;
  @override
  final Gbytea? credentialPublicKey;
  @override
  final Guuid? id;
  @override
  final String? nickname;
  @override
  final String? transports;
  @override
  final Guuid? userId;

  factory _$GauthUserSecurityKeys_stream_cursor_value_input(
          [void Function(
                  GauthUserSecurityKeys_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_stream_cursor_value_inputBuilder()
            ..update(updates))
          ._build();

  _$GauthUserSecurityKeys_stream_cursor_value_input._(
      {this.counter,
      this.credentialId,
      this.credentialPublicKey,
      this.id,
      this.nickname,
      this.transports,
      this.userId})
      : super._();

  @override
  GauthUserSecurityKeys_stream_cursor_value_input rebuild(
          void Function(GauthUserSecurityKeys_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_stream_cursor_value_inputBuilder toBuilder() =>
      new GauthUserSecurityKeys_stream_cursor_value_inputBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_stream_cursor_value_input &&
        counter == other.counter &&
        credentialId == other.credentialId &&
        credentialPublicKey == other.credentialPublicKey &&
        id == other.id &&
        nickname == other.nickname &&
        transports == other.transports &&
        userId == other.userId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, counter.hashCode), credentialId.hashCode),
                        credentialPublicKey.hashCode),
                    id.hashCode),
                nickname.hashCode),
            transports.hashCode),
        userId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_stream_cursor_value_input')
          ..add('counter', counter)
          ..add('credentialId', credentialId)
          ..add('credentialPublicKey', credentialPublicKey)
          ..add('id', id)
          ..add('nickname', nickname)
          ..add('transports', transports)
          ..add('userId', userId))
        .toString();
  }
}

class GauthUserSecurityKeys_stream_cursor_value_inputBuilder
    implements
        Builder<GauthUserSecurityKeys_stream_cursor_value_input,
            GauthUserSecurityKeys_stream_cursor_value_inputBuilder> {
  _$GauthUserSecurityKeys_stream_cursor_value_input? _$v;

  GbigintBuilder? _counter;
  GbigintBuilder get counter => _$this._counter ??= new GbigintBuilder();
  set counter(GbigintBuilder? counter) => _$this._counter = counter;

  String? _credentialId;
  String? get credentialId => _$this._credentialId;
  set credentialId(String? credentialId) => _$this._credentialId = credentialId;

  GbyteaBuilder? _credentialPublicKey;
  GbyteaBuilder get credentialPublicKey =>
      _$this._credentialPublicKey ??= new GbyteaBuilder();
  set credentialPublicKey(GbyteaBuilder? credentialPublicKey) =>
      _$this._credentialPublicKey = credentialPublicKey;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  String? _nickname;
  String? get nickname => _$this._nickname;
  set nickname(String? nickname) => _$this._nickname = nickname;

  String? _transports;
  String? get transports => _$this._transports;
  set transports(String? transports) => _$this._transports = transports;

  GuuidBuilder? _userId;
  GuuidBuilder get userId => _$this._userId ??= new GuuidBuilder();
  set userId(GuuidBuilder? userId) => _$this._userId = userId;

  GauthUserSecurityKeys_stream_cursor_value_inputBuilder();

  GauthUserSecurityKeys_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter?.toBuilder();
      _credentialId = $v.credentialId;
      _credentialPublicKey = $v.credentialPublicKey?.toBuilder();
      _id = $v.id?.toBuilder();
      _nickname = $v.nickname;
      _transports = $v.transports;
      _userId = $v.userId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_stream_cursor_value_inputBuilder)?
          updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_stream_cursor_value_input build() => _build();

  _$GauthUserSecurityKeys_stream_cursor_value_input _build() {
    _$GauthUserSecurityKeys_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_stream_cursor_value_input._(
              counter: _counter?.build(),
              credentialId: credentialId,
              credentialPublicKey: _credentialPublicKey?.build(),
              id: _id?.build(),
              nickname: nickname,
              transports: transports,
              userId: _userId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'counter';
        _counter?.build();

        _$failedField = 'credentialPublicKey';
        _credentialPublicKey?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'userId';
        _userId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_sum_order_by
    extends GauthUserSecurityKeys_sum_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_sum_order_by(
          [void Function(GauthUserSecurityKeys_sum_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_sum_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_sum_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_sum_order_by rebuild(
          void Function(GauthUserSecurityKeys_sum_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_sum_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_sum_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_sum_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_sum_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_sum_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_sum_order_by,
            GauthUserSecurityKeys_sum_order_byBuilder> {
  _$GauthUserSecurityKeys_sum_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_sum_order_byBuilder();

  GauthUserSecurityKeys_sum_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_sum_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_sum_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_sum_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_sum_order_by build() => _build();

  _$GauthUserSecurityKeys_sum_order_by _build() {
    final _$result =
        _$v ?? new _$GauthUserSecurityKeys_sum_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_updates extends GauthUserSecurityKeys_updates {
  @override
  final GauthUserSecurityKeys_inc_input? G_inc;
  @override
  final GauthUserSecurityKeys_set_input? G_set;
  @override
  final GauthUserSecurityKeys_bool_exp where;

  factory _$GauthUserSecurityKeys_updates(
          [void Function(GauthUserSecurityKeys_updatesBuilder)? updates]) =>
      (new GauthUserSecurityKeys_updatesBuilder()..update(updates))._build();

  _$GauthUserSecurityKeys_updates._(
      {this.G_inc, this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'GauthUserSecurityKeys_updates', 'where');
  }

  @override
  GauthUserSecurityKeys_updates rebuild(
          void Function(GauthUserSecurityKeys_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_updatesBuilder toBuilder() =>
      new GauthUserSecurityKeys_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_updates &&
        G_inc == other.G_inc &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, G_inc.hashCode), G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GauthUserSecurityKeys_updates')
          ..add('G_inc', G_inc)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class GauthUserSecurityKeys_updatesBuilder
    implements
        Builder<GauthUserSecurityKeys_updates,
            GauthUserSecurityKeys_updatesBuilder> {
  _$GauthUserSecurityKeys_updates? _$v;

  GauthUserSecurityKeys_inc_inputBuilder? _G_inc;
  GauthUserSecurityKeys_inc_inputBuilder get G_inc =>
      _$this._G_inc ??= new GauthUserSecurityKeys_inc_inputBuilder();
  set G_inc(GauthUserSecurityKeys_inc_inputBuilder? G_inc) =>
      _$this._G_inc = G_inc;

  GauthUserSecurityKeys_set_inputBuilder? _G_set;
  GauthUserSecurityKeys_set_inputBuilder get G_set =>
      _$this._G_set ??= new GauthUserSecurityKeys_set_inputBuilder();
  set G_set(GauthUserSecurityKeys_set_inputBuilder? G_set) =>
      _$this._G_set = G_set;

  GauthUserSecurityKeys_bool_expBuilder? _where;
  GauthUserSecurityKeys_bool_expBuilder get where =>
      _$this._where ??= new GauthUserSecurityKeys_bool_expBuilder();
  set where(GauthUserSecurityKeys_bool_expBuilder? where) =>
      _$this._where = where;

  GauthUserSecurityKeys_updatesBuilder();

  GauthUserSecurityKeys_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_inc = $v.G_inc?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_updates;
  }

  @override
  void update(void Function(GauthUserSecurityKeys_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_updates build() => _build();

  _$GauthUserSecurityKeys_updates _build() {
    _$GauthUserSecurityKeys_updates _$result;
    try {
      _$result = _$v ??
          new _$GauthUserSecurityKeys_updates._(
              G_inc: _G_inc?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_inc';
        _G_inc?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GauthUserSecurityKeys_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_var_pop_order_by
    extends GauthUserSecurityKeys_var_pop_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_var_pop_order_by(
          [void Function(GauthUserSecurityKeys_var_pop_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_var_pop_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_var_pop_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_var_pop_order_by rebuild(
          void Function(GauthUserSecurityKeys_var_pop_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_var_pop_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_var_pop_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_var_pop_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_var_pop_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_var_pop_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_var_pop_order_by,
            GauthUserSecurityKeys_var_pop_order_byBuilder> {
  _$GauthUserSecurityKeys_var_pop_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_var_pop_order_byBuilder();

  GauthUserSecurityKeys_var_pop_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_var_pop_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_var_pop_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_var_pop_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_var_pop_order_by build() => _build();

  _$GauthUserSecurityKeys_var_pop_order_by _build() {
    final _$result =
        _$v ?? new _$GauthUserSecurityKeys_var_pop_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_var_samp_order_by
    extends GauthUserSecurityKeys_var_samp_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_var_samp_order_by(
          [void Function(GauthUserSecurityKeys_var_samp_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_var_samp_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_var_samp_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_var_samp_order_by rebuild(
          void Function(GauthUserSecurityKeys_var_samp_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_var_samp_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_var_samp_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_var_samp_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_var_samp_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_var_samp_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_var_samp_order_by,
            GauthUserSecurityKeys_var_samp_order_byBuilder> {
  _$GauthUserSecurityKeys_var_samp_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_var_samp_order_byBuilder();

  GauthUserSecurityKeys_var_samp_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_var_samp_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_var_samp_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_var_samp_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_var_samp_order_by build() => _build();

  _$GauthUserSecurityKeys_var_samp_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_var_samp_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$GauthUserSecurityKeys_variance_order_by
    extends GauthUserSecurityKeys_variance_order_by {
  @override
  final Gorder_by? counter;

  factory _$GauthUserSecurityKeys_variance_order_by(
          [void Function(GauthUserSecurityKeys_variance_order_byBuilder)?
              updates]) =>
      (new GauthUserSecurityKeys_variance_order_byBuilder()..update(updates))
          ._build();

  _$GauthUserSecurityKeys_variance_order_by._({this.counter}) : super._();

  @override
  GauthUserSecurityKeys_variance_order_by rebuild(
          void Function(GauthUserSecurityKeys_variance_order_byBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GauthUserSecurityKeys_variance_order_byBuilder toBuilder() =>
      new GauthUserSecurityKeys_variance_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GauthUserSecurityKeys_variance_order_by &&
        counter == other.counter;
  }

  @override
  int get hashCode {
    return $jf($jc(0, counter.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GauthUserSecurityKeys_variance_order_by')
          ..add('counter', counter))
        .toString();
  }
}

class GauthUserSecurityKeys_variance_order_byBuilder
    implements
        Builder<GauthUserSecurityKeys_variance_order_by,
            GauthUserSecurityKeys_variance_order_byBuilder> {
  _$GauthUserSecurityKeys_variance_order_by? _$v;

  Gorder_by? _counter;
  Gorder_by? get counter => _$this._counter;
  set counter(Gorder_by? counter) => _$this._counter = counter;

  GauthUserSecurityKeys_variance_order_byBuilder();

  GauthUserSecurityKeys_variance_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _counter = $v.counter;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GauthUserSecurityKeys_variance_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GauthUserSecurityKeys_variance_order_by;
  }

  @override
  void update(
      void Function(GauthUserSecurityKeys_variance_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GauthUserSecurityKeys_variance_order_by build() => _build();

  _$GauthUserSecurityKeys_variance_order_by _build() {
    final _$result = _$v ??
        new _$GauthUserSecurityKeys_variance_order_by._(counter: counter);
    replace(_$result);
    return _$result;
  }
}

class _$Gbigint extends Gbigint {
  @override
  final String value;

  factory _$Gbigint([void Function(GbigintBuilder)? updates]) =>
      (new GbigintBuilder()..update(updates))._build();

  _$Gbigint._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'Gbigint', 'value');
  }

  @override
  Gbigint rebuild(void Function(GbigintBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GbigintBuilder toBuilder() => new GbigintBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbigint && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbigint')..add('value', value))
        .toString();
  }
}

class GbigintBuilder implements Builder<Gbigint, GbigintBuilder> {
  _$Gbigint? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GbigintBuilder();

  GbigintBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbigint other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbigint;
  }

  @override
  void update(void Function(GbigintBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbigint build() => _build();

  _$Gbigint _build() {
    final _$result = _$v ??
        new _$Gbigint._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'Gbigint', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$Gbigint_comparison_exp extends Gbigint_comparison_exp {
  @override
  final Gbigint? G_eq;
  @override
  final Gbigint? G_gt;
  @override
  final Gbigint? G_gte;
  @override
  final BuiltList<Gbigint>? G_in;
  @override
  final bool? G_is_null;
  @override
  final Gbigint? G_lt;
  @override
  final Gbigint? G_lte;
  @override
  final Gbigint? G_neq;
  @override
  final BuiltList<Gbigint>? G_nin;

  factory _$Gbigint_comparison_exp(
          [void Function(Gbigint_comparison_expBuilder)? updates]) =>
      (new Gbigint_comparison_expBuilder()..update(updates))._build();

  _$Gbigint_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  Gbigint_comparison_exp rebuild(
          void Function(Gbigint_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbigint_comparison_expBuilder toBuilder() =>
      new Gbigint_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbigint_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbigint_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class Gbigint_comparison_expBuilder
    implements Builder<Gbigint_comparison_exp, Gbigint_comparison_expBuilder> {
  _$Gbigint_comparison_exp? _$v;

  GbigintBuilder? _G_eq;
  GbigintBuilder get G_eq => _$this._G_eq ??= new GbigintBuilder();
  set G_eq(GbigintBuilder? G_eq) => _$this._G_eq = G_eq;

  GbigintBuilder? _G_gt;
  GbigintBuilder get G_gt => _$this._G_gt ??= new GbigintBuilder();
  set G_gt(GbigintBuilder? G_gt) => _$this._G_gt = G_gt;

  GbigintBuilder? _G_gte;
  GbigintBuilder get G_gte => _$this._G_gte ??= new GbigintBuilder();
  set G_gte(GbigintBuilder? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<Gbigint>? _G_in;
  ListBuilder<Gbigint> get G_in => _$this._G_in ??= new ListBuilder<Gbigint>();
  set G_in(ListBuilder<Gbigint>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  GbigintBuilder? _G_lt;
  GbigintBuilder get G_lt => _$this._G_lt ??= new GbigintBuilder();
  set G_lt(GbigintBuilder? G_lt) => _$this._G_lt = G_lt;

  GbigintBuilder? _G_lte;
  GbigintBuilder get G_lte => _$this._G_lte ??= new GbigintBuilder();
  set G_lte(GbigintBuilder? G_lte) => _$this._G_lte = G_lte;

  GbigintBuilder? _G_neq;
  GbigintBuilder get G_neq => _$this._G_neq ??= new GbigintBuilder();
  set G_neq(GbigintBuilder? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<Gbigint>? _G_nin;
  ListBuilder<Gbigint> get G_nin =>
      _$this._G_nin ??= new ListBuilder<Gbigint>();
  set G_nin(ListBuilder<Gbigint>? G_nin) => _$this._G_nin = G_nin;

  Gbigint_comparison_expBuilder();

  Gbigint_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq?.toBuilder();
      _G_gt = $v.G_gt?.toBuilder();
      _G_gte = $v.G_gte?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt?.toBuilder();
      _G_lte = $v.G_lte?.toBuilder();
      _G_neq = $v.G_neq?.toBuilder();
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbigint_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbigint_comparison_exp;
  }

  @override
  void update(void Function(Gbigint_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbigint_comparison_exp build() => _build();

  _$Gbigint_comparison_exp _build() {
    _$Gbigint_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Gbigint_comparison_exp._(
              G_eq: _G_eq?.build(),
              G_gt: _G_gt?.build(),
              G_gte: _G_gte?.build(),
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: _G_lt?.build(),
              G_lte: _G_lte?.build(),
              G_neq: _G_neq?.build(),
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_eq';
        _G_eq?.build();
        _$failedField = 'G_gt';
        _G_gt?.build();
        _$failedField = 'G_gte';
        _G_gte?.build();
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_lt';
        _G_lt?.build();
        _$failedField = 'G_lte';
        _G_lte?.build();
        _$failedField = 'G_neq';
        _G_neq?.build();
        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbigint_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_bool_exp extends Gbuckets_bool_exp {
  @override
  final BuiltList<Gbuckets_bool_exp>? G_and;
  @override
  final Gbuckets_bool_exp? G_not;
  @override
  final BuiltList<Gbuckets_bool_exp>? G_or;
  @override
  final GString_comparison_exp? cacheControl;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final GInt_comparison_exp? downloadExpiration;
  @override
  final Gfiles_bool_exp? files;
  @override
  final Gfiles_aggregate_bool_exp? files_aggregate;
  @override
  final GString_comparison_exp? id;
  @override
  final GInt_comparison_exp? maxUploadFileSize;
  @override
  final GInt_comparison_exp? minUploadFileSize;
  @override
  final GBoolean_comparison_exp? presignedUrlsEnabled;
  @override
  final Gtimestamptz_comparison_exp? updatedAt;

  factory _$Gbuckets_bool_exp(
          [void Function(Gbuckets_bool_expBuilder)? updates]) =>
      (new Gbuckets_bool_expBuilder()..update(updates))._build();

  _$Gbuckets_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.cacheControl,
      this.createdAt,
      this.downloadExpiration,
      this.files,
      this.files_aggregate,
      this.id,
      this.maxUploadFileSize,
      this.minUploadFileSize,
      this.presignedUrlsEnabled,
      this.updatedAt})
      : super._();

  @override
  Gbuckets_bool_exp rebuild(void Function(Gbuckets_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_bool_expBuilder toBuilder() =>
      new Gbuckets_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        cacheControl == other.cacheControl &&
        createdAt == other.createdAt &&
        downloadExpiration == other.downloadExpiration &&
        files == other.files &&
        files_aggregate == other.files_aggregate &&
        id == other.id &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize &&
        presignedUrlsEnabled == other.presignedUrlsEnabled &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, G_and.hashCode),
                                                    G_not.hashCode),
                                                G_or.hashCode),
                                            cacheControl.hashCode),
                                        createdAt.hashCode),
                                    downloadExpiration.hashCode),
                                files.hashCode),
                            files_aggregate.hashCode),
                        id.hashCode),
                    maxUploadFileSize.hashCode),
                minUploadFileSize.hashCode),
            presignedUrlsEnabled.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('cacheControl', cacheControl)
          ..add('createdAt', createdAt)
          ..add('downloadExpiration', downloadExpiration)
          ..add('files', files)
          ..add('files_aggregate', files_aggregate)
          ..add('id', id)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize)
          ..add('presignedUrlsEnabled', presignedUrlsEnabled)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gbuckets_bool_expBuilder
    implements Builder<Gbuckets_bool_exp, Gbuckets_bool_expBuilder> {
  _$Gbuckets_bool_exp? _$v;

  ListBuilder<Gbuckets_bool_exp>? _G_and;
  ListBuilder<Gbuckets_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Gbuckets_bool_exp>();
  set G_and(ListBuilder<Gbuckets_bool_exp>? G_and) => _$this._G_and = G_and;

  Gbuckets_bool_expBuilder? _G_not;
  Gbuckets_bool_expBuilder get G_not =>
      _$this._G_not ??= new Gbuckets_bool_expBuilder();
  set G_not(Gbuckets_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Gbuckets_bool_exp>? _G_or;
  ListBuilder<Gbuckets_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Gbuckets_bool_exp>();
  set G_or(ListBuilder<Gbuckets_bool_exp>? G_or) => _$this._G_or = G_or;

  GString_comparison_expBuilder? _cacheControl;
  GString_comparison_expBuilder get cacheControl =>
      _$this._cacheControl ??= new GString_comparison_expBuilder();
  set cacheControl(GString_comparison_expBuilder? cacheControl) =>
      _$this._cacheControl = cacheControl;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GInt_comparison_expBuilder? _downloadExpiration;
  GInt_comparison_expBuilder get downloadExpiration =>
      _$this._downloadExpiration ??= new GInt_comparison_expBuilder();
  set downloadExpiration(GInt_comparison_expBuilder? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  Gfiles_bool_expBuilder? _files;
  Gfiles_bool_expBuilder get files =>
      _$this._files ??= new Gfiles_bool_expBuilder();
  set files(Gfiles_bool_expBuilder? files) => _$this._files = files;

  Gfiles_aggregate_bool_expBuilder? _files_aggregate;
  Gfiles_aggregate_bool_expBuilder get files_aggregate =>
      _$this._files_aggregate ??= new Gfiles_aggregate_bool_expBuilder();
  set files_aggregate(Gfiles_aggregate_bool_expBuilder? files_aggregate) =>
      _$this._files_aggregate = files_aggregate;

  GString_comparison_expBuilder? _id;
  GString_comparison_expBuilder get id =>
      _$this._id ??= new GString_comparison_expBuilder();
  set id(GString_comparison_expBuilder? id) => _$this._id = id;

  GInt_comparison_expBuilder? _maxUploadFileSize;
  GInt_comparison_expBuilder get maxUploadFileSize =>
      _$this._maxUploadFileSize ??= new GInt_comparison_expBuilder();
  set maxUploadFileSize(GInt_comparison_expBuilder? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  GInt_comparison_expBuilder? _minUploadFileSize;
  GInt_comparison_expBuilder get minUploadFileSize =>
      _$this._minUploadFileSize ??= new GInt_comparison_expBuilder();
  set minUploadFileSize(GInt_comparison_expBuilder? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  GBoolean_comparison_expBuilder? _presignedUrlsEnabled;
  GBoolean_comparison_expBuilder get presignedUrlsEnabled =>
      _$this._presignedUrlsEnabled ??= new GBoolean_comparison_expBuilder();
  set presignedUrlsEnabled(
          GBoolean_comparison_expBuilder? presignedUrlsEnabled) =>
      _$this._presignedUrlsEnabled = presignedUrlsEnabled;

  Gtimestamptz_comparison_expBuilder? _updatedAt;
  Gtimestamptz_comparison_expBuilder get updatedAt =>
      _$this._updatedAt ??= new Gtimestamptz_comparison_expBuilder();
  set updatedAt(Gtimestamptz_comparison_expBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gbuckets_bool_expBuilder();

  Gbuckets_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _cacheControl = $v.cacheControl?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _downloadExpiration = $v.downloadExpiration?.toBuilder();
      _files = $v.files?.toBuilder();
      _files_aggregate = $v.files_aggregate?.toBuilder();
      _id = $v.id?.toBuilder();
      _maxUploadFileSize = $v.maxUploadFileSize?.toBuilder();
      _minUploadFileSize = $v.minUploadFileSize?.toBuilder();
      _presignedUrlsEnabled = $v.presignedUrlsEnabled?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_bool_exp;
  }

  @override
  void update(void Function(Gbuckets_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_bool_exp build() => _build();

  _$Gbuckets_bool_exp _build() {
    _$Gbuckets_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              cacheControl: _cacheControl?.build(),
              createdAt: _createdAt?.build(),
              downloadExpiration: _downloadExpiration?.build(),
              files: _files?.build(),
              files_aggregate: _files_aggregate?.build(),
              id: _id?.build(),
              maxUploadFileSize: _maxUploadFileSize?.build(),
              minUploadFileSize: _minUploadFileSize?.build(),
              presignedUrlsEnabled: _presignedUrlsEnabled?.build(),
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'cacheControl';
        _cacheControl?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'downloadExpiration';
        _downloadExpiration?.build();
        _$failedField = 'files';
        _files?.build();
        _$failedField = 'files_aggregate';
        _files_aggregate?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'maxUploadFileSize';
        _maxUploadFileSize?.build();
        _$failedField = 'minUploadFileSize';
        _minUploadFileSize?.build();
        _$failedField = 'presignedUrlsEnabled';
        _presignedUrlsEnabled?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_inc_input extends Gbuckets_inc_input {
  @override
  final int? downloadExpiration;
  @override
  final int? maxUploadFileSize;
  @override
  final int? minUploadFileSize;

  factory _$Gbuckets_inc_input(
          [void Function(Gbuckets_inc_inputBuilder)? updates]) =>
      (new Gbuckets_inc_inputBuilder()..update(updates))._build();

  _$Gbuckets_inc_input._(
      {this.downloadExpiration, this.maxUploadFileSize, this.minUploadFileSize})
      : super._();

  @override
  Gbuckets_inc_input rebuild(
          void Function(Gbuckets_inc_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_inc_inputBuilder toBuilder() =>
      new Gbuckets_inc_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_inc_input &&
        downloadExpiration == other.downloadExpiration &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, downloadExpiration.hashCode), maxUploadFileSize.hashCode),
        minUploadFileSize.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_inc_input')
          ..add('downloadExpiration', downloadExpiration)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize))
        .toString();
  }
}

class Gbuckets_inc_inputBuilder
    implements Builder<Gbuckets_inc_input, Gbuckets_inc_inputBuilder> {
  _$Gbuckets_inc_input? _$v;

  int? _downloadExpiration;
  int? get downloadExpiration => _$this._downloadExpiration;
  set downloadExpiration(int? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  int? _maxUploadFileSize;
  int? get maxUploadFileSize => _$this._maxUploadFileSize;
  set maxUploadFileSize(int? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  int? _minUploadFileSize;
  int? get minUploadFileSize => _$this._minUploadFileSize;
  set minUploadFileSize(int? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  Gbuckets_inc_inputBuilder();

  Gbuckets_inc_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _downloadExpiration = $v.downloadExpiration;
      _maxUploadFileSize = $v.maxUploadFileSize;
      _minUploadFileSize = $v.minUploadFileSize;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_inc_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_inc_input;
  }

  @override
  void update(void Function(Gbuckets_inc_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_inc_input build() => _build();

  _$Gbuckets_inc_input _build() {
    final _$result = _$v ??
        new _$Gbuckets_inc_input._(
            downloadExpiration: downloadExpiration,
            maxUploadFileSize: maxUploadFileSize,
            minUploadFileSize: minUploadFileSize);
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_insert_input extends Gbuckets_insert_input {
  @override
  final String? cacheControl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final int? downloadExpiration;
  @override
  final Gfiles_arr_rel_insert_input? files;
  @override
  final String? id;
  @override
  final int? maxUploadFileSize;
  @override
  final int? minUploadFileSize;
  @override
  final bool? presignedUrlsEnabled;
  @override
  final Gtimestamptz? updatedAt;

  factory _$Gbuckets_insert_input(
          [void Function(Gbuckets_insert_inputBuilder)? updates]) =>
      (new Gbuckets_insert_inputBuilder()..update(updates))._build();

  _$Gbuckets_insert_input._(
      {this.cacheControl,
      this.createdAt,
      this.downloadExpiration,
      this.files,
      this.id,
      this.maxUploadFileSize,
      this.minUploadFileSize,
      this.presignedUrlsEnabled,
      this.updatedAt})
      : super._();

  @override
  Gbuckets_insert_input rebuild(
          void Function(Gbuckets_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_insert_inputBuilder toBuilder() =>
      new Gbuckets_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_insert_input &&
        cacheControl == other.cacheControl &&
        createdAt == other.createdAt &&
        downloadExpiration == other.downloadExpiration &&
        files == other.files &&
        id == other.id &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize &&
        presignedUrlsEnabled == other.presignedUrlsEnabled &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, cacheControl.hashCode),
                                    createdAt.hashCode),
                                downloadExpiration.hashCode),
                            files.hashCode),
                        id.hashCode),
                    maxUploadFileSize.hashCode),
                minUploadFileSize.hashCode),
            presignedUrlsEnabled.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_insert_input')
          ..add('cacheControl', cacheControl)
          ..add('createdAt', createdAt)
          ..add('downloadExpiration', downloadExpiration)
          ..add('files', files)
          ..add('id', id)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize)
          ..add('presignedUrlsEnabled', presignedUrlsEnabled)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gbuckets_insert_inputBuilder
    implements Builder<Gbuckets_insert_input, Gbuckets_insert_inputBuilder> {
  _$Gbuckets_insert_input? _$v;

  String? _cacheControl;
  String? get cacheControl => _$this._cacheControl;
  set cacheControl(String? cacheControl) => _$this._cacheControl = cacheControl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  int? _downloadExpiration;
  int? get downloadExpiration => _$this._downloadExpiration;
  set downloadExpiration(int? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  Gfiles_arr_rel_insert_inputBuilder? _files;
  Gfiles_arr_rel_insert_inputBuilder get files =>
      _$this._files ??= new Gfiles_arr_rel_insert_inputBuilder();
  set files(Gfiles_arr_rel_insert_inputBuilder? files) => _$this._files = files;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _maxUploadFileSize;
  int? get maxUploadFileSize => _$this._maxUploadFileSize;
  set maxUploadFileSize(int? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  int? _minUploadFileSize;
  int? get minUploadFileSize => _$this._minUploadFileSize;
  set minUploadFileSize(int? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  bool? _presignedUrlsEnabled;
  bool? get presignedUrlsEnabled => _$this._presignedUrlsEnabled;
  set presignedUrlsEnabled(bool? presignedUrlsEnabled) =>
      _$this._presignedUrlsEnabled = presignedUrlsEnabled;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gbuckets_insert_inputBuilder();

  Gbuckets_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _cacheControl = $v.cacheControl;
      _createdAt = $v.createdAt?.toBuilder();
      _downloadExpiration = $v.downloadExpiration;
      _files = $v.files?.toBuilder();
      _id = $v.id;
      _maxUploadFileSize = $v.maxUploadFileSize;
      _minUploadFileSize = $v.minUploadFileSize;
      _presignedUrlsEnabled = $v.presignedUrlsEnabled;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_insert_input;
  }

  @override
  void update(void Function(Gbuckets_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_insert_input build() => _build();

  _$Gbuckets_insert_input _build() {
    _$Gbuckets_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_insert_input._(
              cacheControl: cacheControl,
              createdAt: _createdAt?.build(),
              downloadExpiration: downloadExpiration,
              files: _files?.build(),
              id: id,
              maxUploadFileSize: maxUploadFileSize,
              minUploadFileSize: minUploadFileSize,
              presignedUrlsEnabled: presignedUrlsEnabled,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'files';
        _files?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_obj_rel_insert_input extends Gbuckets_obj_rel_insert_input {
  @override
  final Gbuckets_insert_input data;
  @override
  final Gbuckets_on_conflict? on_conflict;

  factory _$Gbuckets_obj_rel_insert_input(
          [void Function(Gbuckets_obj_rel_insert_inputBuilder)? updates]) =>
      (new Gbuckets_obj_rel_insert_inputBuilder()..update(updates))._build();

  _$Gbuckets_obj_rel_insert_input._({required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'Gbuckets_obj_rel_insert_input', 'data');
  }

  @override
  Gbuckets_obj_rel_insert_input rebuild(
          void Function(Gbuckets_obj_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_obj_rel_insert_inputBuilder toBuilder() =>
      new Gbuckets_obj_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_obj_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_obj_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class Gbuckets_obj_rel_insert_inputBuilder
    implements
        Builder<Gbuckets_obj_rel_insert_input,
            Gbuckets_obj_rel_insert_inputBuilder> {
  _$Gbuckets_obj_rel_insert_input? _$v;

  Gbuckets_insert_inputBuilder? _data;
  Gbuckets_insert_inputBuilder get data =>
      _$this._data ??= new Gbuckets_insert_inputBuilder();
  set data(Gbuckets_insert_inputBuilder? data) => _$this._data = data;

  Gbuckets_on_conflictBuilder? _on_conflict;
  Gbuckets_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new Gbuckets_on_conflictBuilder();
  set on_conflict(Gbuckets_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  Gbuckets_obj_rel_insert_inputBuilder();

  Gbuckets_obj_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_obj_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_obj_rel_insert_input;
  }

  @override
  void update(void Function(Gbuckets_obj_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_obj_rel_insert_input build() => _build();

  _$Gbuckets_obj_rel_insert_input _build() {
    _$Gbuckets_obj_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_obj_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_obj_rel_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_on_conflict extends Gbuckets_on_conflict {
  @override
  final Gbuckets_constraint constraint;
  @override
  final BuiltList<Gbuckets_update_column> update_columns;
  @override
  final Gbuckets_bool_exp? where;

  factory _$Gbuckets_on_conflict(
          [void Function(Gbuckets_on_conflictBuilder)? updates]) =>
      (new Gbuckets_on_conflictBuilder()..update(updates))._build();

  _$Gbuckets_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Gbuckets_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Gbuckets_on_conflict', 'update_columns');
  }

  @override
  Gbuckets_on_conflict rebuild(
          void Function(Gbuckets_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_on_conflictBuilder toBuilder() =>
      new Gbuckets_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Gbuckets_on_conflictBuilder
    implements Builder<Gbuckets_on_conflict, Gbuckets_on_conflictBuilder> {
  _$Gbuckets_on_conflict? _$v;

  Gbuckets_constraint? _constraint;
  Gbuckets_constraint? get constraint => _$this._constraint;
  set constraint(Gbuckets_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Gbuckets_update_column>? _update_columns;
  ListBuilder<Gbuckets_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<Gbuckets_update_column>();
  set update_columns(ListBuilder<Gbuckets_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Gbuckets_bool_expBuilder? _where;
  Gbuckets_bool_expBuilder get where =>
      _$this._where ??= new Gbuckets_bool_expBuilder();
  set where(Gbuckets_bool_expBuilder? where) => _$this._where = where;

  Gbuckets_on_conflictBuilder();

  Gbuckets_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_on_conflict;
  }

  @override
  void update(void Function(Gbuckets_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_on_conflict build() => _build();

  _$Gbuckets_on_conflict _build() {
    _$Gbuckets_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Gbuckets_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_order_by extends Gbuckets_order_by {
  @override
  final Gorder_by? cacheControl;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? downloadExpiration;
  @override
  final Gfiles_aggregate_order_by? files_aggregate;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? maxUploadFileSize;
  @override
  final Gorder_by? minUploadFileSize;
  @override
  final Gorder_by? presignedUrlsEnabled;
  @override
  final Gorder_by? updatedAt;

  factory _$Gbuckets_order_by(
          [void Function(Gbuckets_order_byBuilder)? updates]) =>
      (new Gbuckets_order_byBuilder()..update(updates))._build();

  _$Gbuckets_order_by._(
      {this.cacheControl,
      this.createdAt,
      this.downloadExpiration,
      this.files_aggregate,
      this.id,
      this.maxUploadFileSize,
      this.minUploadFileSize,
      this.presignedUrlsEnabled,
      this.updatedAt})
      : super._();

  @override
  Gbuckets_order_by rebuild(void Function(Gbuckets_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_order_byBuilder toBuilder() =>
      new Gbuckets_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_order_by &&
        cacheControl == other.cacheControl &&
        createdAt == other.createdAt &&
        downloadExpiration == other.downloadExpiration &&
        files_aggregate == other.files_aggregate &&
        id == other.id &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize &&
        presignedUrlsEnabled == other.presignedUrlsEnabled &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, cacheControl.hashCode),
                                    createdAt.hashCode),
                                downloadExpiration.hashCode),
                            files_aggregate.hashCode),
                        id.hashCode),
                    maxUploadFileSize.hashCode),
                minUploadFileSize.hashCode),
            presignedUrlsEnabled.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_order_by')
          ..add('cacheControl', cacheControl)
          ..add('createdAt', createdAt)
          ..add('downloadExpiration', downloadExpiration)
          ..add('files_aggregate', files_aggregate)
          ..add('id', id)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize)
          ..add('presignedUrlsEnabled', presignedUrlsEnabled)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gbuckets_order_byBuilder
    implements Builder<Gbuckets_order_by, Gbuckets_order_byBuilder> {
  _$Gbuckets_order_by? _$v;

  Gorder_by? _cacheControl;
  Gorder_by? get cacheControl => _$this._cacheControl;
  set cacheControl(Gorder_by? cacheControl) =>
      _$this._cacheControl = cacheControl;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _downloadExpiration;
  Gorder_by? get downloadExpiration => _$this._downloadExpiration;
  set downloadExpiration(Gorder_by? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  Gfiles_aggregate_order_byBuilder? _files_aggregate;
  Gfiles_aggregate_order_byBuilder get files_aggregate =>
      _$this._files_aggregate ??= new Gfiles_aggregate_order_byBuilder();
  set files_aggregate(Gfiles_aggregate_order_byBuilder? files_aggregate) =>
      _$this._files_aggregate = files_aggregate;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _maxUploadFileSize;
  Gorder_by? get maxUploadFileSize => _$this._maxUploadFileSize;
  set maxUploadFileSize(Gorder_by? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  Gorder_by? _minUploadFileSize;
  Gorder_by? get minUploadFileSize => _$this._minUploadFileSize;
  set minUploadFileSize(Gorder_by? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  Gorder_by? _presignedUrlsEnabled;
  Gorder_by? get presignedUrlsEnabled => _$this._presignedUrlsEnabled;
  set presignedUrlsEnabled(Gorder_by? presignedUrlsEnabled) =>
      _$this._presignedUrlsEnabled = presignedUrlsEnabled;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gbuckets_order_byBuilder();

  Gbuckets_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _cacheControl = $v.cacheControl;
      _createdAt = $v.createdAt;
      _downloadExpiration = $v.downloadExpiration;
      _files_aggregate = $v.files_aggregate?.toBuilder();
      _id = $v.id;
      _maxUploadFileSize = $v.maxUploadFileSize;
      _minUploadFileSize = $v.minUploadFileSize;
      _presignedUrlsEnabled = $v.presignedUrlsEnabled;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_order_by;
  }

  @override
  void update(void Function(Gbuckets_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_order_by build() => _build();

  _$Gbuckets_order_by _build() {
    _$Gbuckets_order_by _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_order_by._(
              cacheControl: cacheControl,
              createdAt: createdAt,
              downloadExpiration: downloadExpiration,
              files_aggregate: _files_aggregate?.build(),
              id: id,
              maxUploadFileSize: maxUploadFileSize,
              minUploadFileSize: minUploadFileSize,
              presignedUrlsEnabled: presignedUrlsEnabled,
              updatedAt: updatedAt);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'files_aggregate';
        _files_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_pk_columns_input extends Gbuckets_pk_columns_input {
  @override
  final String id;

  factory _$Gbuckets_pk_columns_input(
          [void Function(Gbuckets_pk_columns_inputBuilder)? updates]) =>
      (new Gbuckets_pk_columns_inputBuilder()..update(updates))._build();

  _$Gbuckets_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'Gbuckets_pk_columns_input', 'id');
  }

  @override
  Gbuckets_pk_columns_input rebuild(
          void Function(Gbuckets_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_pk_columns_inputBuilder toBuilder() =>
      new Gbuckets_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Gbuckets_pk_columns_inputBuilder
    implements
        Builder<Gbuckets_pk_columns_input, Gbuckets_pk_columns_inputBuilder> {
  _$Gbuckets_pk_columns_input? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  Gbuckets_pk_columns_inputBuilder();

  Gbuckets_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_pk_columns_input;
  }

  @override
  void update(void Function(Gbuckets_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_pk_columns_input build() => _build();

  _$Gbuckets_pk_columns_input _build() {
    final _$result = _$v ??
        new _$Gbuckets_pk_columns_input._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'Gbuckets_pk_columns_input', 'id'));
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_set_input extends Gbuckets_set_input {
  @override
  final String? cacheControl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final int? downloadExpiration;
  @override
  final String? id;
  @override
  final int? maxUploadFileSize;
  @override
  final int? minUploadFileSize;
  @override
  final bool? presignedUrlsEnabled;
  @override
  final Gtimestamptz? updatedAt;

  factory _$Gbuckets_set_input(
          [void Function(Gbuckets_set_inputBuilder)? updates]) =>
      (new Gbuckets_set_inputBuilder()..update(updates))._build();

  _$Gbuckets_set_input._(
      {this.cacheControl,
      this.createdAt,
      this.downloadExpiration,
      this.id,
      this.maxUploadFileSize,
      this.minUploadFileSize,
      this.presignedUrlsEnabled,
      this.updatedAt})
      : super._();

  @override
  Gbuckets_set_input rebuild(
          void Function(Gbuckets_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_set_inputBuilder toBuilder() =>
      new Gbuckets_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_set_input &&
        cacheControl == other.cacheControl &&
        createdAt == other.createdAt &&
        downloadExpiration == other.downloadExpiration &&
        id == other.id &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize &&
        presignedUrlsEnabled == other.presignedUrlsEnabled &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, cacheControl.hashCode),
                                createdAt.hashCode),
                            downloadExpiration.hashCode),
                        id.hashCode),
                    maxUploadFileSize.hashCode),
                minUploadFileSize.hashCode),
            presignedUrlsEnabled.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_set_input')
          ..add('cacheControl', cacheControl)
          ..add('createdAt', createdAt)
          ..add('downloadExpiration', downloadExpiration)
          ..add('id', id)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize)
          ..add('presignedUrlsEnabled', presignedUrlsEnabled)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gbuckets_set_inputBuilder
    implements Builder<Gbuckets_set_input, Gbuckets_set_inputBuilder> {
  _$Gbuckets_set_input? _$v;

  String? _cacheControl;
  String? get cacheControl => _$this._cacheControl;
  set cacheControl(String? cacheControl) => _$this._cacheControl = cacheControl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  int? _downloadExpiration;
  int? get downloadExpiration => _$this._downloadExpiration;
  set downloadExpiration(int? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _maxUploadFileSize;
  int? get maxUploadFileSize => _$this._maxUploadFileSize;
  set maxUploadFileSize(int? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  int? _minUploadFileSize;
  int? get minUploadFileSize => _$this._minUploadFileSize;
  set minUploadFileSize(int? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  bool? _presignedUrlsEnabled;
  bool? get presignedUrlsEnabled => _$this._presignedUrlsEnabled;
  set presignedUrlsEnabled(bool? presignedUrlsEnabled) =>
      _$this._presignedUrlsEnabled = presignedUrlsEnabled;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gbuckets_set_inputBuilder();

  Gbuckets_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _cacheControl = $v.cacheControl;
      _createdAt = $v.createdAt?.toBuilder();
      _downloadExpiration = $v.downloadExpiration;
      _id = $v.id;
      _maxUploadFileSize = $v.maxUploadFileSize;
      _minUploadFileSize = $v.minUploadFileSize;
      _presignedUrlsEnabled = $v.presignedUrlsEnabled;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_set_input;
  }

  @override
  void update(void Function(Gbuckets_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_set_input build() => _build();

  _$Gbuckets_set_input _build() {
    _$Gbuckets_set_input _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_set_input._(
              cacheControl: cacheControl,
              createdAt: _createdAt?.build(),
              downloadExpiration: downloadExpiration,
              id: id,
              maxUploadFileSize: maxUploadFileSize,
              minUploadFileSize: minUploadFileSize,
              presignedUrlsEnabled: presignedUrlsEnabled,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_stream_cursor_input extends Gbuckets_stream_cursor_input {
  @override
  final Gbuckets_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Gbuckets_stream_cursor_input(
          [void Function(Gbuckets_stream_cursor_inputBuilder)? updates]) =>
      (new Gbuckets_stream_cursor_inputBuilder()..update(updates))._build();

  _$Gbuckets_stream_cursor_input._({required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Gbuckets_stream_cursor_input', 'initial_value');
  }

  @override
  Gbuckets_stream_cursor_input rebuild(
          void Function(Gbuckets_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_stream_cursor_inputBuilder toBuilder() =>
      new Gbuckets_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Gbuckets_stream_cursor_inputBuilder
    implements
        Builder<Gbuckets_stream_cursor_input,
            Gbuckets_stream_cursor_inputBuilder> {
  _$Gbuckets_stream_cursor_input? _$v;

  Gbuckets_stream_cursor_value_inputBuilder? _initial_value;
  Gbuckets_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??= new Gbuckets_stream_cursor_value_inputBuilder();
  set initial_value(Gbuckets_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Gbuckets_stream_cursor_inputBuilder();

  Gbuckets_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_stream_cursor_input;
  }

  @override
  void update(void Function(Gbuckets_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_stream_cursor_input build() => _build();

  _$Gbuckets_stream_cursor_input _build() {
    _$Gbuckets_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_stream_cursor_value_input
    extends Gbuckets_stream_cursor_value_input {
  @override
  final String? cacheControl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final int? downloadExpiration;
  @override
  final String? id;
  @override
  final int? maxUploadFileSize;
  @override
  final int? minUploadFileSize;
  @override
  final bool? presignedUrlsEnabled;
  @override
  final Gtimestamptz? updatedAt;

  factory _$Gbuckets_stream_cursor_value_input(
          [void Function(Gbuckets_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new Gbuckets_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$Gbuckets_stream_cursor_value_input._(
      {this.cacheControl,
      this.createdAt,
      this.downloadExpiration,
      this.id,
      this.maxUploadFileSize,
      this.minUploadFileSize,
      this.presignedUrlsEnabled,
      this.updatedAt})
      : super._();

  @override
  Gbuckets_stream_cursor_value_input rebuild(
          void Function(Gbuckets_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_stream_cursor_value_inputBuilder toBuilder() =>
      new Gbuckets_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_stream_cursor_value_input &&
        cacheControl == other.cacheControl &&
        createdAt == other.createdAt &&
        downloadExpiration == other.downloadExpiration &&
        id == other.id &&
        maxUploadFileSize == other.maxUploadFileSize &&
        minUploadFileSize == other.minUploadFileSize &&
        presignedUrlsEnabled == other.presignedUrlsEnabled &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, cacheControl.hashCode),
                                createdAt.hashCode),
                            downloadExpiration.hashCode),
                        id.hashCode),
                    maxUploadFileSize.hashCode),
                minUploadFileSize.hashCode),
            presignedUrlsEnabled.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_stream_cursor_value_input')
          ..add('cacheControl', cacheControl)
          ..add('createdAt', createdAt)
          ..add('downloadExpiration', downloadExpiration)
          ..add('id', id)
          ..add('maxUploadFileSize', maxUploadFileSize)
          ..add('minUploadFileSize', minUploadFileSize)
          ..add('presignedUrlsEnabled', presignedUrlsEnabled)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gbuckets_stream_cursor_value_inputBuilder
    implements
        Builder<Gbuckets_stream_cursor_value_input,
            Gbuckets_stream_cursor_value_inputBuilder> {
  _$Gbuckets_stream_cursor_value_input? _$v;

  String? _cacheControl;
  String? get cacheControl => _$this._cacheControl;
  set cacheControl(String? cacheControl) => _$this._cacheControl = cacheControl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  int? _downloadExpiration;
  int? get downloadExpiration => _$this._downloadExpiration;
  set downloadExpiration(int? downloadExpiration) =>
      _$this._downloadExpiration = downloadExpiration;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _maxUploadFileSize;
  int? get maxUploadFileSize => _$this._maxUploadFileSize;
  set maxUploadFileSize(int? maxUploadFileSize) =>
      _$this._maxUploadFileSize = maxUploadFileSize;

  int? _minUploadFileSize;
  int? get minUploadFileSize => _$this._minUploadFileSize;
  set minUploadFileSize(int? minUploadFileSize) =>
      _$this._minUploadFileSize = minUploadFileSize;

  bool? _presignedUrlsEnabled;
  bool? get presignedUrlsEnabled => _$this._presignedUrlsEnabled;
  set presignedUrlsEnabled(bool? presignedUrlsEnabled) =>
      _$this._presignedUrlsEnabled = presignedUrlsEnabled;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gbuckets_stream_cursor_value_inputBuilder();

  Gbuckets_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _cacheControl = $v.cacheControl;
      _createdAt = $v.createdAt?.toBuilder();
      _downloadExpiration = $v.downloadExpiration;
      _id = $v.id;
      _maxUploadFileSize = $v.maxUploadFileSize;
      _minUploadFileSize = $v.minUploadFileSize;
      _presignedUrlsEnabled = $v.presignedUrlsEnabled;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(Gbuckets_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_stream_cursor_value_input build() => _build();

  _$Gbuckets_stream_cursor_value_input _build() {
    _$Gbuckets_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_stream_cursor_value_input._(
              cacheControl: cacheControl,
              createdAt: _createdAt?.build(),
              downloadExpiration: downloadExpiration,
              id: id,
              maxUploadFileSize: maxUploadFileSize,
              minUploadFileSize: minUploadFileSize,
              presignedUrlsEnabled: presignedUrlsEnabled,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_stream_cursor_value_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbuckets_updates extends Gbuckets_updates {
  @override
  final Gbuckets_inc_input? G_inc;
  @override
  final Gbuckets_set_input? G_set;
  @override
  final Gbuckets_bool_exp where;

  factory _$Gbuckets_updates(
          [void Function(Gbuckets_updatesBuilder)? updates]) =>
      (new Gbuckets_updatesBuilder()..update(updates))._build();

  _$Gbuckets_updates._({this.G_inc, this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(where, r'Gbuckets_updates', 'where');
  }

  @override
  Gbuckets_updates rebuild(void Function(Gbuckets_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbuckets_updatesBuilder toBuilder() =>
      new Gbuckets_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbuckets_updates &&
        G_inc == other.G_inc &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, G_inc.hashCode), G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbuckets_updates')
          ..add('G_inc', G_inc)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Gbuckets_updatesBuilder
    implements Builder<Gbuckets_updates, Gbuckets_updatesBuilder> {
  _$Gbuckets_updates? _$v;

  Gbuckets_inc_inputBuilder? _G_inc;
  Gbuckets_inc_inputBuilder get G_inc =>
      _$this._G_inc ??= new Gbuckets_inc_inputBuilder();
  set G_inc(Gbuckets_inc_inputBuilder? G_inc) => _$this._G_inc = G_inc;

  Gbuckets_set_inputBuilder? _G_set;
  Gbuckets_set_inputBuilder get G_set =>
      _$this._G_set ??= new Gbuckets_set_inputBuilder();
  set G_set(Gbuckets_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Gbuckets_bool_expBuilder? _where;
  Gbuckets_bool_expBuilder get where =>
      _$this._where ??= new Gbuckets_bool_expBuilder();
  set where(Gbuckets_bool_expBuilder? where) => _$this._where = where;

  Gbuckets_updatesBuilder();

  Gbuckets_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_inc = $v.G_inc?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbuckets_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbuckets_updates;
  }

  @override
  void update(void Function(Gbuckets_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbuckets_updates build() => _build();

  _$Gbuckets_updates _build() {
    _$Gbuckets_updates _$result;
    try {
      _$result = _$v ??
          new _$Gbuckets_updates._(
              G_inc: _G_inc?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_inc';
        _G_inc?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbuckets_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gbytea extends Gbytea {
  @override
  final String value;

  factory _$Gbytea([void Function(GbyteaBuilder)? updates]) =>
      (new GbyteaBuilder()..update(updates))._build();

  _$Gbytea._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'Gbytea', 'value');
  }

  @override
  Gbytea rebuild(void Function(GbyteaBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GbyteaBuilder toBuilder() => new GbyteaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbytea && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbytea')..add('value', value))
        .toString();
  }
}

class GbyteaBuilder implements Builder<Gbytea, GbyteaBuilder> {
  _$Gbytea? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GbyteaBuilder();

  GbyteaBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbytea other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbytea;
  }

  @override
  void update(void Function(GbyteaBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbytea build() => _build();

  _$Gbytea _build() {
    final _$result = _$v ??
        new _$Gbytea._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'Gbytea', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$Gbytea_comparison_exp extends Gbytea_comparison_exp {
  @override
  final Gbytea? G_eq;
  @override
  final Gbytea? G_gt;
  @override
  final Gbytea? G_gte;
  @override
  final BuiltList<Gbytea>? G_in;
  @override
  final bool? G_is_null;
  @override
  final Gbytea? G_lt;
  @override
  final Gbytea? G_lte;
  @override
  final Gbytea? G_neq;
  @override
  final BuiltList<Gbytea>? G_nin;

  factory _$Gbytea_comparison_exp(
          [void Function(Gbytea_comparison_expBuilder)? updates]) =>
      (new Gbytea_comparison_expBuilder()..update(updates))._build();

  _$Gbytea_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  Gbytea_comparison_exp rebuild(
          void Function(Gbytea_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gbytea_comparison_expBuilder toBuilder() =>
      new Gbytea_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gbytea_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gbytea_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class Gbytea_comparison_expBuilder
    implements Builder<Gbytea_comparison_exp, Gbytea_comparison_expBuilder> {
  _$Gbytea_comparison_exp? _$v;

  GbyteaBuilder? _G_eq;
  GbyteaBuilder get G_eq => _$this._G_eq ??= new GbyteaBuilder();
  set G_eq(GbyteaBuilder? G_eq) => _$this._G_eq = G_eq;

  GbyteaBuilder? _G_gt;
  GbyteaBuilder get G_gt => _$this._G_gt ??= new GbyteaBuilder();
  set G_gt(GbyteaBuilder? G_gt) => _$this._G_gt = G_gt;

  GbyteaBuilder? _G_gte;
  GbyteaBuilder get G_gte => _$this._G_gte ??= new GbyteaBuilder();
  set G_gte(GbyteaBuilder? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<Gbytea>? _G_in;
  ListBuilder<Gbytea> get G_in => _$this._G_in ??= new ListBuilder<Gbytea>();
  set G_in(ListBuilder<Gbytea>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  GbyteaBuilder? _G_lt;
  GbyteaBuilder get G_lt => _$this._G_lt ??= new GbyteaBuilder();
  set G_lt(GbyteaBuilder? G_lt) => _$this._G_lt = G_lt;

  GbyteaBuilder? _G_lte;
  GbyteaBuilder get G_lte => _$this._G_lte ??= new GbyteaBuilder();
  set G_lte(GbyteaBuilder? G_lte) => _$this._G_lte = G_lte;

  GbyteaBuilder? _G_neq;
  GbyteaBuilder get G_neq => _$this._G_neq ??= new GbyteaBuilder();
  set G_neq(GbyteaBuilder? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<Gbytea>? _G_nin;
  ListBuilder<Gbytea> get G_nin => _$this._G_nin ??= new ListBuilder<Gbytea>();
  set G_nin(ListBuilder<Gbytea>? G_nin) => _$this._G_nin = G_nin;

  Gbytea_comparison_expBuilder();

  Gbytea_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq?.toBuilder();
      _G_gt = $v.G_gt?.toBuilder();
      _G_gte = $v.G_gte?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt?.toBuilder();
      _G_lte = $v.G_lte?.toBuilder();
      _G_neq = $v.G_neq?.toBuilder();
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gbytea_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gbytea_comparison_exp;
  }

  @override
  void update(void Function(Gbytea_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gbytea_comparison_exp build() => _build();

  _$Gbytea_comparison_exp _build() {
    _$Gbytea_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Gbytea_comparison_exp._(
              G_eq: _G_eq?.build(),
              G_gt: _G_gt?.build(),
              G_gte: _G_gte?.build(),
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: _G_lt?.build(),
              G_lte: _G_lte?.build(),
              G_neq: _G_neq?.build(),
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_eq';
        _G_eq?.build();
        _$failedField = 'G_gt';
        _G_gt?.build();
        _$failedField = 'G_gte';
        _G_gte?.build();
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_lt';
        _G_lt?.build();
        _$failedField = 'G_lte';
        _G_lte?.build();
        _$failedField = 'G_neq';
        _G_neq?.build();
        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gbytea_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gcitext extends Gcitext {
  @override
  final String value;

  factory _$Gcitext([void Function(GcitextBuilder)? updates]) =>
      (new GcitextBuilder()..update(updates))._build();

  _$Gcitext._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'Gcitext', 'value');
  }

  @override
  Gcitext rebuild(void Function(GcitextBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GcitextBuilder toBuilder() => new GcitextBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcitext && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcitext')..add('value', value))
        .toString();
  }
}

class GcitextBuilder implements Builder<Gcitext, GcitextBuilder> {
  _$Gcitext? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GcitextBuilder();

  GcitextBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcitext other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcitext;
  }

  @override
  void update(void Function(GcitextBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcitext build() => _build();

  _$Gcitext _build() {
    final _$result = _$v ??
        new _$Gcitext._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'Gcitext', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$Gcitext_comparison_exp extends Gcitext_comparison_exp {
  @override
  final Gcitext? G_eq;
  @override
  final Gcitext? G_gt;
  @override
  final Gcitext? G_gte;
  @override
  final Gcitext? G_ilike;
  @override
  final BuiltList<Gcitext>? G_in;
  @override
  final Gcitext? G_iregex;
  @override
  final bool? G_is_null;
  @override
  final Gcitext? G_like;
  @override
  final Gcitext? G_lt;
  @override
  final Gcitext? G_lte;
  @override
  final Gcitext? G_neq;
  @override
  final Gcitext? G_nilike;
  @override
  final BuiltList<Gcitext>? G_nin;
  @override
  final Gcitext? G_niregex;
  @override
  final Gcitext? G_nlike;
  @override
  final Gcitext? G_nregex;
  @override
  final Gcitext? G_nsimilar;
  @override
  final Gcitext? G_regex;
  @override
  final Gcitext? G_similar;

  factory _$Gcitext_comparison_exp(
          [void Function(Gcitext_comparison_expBuilder)? updates]) =>
      (new Gcitext_comparison_expBuilder()..update(updates))._build();

  _$Gcitext_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_ilike,
      this.G_in,
      this.G_iregex,
      this.G_is_null,
      this.G_like,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nilike,
      this.G_nin,
      this.G_niregex,
      this.G_nlike,
      this.G_nregex,
      this.G_nsimilar,
      this.G_regex,
      this.G_similar})
      : super._();

  @override
  Gcitext_comparison_exp rebuild(
          void Function(Gcitext_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gcitext_comparison_expBuilder toBuilder() =>
      new Gcitext_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gcitext_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_ilike == other.G_ilike &&
        G_in == other.G_in &&
        G_iregex == other.G_iregex &&
        G_is_null == other.G_is_null &&
        G_like == other.G_like &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nilike == other.G_nilike &&
        G_nin == other.G_nin &&
        G_niregex == other.G_niregex &&
        G_nlike == other.G_nlike &&
        G_nregex == other.G_nregex &&
        G_nsimilar == other.G_nsimilar &&
        G_regex == other.G_regex &&
        G_similar == other.G_similar;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(0,
                                                                                G_eq.hashCode),
                                                                            G_gt.hashCode),
                                                                        G_gte.hashCode),
                                                                    G_ilike.hashCode),
                                                                G_in.hashCode),
                                                            G_iregex.hashCode),
                                                        G_is_null.hashCode),
                                                    G_like.hashCode),
                                                G_lt.hashCode),
                                            G_lte.hashCode),
                                        G_neq.hashCode),
                                    G_nilike.hashCode),
                                G_nin.hashCode),
                            G_niregex.hashCode),
                        G_nlike.hashCode),
                    G_nregex.hashCode),
                G_nsimilar.hashCode),
            G_regex.hashCode),
        G_similar.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gcitext_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_ilike', G_ilike)
          ..add('G_in', G_in)
          ..add('G_iregex', G_iregex)
          ..add('G_is_null', G_is_null)
          ..add('G_like', G_like)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nilike', G_nilike)
          ..add('G_nin', G_nin)
          ..add('G_niregex', G_niregex)
          ..add('G_nlike', G_nlike)
          ..add('G_nregex', G_nregex)
          ..add('G_nsimilar', G_nsimilar)
          ..add('G_regex', G_regex)
          ..add('G_similar', G_similar))
        .toString();
  }
}

class Gcitext_comparison_expBuilder
    implements Builder<Gcitext_comparison_exp, Gcitext_comparison_expBuilder> {
  _$Gcitext_comparison_exp? _$v;

  GcitextBuilder? _G_eq;
  GcitextBuilder get G_eq => _$this._G_eq ??= new GcitextBuilder();
  set G_eq(GcitextBuilder? G_eq) => _$this._G_eq = G_eq;

  GcitextBuilder? _G_gt;
  GcitextBuilder get G_gt => _$this._G_gt ??= new GcitextBuilder();
  set G_gt(GcitextBuilder? G_gt) => _$this._G_gt = G_gt;

  GcitextBuilder? _G_gte;
  GcitextBuilder get G_gte => _$this._G_gte ??= new GcitextBuilder();
  set G_gte(GcitextBuilder? G_gte) => _$this._G_gte = G_gte;

  GcitextBuilder? _G_ilike;
  GcitextBuilder get G_ilike => _$this._G_ilike ??= new GcitextBuilder();
  set G_ilike(GcitextBuilder? G_ilike) => _$this._G_ilike = G_ilike;

  ListBuilder<Gcitext>? _G_in;
  ListBuilder<Gcitext> get G_in => _$this._G_in ??= new ListBuilder<Gcitext>();
  set G_in(ListBuilder<Gcitext>? G_in) => _$this._G_in = G_in;

  GcitextBuilder? _G_iregex;
  GcitextBuilder get G_iregex => _$this._G_iregex ??= new GcitextBuilder();
  set G_iregex(GcitextBuilder? G_iregex) => _$this._G_iregex = G_iregex;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  GcitextBuilder? _G_like;
  GcitextBuilder get G_like => _$this._G_like ??= new GcitextBuilder();
  set G_like(GcitextBuilder? G_like) => _$this._G_like = G_like;

  GcitextBuilder? _G_lt;
  GcitextBuilder get G_lt => _$this._G_lt ??= new GcitextBuilder();
  set G_lt(GcitextBuilder? G_lt) => _$this._G_lt = G_lt;

  GcitextBuilder? _G_lte;
  GcitextBuilder get G_lte => _$this._G_lte ??= new GcitextBuilder();
  set G_lte(GcitextBuilder? G_lte) => _$this._G_lte = G_lte;

  GcitextBuilder? _G_neq;
  GcitextBuilder get G_neq => _$this._G_neq ??= new GcitextBuilder();
  set G_neq(GcitextBuilder? G_neq) => _$this._G_neq = G_neq;

  GcitextBuilder? _G_nilike;
  GcitextBuilder get G_nilike => _$this._G_nilike ??= new GcitextBuilder();
  set G_nilike(GcitextBuilder? G_nilike) => _$this._G_nilike = G_nilike;

  ListBuilder<Gcitext>? _G_nin;
  ListBuilder<Gcitext> get G_nin =>
      _$this._G_nin ??= new ListBuilder<Gcitext>();
  set G_nin(ListBuilder<Gcitext>? G_nin) => _$this._G_nin = G_nin;

  GcitextBuilder? _G_niregex;
  GcitextBuilder get G_niregex => _$this._G_niregex ??= new GcitextBuilder();
  set G_niregex(GcitextBuilder? G_niregex) => _$this._G_niregex = G_niregex;

  GcitextBuilder? _G_nlike;
  GcitextBuilder get G_nlike => _$this._G_nlike ??= new GcitextBuilder();
  set G_nlike(GcitextBuilder? G_nlike) => _$this._G_nlike = G_nlike;

  GcitextBuilder? _G_nregex;
  GcitextBuilder get G_nregex => _$this._G_nregex ??= new GcitextBuilder();
  set G_nregex(GcitextBuilder? G_nregex) => _$this._G_nregex = G_nregex;

  GcitextBuilder? _G_nsimilar;
  GcitextBuilder get G_nsimilar => _$this._G_nsimilar ??= new GcitextBuilder();
  set G_nsimilar(GcitextBuilder? G_nsimilar) => _$this._G_nsimilar = G_nsimilar;

  GcitextBuilder? _G_regex;
  GcitextBuilder get G_regex => _$this._G_regex ??= new GcitextBuilder();
  set G_regex(GcitextBuilder? G_regex) => _$this._G_regex = G_regex;

  GcitextBuilder? _G_similar;
  GcitextBuilder get G_similar => _$this._G_similar ??= new GcitextBuilder();
  set G_similar(GcitextBuilder? G_similar) => _$this._G_similar = G_similar;

  Gcitext_comparison_expBuilder();

  Gcitext_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq?.toBuilder();
      _G_gt = $v.G_gt?.toBuilder();
      _G_gte = $v.G_gte?.toBuilder();
      _G_ilike = $v.G_ilike?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_iregex = $v.G_iregex?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_like = $v.G_like?.toBuilder();
      _G_lt = $v.G_lt?.toBuilder();
      _G_lte = $v.G_lte?.toBuilder();
      _G_neq = $v.G_neq?.toBuilder();
      _G_nilike = $v.G_nilike?.toBuilder();
      _G_nin = $v.G_nin?.toBuilder();
      _G_niregex = $v.G_niregex?.toBuilder();
      _G_nlike = $v.G_nlike?.toBuilder();
      _G_nregex = $v.G_nregex?.toBuilder();
      _G_nsimilar = $v.G_nsimilar?.toBuilder();
      _G_regex = $v.G_regex?.toBuilder();
      _G_similar = $v.G_similar?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gcitext_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gcitext_comparison_exp;
  }

  @override
  void update(void Function(Gcitext_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gcitext_comparison_exp build() => _build();

  _$Gcitext_comparison_exp _build() {
    _$Gcitext_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Gcitext_comparison_exp._(
              G_eq: _G_eq?.build(),
              G_gt: _G_gt?.build(),
              G_gte: _G_gte?.build(),
              G_ilike: _G_ilike?.build(),
              G_in: _G_in?.build(),
              G_iregex: _G_iregex?.build(),
              G_is_null: G_is_null,
              G_like: _G_like?.build(),
              G_lt: _G_lt?.build(),
              G_lte: _G_lte?.build(),
              G_neq: _G_neq?.build(),
              G_nilike: _G_nilike?.build(),
              G_nin: _G_nin?.build(),
              G_niregex: _G_niregex?.build(),
              G_nlike: _G_nlike?.build(),
              G_nregex: _G_nregex?.build(),
              G_nsimilar: _G_nsimilar?.build(),
              G_regex: _G_regex?.build(),
              G_similar: _G_similar?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_eq';
        _G_eq?.build();
        _$failedField = 'G_gt';
        _G_gt?.build();
        _$failedField = 'G_gte';
        _G_gte?.build();
        _$failedField = 'G_ilike';
        _G_ilike?.build();
        _$failedField = 'G_in';
        _G_in?.build();
        _$failedField = 'G_iregex';
        _G_iregex?.build();

        _$failedField = 'G_like';
        _G_like?.build();
        _$failedField = 'G_lt';
        _G_lt?.build();
        _$failedField = 'G_lte';
        _G_lte?.build();
        _$failedField = 'G_neq';
        _G_neq?.build();
        _$failedField = 'G_nilike';
        _G_nilike?.build();
        _$failedField = 'G_nin';
        _G_nin?.build();
        _$failedField = 'G_niregex';
        _G_niregex?.build();
        _$failedField = 'G_nlike';
        _G_nlike?.build();
        _$failedField = 'G_nregex';
        _G_nregex?.build();
        _$failedField = 'G_nsimilar';
        _G_nsimilar?.build();
        _$failedField = 'G_regex';
        _G_regex?.build();
        _$failedField = 'G_similar';
        _G_similar?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gcitext_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_aggregate_bool_exp extends Gfiles_aggregate_bool_exp {
  @override
  final Gfiles_aggregate_bool_exp_bool_and? bool_and;
  @override
  final Gfiles_aggregate_bool_exp_bool_or? bool_or;
  @override
  final Gfiles_aggregate_bool_exp_count? count;

  factory _$Gfiles_aggregate_bool_exp(
          [void Function(Gfiles_aggregate_bool_expBuilder)? updates]) =>
      (new Gfiles_aggregate_bool_expBuilder()..update(updates))._build();

  _$Gfiles_aggregate_bool_exp._({this.bool_and, this.bool_or, this.count})
      : super._();

  @override
  Gfiles_aggregate_bool_exp rebuild(
          void Function(Gfiles_aggregate_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_aggregate_bool_expBuilder toBuilder() =>
      new Gfiles_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_aggregate_bool_exp &&
        bool_and == other.bool_and &&
        bool_or == other.bool_or &&
        count == other.count;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, bool_and.hashCode), bool_or.hashCode), count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_aggregate_bool_exp')
          ..add('bool_and', bool_and)
          ..add('bool_or', bool_or)
          ..add('count', count))
        .toString();
  }
}

class Gfiles_aggregate_bool_expBuilder
    implements
        Builder<Gfiles_aggregate_bool_exp, Gfiles_aggregate_bool_expBuilder> {
  _$Gfiles_aggregate_bool_exp? _$v;

  Gfiles_aggregate_bool_exp_bool_andBuilder? _bool_and;
  Gfiles_aggregate_bool_exp_bool_andBuilder get bool_and =>
      _$this._bool_and ??= new Gfiles_aggregate_bool_exp_bool_andBuilder();
  set bool_and(Gfiles_aggregate_bool_exp_bool_andBuilder? bool_and) =>
      _$this._bool_and = bool_and;

  Gfiles_aggregate_bool_exp_bool_orBuilder? _bool_or;
  Gfiles_aggregate_bool_exp_bool_orBuilder get bool_or =>
      _$this._bool_or ??= new Gfiles_aggregate_bool_exp_bool_orBuilder();
  set bool_or(Gfiles_aggregate_bool_exp_bool_orBuilder? bool_or) =>
      _$this._bool_or = bool_or;

  Gfiles_aggregate_bool_exp_countBuilder? _count;
  Gfiles_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??= new Gfiles_aggregate_bool_exp_countBuilder();
  set count(Gfiles_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  Gfiles_aggregate_bool_expBuilder();

  Gfiles_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bool_and = $v.bool_and?.toBuilder();
      _bool_or = $v.bool_or?.toBuilder();
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_aggregate_bool_exp;
  }

  @override
  void update(void Function(Gfiles_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_aggregate_bool_exp build() => _build();

  _$Gfiles_aggregate_bool_exp _build() {
    _$Gfiles_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_aggregate_bool_exp._(
              bool_and: _bool_and?.build(),
              bool_or: _bool_or?.build(),
              count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'bool_and';
        _bool_and?.build();
        _$failedField = 'bool_or';
        _bool_or?.build();
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_aggregate_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_aggregate_bool_exp_bool_and
    extends Gfiles_aggregate_bool_exp_bool_and {
  @override
  final Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns
      arguments;
  @override
  final bool? distinct;
  @override
  final Gfiles_bool_exp? filter;
  @override
  final GBoolean_comparison_exp predicate;

  factory _$Gfiles_aggregate_bool_exp_bool_and(
          [void Function(Gfiles_aggregate_bool_exp_bool_andBuilder)?
              updates]) =>
      (new Gfiles_aggregate_bool_exp_bool_andBuilder()..update(updates))
          ._build();

  _$Gfiles_aggregate_bool_exp_bool_and._(
      {required this.arguments,
      this.distinct,
      this.filter,
      required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        arguments, r'Gfiles_aggregate_bool_exp_bool_and', 'arguments');
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gfiles_aggregate_bool_exp_bool_and', 'predicate');
  }

  @override
  Gfiles_aggregate_bool_exp_bool_and rebuild(
          void Function(Gfiles_aggregate_bool_exp_bool_andBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_aggregate_bool_exp_bool_andBuilder toBuilder() =>
      new Gfiles_aggregate_bool_exp_bool_andBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_aggregate_bool_exp_bool_and &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_aggregate_bool_exp_bool_and')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gfiles_aggregate_bool_exp_bool_andBuilder
    implements
        Builder<Gfiles_aggregate_bool_exp_bool_and,
            Gfiles_aggregate_bool_exp_bool_andBuilder> {
  _$Gfiles_aggregate_bool_exp_bool_and? _$v;

  Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns?
      _arguments;
  Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns?
      get arguments => _$this._arguments;
  set arguments(
          Gfiles_select_column_files_aggregate_bool_exp_bool_and_arguments_columns?
              arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gfiles_bool_expBuilder? _filter;
  Gfiles_bool_expBuilder get filter =>
      _$this._filter ??= new Gfiles_bool_expBuilder();
  set filter(Gfiles_bool_expBuilder? filter) => _$this._filter = filter;

  GBoolean_comparison_expBuilder? _predicate;
  GBoolean_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GBoolean_comparison_expBuilder();
  set predicate(GBoolean_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gfiles_aggregate_bool_exp_bool_andBuilder();

  Gfiles_aggregate_bool_exp_bool_andBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments;
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_aggregate_bool_exp_bool_and other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_aggregate_bool_exp_bool_and;
  }

  @override
  void update(
      void Function(Gfiles_aggregate_bool_exp_bool_andBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_aggregate_bool_exp_bool_and build() => _build();

  _$Gfiles_aggregate_bool_exp_bool_and _build() {
    _$Gfiles_aggregate_bool_exp_bool_and _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_aggregate_bool_exp_bool_and._(
              arguments: BuiltValueNullFieldError.checkNotNull(arguments,
                  r'Gfiles_aggregate_bool_exp_bool_and', 'arguments'),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_aggregate_bool_exp_bool_and', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_aggregate_bool_exp_bool_or
    extends Gfiles_aggregate_bool_exp_bool_or {
  @override
  final Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns
      arguments;
  @override
  final bool? distinct;
  @override
  final Gfiles_bool_exp? filter;
  @override
  final GBoolean_comparison_exp predicate;

  factory _$Gfiles_aggregate_bool_exp_bool_or(
          [void Function(Gfiles_aggregate_bool_exp_bool_orBuilder)? updates]) =>
      (new Gfiles_aggregate_bool_exp_bool_orBuilder()..update(updates))
          ._build();

  _$Gfiles_aggregate_bool_exp_bool_or._(
      {required this.arguments,
      this.distinct,
      this.filter,
      required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        arguments, r'Gfiles_aggregate_bool_exp_bool_or', 'arguments');
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gfiles_aggregate_bool_exp_bool_or', 'predicate');
  }

  @override
  Gfiles_aggregate_bool_exp_bool_or rebuild(
          void Function(Gfiles_aggregate_bool_exp_bool_orBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_aggregate_bool_exp_bool_orBuilder toBuilder() =>
      new Gfiles_aggregate_bool_exp_bool_orBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_aggregate_bool_exp_bool_or &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_aggregate_bool_exp_bool_or')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gfiles_aggregate_bool_exp_bool_orBuilder
    implements
        Builder<Gfiles_aggregate_bool_exp_bool_or,
            Gfiles_aggregate_bool_exp_bool_orBuilder> {
  _$Gfiles_aggregate_bool_exp_bool_or? _$v;

  Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns?
      _arguments;
  Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns?
      get arguments => _$this._arguments;
  set arguments(
          Gfiles_select_column_files_aggregate_bool_exp_bool_or_arguments_columns?
              arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gfiles_bool_expBuilder? _filter;
  Gfiles_bool_expBuilder get filter =>
      _$this._filter ??= new Gfiles_bool_expBuilder();
  set filter(Gfiles_bool_expBuilder? filter) => _$this._filter = filter;

  GBoolean_comparison_expBuilder? _predicate;
  GBoolean_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GBoolean_comparison_expBuilder();
  set predicate(GBoolean_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gfiles_aggregate_bool_exp_bool_orBuilder();

  Gfiles_aggregate_bool_exp_bool_orBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments;
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_aggregate_bool_exp_bool_or other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_aggregate_bool_exp_bool_or;
  }

  @override
  void update(
      void Function(Gfiles_aggregate_bool_exp_bool_orBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_aggregate_bool_exp_bool_or build() => _build();

  _$Gfiles_aggregate_bool_exp_bool_or _build() {
    _$Gfiles_aggregate_bool_exp_bool_or _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_aggregate_bool_exp_bool_or._(
              arguments: BuiltValueNullFieldError.checkNotNull(
                  arguments, r'Gfiles_aggregate_bool_exp_bool_or', 'arguments'),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_aggregate_bool_exp_bool_or', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_aggregate_bool_exp_count
    extends Gfiles_aggregate_bool_exp_count {
  @override
  final BuiltList<Gfiles_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final Gfiles_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$Gfiles_aggregate_bool_exp_count(
          [void Function(Gfiles_aggregate_bool_exp_countBuilder)? updates]) =>
      (new Gfiles_aggregate_bool_exp_countBuilder()..update(updates))._build();

  _$Gfiles_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gfiles_aggregate_bool_exp_count', 'predicate');
  }

  @override
  Gfiles_aggregate_bool_exp_count rebuild(
          void Function(Gfiles_aggregate_bool_exp_countBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_aggregate_bool_exp_countBuilder toBuilder() =>
      new Gfiles_aggregate_bool_exp_countBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gfiles_aggregate_bool_exp_countBuilder
    implements
        Builder<Gfiles_aggregate_bool_exp_count,
            Gfiles_aggregate_bool_exp_countBuilder> {
  _$Gfiles_aggregate_bool_exp_count? _$v;

  ListBuilder<Gfiles_select_column>? _arguments;
  ListBuilder<Gfiles_select_column> get arguments =>
      _$this._arguments ??= new ListBuilder<Gfiles_select_column>();
  set arguments(ListBuilder<Gfiles_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gfiles_bool_expBuilder? _filter;
  Gfiles_bool_expBuilder get filter =>
      _$this._filter ??= new Gfiles_bool_expBuilder();
  set filter(Gfiles_bool_expBuilder? filter) => _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gfiles_aggregate_bool_exp_countBuilder();

  Gfiles_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_aggregate_bool_exp_count;
  }

  @override
  void update(void Function(Gfiles_aggregate_bool_exp_countBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_aggregate_bool_exp_count build() => _build();

  _$Gfiles_aggregate_bool_exp_count _build() {
    _$Gfiles_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_aggregate_bool_exp_count', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_aggregate_order_by extends Gfiles_aggregate_order_by {
  @override
  final Gfiles_avg_order_by? avg;
  @override
  final Gorder_by? count;
  @override
  final Gfiles_max_order_by? max;
  @override
  final Gfiles_min_order_by? min;
  @override
  final Gfiles_stddev_order_by? stddev;
  @override
  final Gfiles_stddev_pop_order_by? stddev_pop;
  @override
  final Gfiles_stddev_samp_order_by? stddev_samp;
  @override
  final Gfiles_sum_order_by? sum;
  @override
  final Gfiles_var_pop_order_by? var_pop;
  @override
  final Gfiles_var_samp_order_by? var_samp;
  @override
  final Gfiles_variance_order_by? variance;

  factory _$Gfiles_aggregate_order_by(
          [void Function(Gfiles_aggregate_order_byBuilder)? updates]) =>
      (new Gfiles_aggregate_order_byBuilder()..update(updates))._build();

  _$Gfiles_aggregate_order_by._(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance})
      : super._();

  @override
  Gfiles_aggregate_order_by rebuild(
          void Function(Gfiles_aggregate_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_aggregate_order_byBuilder toBuilder() =>
      new Gfiles_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_aggregate_order_by &&
        avg == other.avg &&
        count == other.count &&
        max == other.max &&
        min == other.min &&
        stddev == other.stddev &&
        stddev_pop == other.stddev_pop &&
        stddev_samp == other.stddev_samp &&
        sum == other.sum &&
        var_pop == other.var_pop &&
        var_samp == other.var_samp &&
        variance == other.variance;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, avg.hashCode),
                                            count.hashCode),
                                        max.hashCode),
                                    min.hashCode),
                                stddev.hashCode),
                            stddev_pop.hashCode),
                        stddev_samp.hashCode),
                    sum.hashCode),
                var_pop.hashCode),
            var_samp.hashCode),
        variance.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_aggregate_order_by')
          ..add('avg', avg)
          ..add('count', count)
          ..add('max', max)
          ..add('min', min)
          ..add('stddev', stddev)
          ..add('stddev_pop', stddev_pop)
          ..add('stddev_samp', stddev_samp)
          ..add('sum', sum)
          ..add('var_pop', var_pop)
          ..add('var_samp', var_samp)
          ..add('variance', variance))
        .toString();
  }
}

class Gfiles_aggregate_order_byBuilder
    implements
        Builder<Gfiles_aggregate_order_by, Gfiles_aggregate_order_byBuilder> {
  _$Gfiles_aggregate_order_by? _$v;

  Gfiles_avg_order_byBuilder? _avg;
  Gfiles_avg_order_byBuilder get avg =>
      _$this._avg ??= new Gfiles_avg_order_byBuilder();
  set avg(Gfiles_avg_order_byBuilder? avg) => _$this._avg = avg;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  Gfiles_max_order_byBuilder? _max;
  Gfiles_max_order_byBuilder get max =>
      _$this._max ??= new Gfiles_max_order_byBuilder();
  set max(Gfiles_max_order_byBuilder? max) => _$this._max = max;

  Gfiles_min_order_byBuilder? _min;
  Gfiles_min_order_byBuilder get min =>
      _$this._min ??= new Gfiles_min_order_byBuilder();
  set min(Gfiles_min_order_byBuilder? min) => _$this._min = min;

  Gfiles_stddev_order_byBuilder? _stddev;
  Gfiles_stddev_order_byBuilder get stddev =>
      _$this._stddev ??= new Gfiles_stddev_order_byBuilder();
  set stddev(Gfiles_stddev_order_byBuilder? stddev) => _$this._stddev = stddev;

  Gfiles_stddev_pop_order_byBuilder? _stddev_pop;
  Gfiles_stddev_pop_order_byBuilder get stddev_pop =>
      _$this._stddev_pop ??= new Gfiles_stddev_pop_order_byBuilder();
  set stddev_pop(Gfiles_stddev_pop_order_byBuilder? stddev_pop) =>
      _$this._stddev_pop = stddev_pop;

  Gfiles_stddev_samp_order_byBuilder? _stddev_samp;
  Gfiles_stddev_samp_order_byBuilder get stddev_samp =>
      _$this._stddev_samp ??= new Gfiles_stddev_samp_order_byBuilder();
  set stddev_samp(Gfiles_stddev_samp_order_byBuilder? stddev_samp) =>
      _$this._stddev_samp = stddev_samp;

  Gfiles_sum_order_byBuilder? _sum;
  Gfiles_sum_order_byBuilder get sum =>
      _$this._sum ??= new Gfiles_sum_order_byBuilder();
  set sum(Gfiles_sum_order_byBuilder? sum) => _$this._sum = sum;

  Gfiles_var_pop_order_byBuilder? _var_pop;
  Gfiles_var_pop_order_byBuilder get var_pop =>
      _$this._var_pop ??= new Gfiles_var_pop_order_byBuilder();
  set var_pop(Gfiles_var_pop_order_byBuilder? var_pop) =>
      _$this._var_pop = var_pop;

  Gfiles_var_samp_order_byBuilder? _var_samp;
  Gfiles_var_samp_order_byBuilder get var_samp =>
      _$this._var_samp ??= new Gfiles_var_samp_order_byBuilder();
  set var_samp(Gfiles_var_samp_order_byBuilder? var_samp) =>
      _$this._var_samp = var_samp;

  Gfiles_variance_order_byBuilder? _variance;
  Gfiles_variance_order_byBuilder get variance =>
      _$this._variance ??= new Gfiles_variance_order_byBuilder();
  set variance(Gfiles_variance_order_byBuilder? variance) =>
      _$this._variance = variance;

  Gfiles_aggregate_order_byBuilder();

  Gfiles_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _avg = $v.avg?.toBuilder();
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _stddev = $v.stddev?.toBuilder();
      _stddev_pop = $v.stddev_pop?.toBuilder();
      _stddev_samp = $v.stddev_samp?.toBuilder();
      _sum = $v.sum?.toBuilder();
      _var_pop = $v.var_pop?.toBuilder();
      _var_samp = $v.var_samp?.toBuilder();
      _variance = $v.variance?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_aggregate_order_by;
  }

  @override
  void update(void Function(Gfiles_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_aggregate_order_by build() => _build();

  _$Gfiles_aggregate_order_by _build() {
    _$Gfiles_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_aggregate_order_by._(
              avg: _avg?.build(),
              count: count,
              max: _max?.build(),
              min: _min?.build(),
              stddev: _stddev?.build(),
              stddev_pop: _stddev_pop?.build(),
              stddev_samp: _stddev_samp?.build(),
              sum: _sum?.build(),
              var_pop: _var_pop?.build(),
              var_samp: _var_samp?.build(),
              variance: _variance?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avg';
        _avg?.build();

        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
        _$failedField = 'stddev';
        _stddev?.build();
        _$failedField = 'stddev_pop';
        _stddev_pop?.build();
        _$failedField = 'stddev_samp';
        _stddev_samp?.build();
        _$failedField = 'sum';
        _sum?.build();
        _$failedField = 'var_pop';
        _var_pop?.build();
        _$failedField = 'var_samp';
        _var_samp?.build();
        _$failedField = 'variance';
        _variance?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_aggregate_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_arr_rel_insert_input extends Gfiles_arr_rel_insert_input {
  @override
  final BuiltList<Gfiles_insert_input> data;
  @override
  final Gfiles_on_conflict? on_conflict;

  factory _$Gfiles_arr_rel_insert_input(
          [void Function(Gfiles_arr_rel_insert_inputBuilder)? updates]) =>
      (new Gfiles_arr_rel_insert_inputBuilder()..update(updates))._build();

  _$Gfiles_arr_rel_insert_input._({required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'Gfiles_arr_rel_insert_input', 'data');
  }

  @override
  Gfiles_arr_rel_insert_input rebuild(
          void Function(Gfiles_arr_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_arr_rel_insert_inputBuilder toBuilder() =>
      new Gfiles_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class Gfiles_arr_rel_insert_inputBuilder
    implements
        Builder<Gfiles_arr_rel_insert_input,
            Gfiles_arr_rel_insert_inputBuilder> {
  _$Gfiles_arr_rel_insert_input? _$v;

  ListBuilder<Gfiles_insert_input>? _data;
  ListBuilder<Gfiles_insert_input> get data =>
      _$this._data ??= new ListBuilder<Gfiles_insert_input>();
  set data(ListBuilder<Gfiles_insert_input>? data) => _$this._data = data;

  Gfiles_on_conflictBuilder? _on_conflict;
  Gfiles_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new Gfiles_on_conflictBuilder();
  set on_conflict(Gfiles_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  Gfiles_arr_rel_insert_inputBuilder();

  Gfiles_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_arr_rel_insert_input;
  }

  @override
  void update(void Function(Gfiles_arr_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_arr_rel_insert_input build() => _build();

  _$Gfiles_arr_rel_insert_input _build() {
    _$Gfiles_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_arr_rel_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_avg_order_by extends Gfiles_avg_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_avg_order_by(
          [void Function(Gfiles_avg_order_byBuilder)? updates]) =>
      (new Gfiles_avg_order_byBuilder()..update(updates))._build();

  _$Gfiles_avg_order_by._({this.size}) : super._();

  @override
  Gfiles_avg_order_by rebuild(
          void Function(Gfiles_avg_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_avg_order_byBuilder toBuilder() =>
      new Gfiles_avg_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_avg_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_avg_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_avg_order_byBuilder
    implements Builder<Gfiles_avg_order_by, Gfiles_avg_order_byBuilder> {
  _$Gfiles_avg_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_avg_order_byBuilder();

  Gfiles_avg_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_avg_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_avg_order_by;
  }

  @override
  void update(void Function(Gfiles_avg_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_avg_order_by build() => _build();

  _$Gfiles_avg_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_avg_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_bool_exp extends Gfiles_bool_exp {
  @override
  final BuiltList<Gfiles_bool_exp>? G_and;
  @override
  final Gfiles_bool_exp? G_not;
  @override
  final BuiltList<Gfiles_bool_exp>? G_or;
  @override
  final Gbuckets_bool_exp? bucket;
  @override
  final GString_comparison_exp? bucketId;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final GString_comparison_exp? etag;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GBoolean_comparison_exp? isUploaded;
  @override
  final GString_comparison_exp? mimeType;
  @override
  final GString_comparison_exp? name;
  @override
  final GInt_comparison_exp? size;
  @override
  final Gtimestamptz_comparison_exp? updatedAt;
  @override
  final Guuid_comparison_exp? uploadedByUserId;

  factory _$Gfiles_bool_exp([void Function(Gfiles_bool_expBuilder)? updates]) =>
      (new Gfiles_bool_expBuilder()..update(updates))._build();

  _$Gfiles_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.bucket,
      this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.isUploaded,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_bool_exp rebuild(void Function(Gfiles_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_bool_expBuilder toBuilder() =>
      new Gfiles_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        bucket == other.bucket &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        isUploaded == other.isUploaded &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc($jc(0, G_and.hashCode),
                                                        G_not.hashCode),
                                                    G_or.hashCode),
                                                bucket.hashCode),
                                            bucketId.hashCode),
                                        createdAt.hashCode),
                                    etag.hashCode),
                                id.hashCode),
                            isUploaded.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('bucket', bucket)
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('isUploaded', isUploaded)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_bool_expBuilder
    implements Builder<Gfiles_bool_exp, Gfiles_bool_expBuilder> {
  _$Gfiles_bool_exp? _$v;

  ListBuilder<Gfiles_bool_exp>? _G_and;
  ListBuilder<Gfiles_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Gfiles_bool_exp>();
  set G_and(ListBuilder<Gfiles_bool_exp>? G_and) => _$this._G_and = G_and;

  Gfiles_bool_expBuilder? _G_not;
  Gfiles_bool_expBuilder get G_not =>
      _$this._G_not ??= new Gfiles_bool_expBuilder();
  set G_not(Gfiles_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Gfiles_bool_exp>? _G_or;
  ListBuilder<Gfiles_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Gfiles_bool_exp>();
  set G_or(ListBuilder<Gfiles_bool_exp>? G_or) => _$this._G_or = G_or;

  Gbuckets_bool_expBuilder? _bucket;
  Gbuckets_bool_expBuilder get bucket =>
      _$this._bucket ??= new Gbuckets_bool_expBuilder();
  set bucket(Gbuckets_bool_expBuilder? bucket) => _$this._bucket = bucket;

  GString_comparison_expBuilder? _bucketId;
  GString_comparison_expBuilder get bucketId =>
      _$this._bucketId ??= new GString_comparison_expBuilder();
  set bucketId(GString_comparison_expBuilder? bucketId) =>
      _$this._bucketId = bucketId;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GString_comparison_expBuilder? _etag;
  GString_comparison_expBuilder get etag =>
      _$this._etag ??= new GString_comparison_expBuilder();
  set etag(GString_comparison_expBuilder? etag) => _$this._etag = etag;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GBoolean_comparison_expBuilder? _isUploaded;
  GBoolean_comparison_expBuilder get isUploaded =>
      _$this._isUploaded ??= new GBoolean_comparison_expBuilder();
  set isUploaded(GBoolean_comparison_expBuilder? isUploaded) =>
      _$this._isUploaded = isUploaded;

  GString_comparison_expBuilder? _mimeType;
  GString_comparison_expBuilder get mimeType =>
      _$this._mimeType ??= new GString_comparison_expBuilder();
  set mimeType(GString_comparison_expBuilder? mimeType) =>
      _$this._mimeType = mimeType;

  GString_comparison_expBuilder? _name;
  GString_comparison_expBuilder get name =>
      _$this._name ??= new GString_comparison_expBuilder();
  set name(GString_comparison_expBuilder? name) => _$this._name = name;

  GInt_comparison_expBuilder? _size;
  GInt_comparison_expBuilder get size =>
      _$this._size ??= new GInt_comparison_expBuilder();
  set size(GInt_comparison_expBuilder? size) => _$this._size = size;

  Gtimestamptz_comparison_expBuilder? _updatedAt;
  Gtimestamptz_comparison_expBuilder get updatedAt =>
      _$this._updatedAt ??= new Gtimestamptz_comparison_expBuilder();
  set updatedAt(Gtimestamptz_comparison_expBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Guuid_comparison_expBuilder? _uploadedByUserId;
  Guuid_comparison_expBuilder get uploadedByUserId =>
      _$this._uploadedByUserId ??= new Guuid_comparison_expBuilder();
  set uploadedByUserId(Guuid_comparison_expBuilder? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_bool_expBuilder();

  Gfiles_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _bucket = $v.bucket?.toBuilder();
      _bucketId = $v.bucketId?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _etag = $v.etag?.toBuilder();
      _id = $v.id?.toBuilder();
      _isUploaded = $v.isUploaded?.toBuilder();
      _mimeType = $v.mimeType?.toBuilder();
      _name = $v.name?.toBuilder();
      _size = $v.size?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _uploadedByUserId = $v.uploadedByUserId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_bool_exp;
  }

  @override
  void update(void Function(Gfiles_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_bool_exp build() => _build();

  _$Gfiles_bool_exp _build() {
    _$Gfiles_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              bucket: _bucket?.build(),
              bucketId: _bucketId?.build(),
              createdAt: _createdAt?.build(),
              etag: _etag?.build(),
              id: _id?.build(),
              isUploaded: _isUploaded?.build(),
              mimeType: _mimeType?.build(),
              name: _name?.build(),
              size: _size?.build(),
              updatedAt: _updatedAt?.build(),
              uploadedByUserId: _uploadedByUserId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'bucket';
        _bucket?.build();
        _$failedField = 'bucketId';
        _bucketId?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'etag';
        _etag?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'isUploaded';
        _isUploaded?.build();
        _$failedField = 'mimeType';
        _mimeType?.build();
        _$failedField = 'name';
        _name?.build();
        _$failedField = 'size';
        _size?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'uploadedByUserId';
        _uploadedByUserId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_inc_input extends Gfiles_inc_input {
  @override
  final int? size;

  factory _$Gfiles_inc_input(
          [void Function(Gfiles_inc_inputBuilder)? updates]) =>
      (new Gfiles_inc_inputBuilder()..update(updates))._build();

  _$Gfiles_inc_input._({this.size}) : super._();

  @override
  Gfiles_inc_input rebuild(void Function(Gfiles_inc_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_inc_inputBuilder toBuilder() =>
      new Gfiles_inc_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_inc_input && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_inc_input')..add('size', size))
        .toString();
  }
}

class Gfiles_inc_inputBuilder
    implements Builder<Gfiles_inc_input, Gfiles_inc_inputBuilder> {
  _$Gfiles_inc_input? _$v;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  Gfiles_inc_inputBuilder();

  Gfiles_inc_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_inc_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_inc_input;
  }

  @override
  void update(void Function(Gfiles_inc_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_inc_input build() => _build();

  _$Gfiles_inc_input _build() {
    final _$result = _$v ?? new _$Gfiles_inc_input._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_insert_input extends Gfiles_insert_input {
  @override
  final Gbuckets_obj_rel_insert_input? bucket;
  @override
  final String? bucketId;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? etag;
  @override
  final Guuid? id;
  @override
  final bool? isUploaded;
  @override
  final String? mimeType;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Guuid? uploadedByUserId;

  factory _$Gfiles_insert_input(
          [void Function(Gfiles_insert_inputBuilder)? updates]) =>
      (new Gfiles_insert_inputBuilder()..update(updates))._build();

  _$Gfiles_insert_input._(
      {this.bucket,
      this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.isUploaded,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_insert_input rebuild(
          void Function(Gfiles_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_insert_inputBuilder toBuilder() =>
      new Gfiles_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_insert_input &&
        bucket == other.bucket &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        isUploaded == other.isUploaded &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, bucket.hashCode),
                                            bucketId.hashCode),
                                        createdAt.hashCode),
                                    etag.hashCode),
                                id.hashCode),
                            isUploaded.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_insert_input')
          ..add('bucket', bucket)
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('isUploaded', isUploaded)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_insert_inputBuilder
    implements Builder<Gfiles_insert_input, Gfiles_insert_inputBuilder> {
  _$Gfiles_insert_input? _$v;

  Gbuckets_obj_rel_insert_inputBuilder? _bucket;
  Gbuckets_obj_rel_insert_inputBuilder get bucket =>
      _$this._bucket ??= new Gbuckets_obj_rel_insert_inputBuilder();
  set bucket(Gbuckets_obj_rel_insert_inputBuilder? bucket) =>
      _$this._bucket = bucket;

  String? _bucketId;
  String? get bucketId => _$this._bucketId;
  set bucketId(String? bucketId) => _$this._bucketId = bucketId;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _etag;
  String? get etag => _$this._etag;
  set etag(String? etag) => _$this._etag = etag;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isUploaded;
  bool? get isUploaded => _$this._isUploaded;
  set isUploaded(bool? isUploaded) => _$this._isUploaded = isUploaded;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GuuidBuilder? _uploadedByUserId;
  GuuidBuilder get uploadedByUserId =>
      _$this._uploadedByUserId ??= new GuuidBuilder();
  set uploadedByUserId(GuuidBuilder? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_insert_inputBuilder();

  Gfiles_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucket = $v.bucket?.toBuilder();
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt?.toBuilder();
      _etag = $v.etag;
      _id = $v.id?.toBuilder();
      _isUploaded = $v.isUploaded;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt?.toBuilder();
      _uploadedByUserId = $v.uploadedByUserId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_insert_input;
  }

  @override
  void update(void Function(Gfiles_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_insert_input build() => _build();

  _$Gfiles_insert_input _build() {
    _$Gfiles_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_insert_input._(
              bucket: _bucket?.build(),
              bucketId: bucketId,
              createdAt: _createdAt?.build(),
              etag: etag,
              id: _id?.build(),
              isUploaded: isUploaded,
              mimeType: mimeType,
              name: name,
              size: size,
              updatedAt: _updatedAt?.build(),
              uploadedByUserId: _uploadedByUserId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'bucket';
        _bucket?.build();

        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'uploadedByUserId';
        _uploadedByUserId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_max_order_by extends Gfiles_max_order_by {
  @override
  final Gorder_by? bucketId;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? etag;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? mimeType;
  @override
  final Gorder_by? name;
  @override
  final Gorder_by? size;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gorder_by? uploadedByUserId;

  factory _$Gfiles_max_order_by(
          [void Function(Gfiles_max_order_byBuilder)? updates]) =>
      (new Gfiles_max_order_byBuilder()..update(updates))._build();

  _$Gfiles_max_order_by._(
      {this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_max_order_by rebuild(
          void Function(Gfiles_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_max_order_byBuilder toBuilder() =>
      new Gfiles_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_max_order_by &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, bucketId.hashCode),
                                    createdAt.hashCode),
                                etag.hashCode),
                            id.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_max_order_by')
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_max_order_byBuilder
    implements Builder<Gfiles_max_order_by, Gfiles_max_order_byBuilder> {
  _$Gfiles_max_order_by? _$v;

  Gorder_by? _bucketId;
  Gorder_by? get bucketId => _$this._bucketId;
  set bucketId(Gorder_by? bucketId) => _$this._bucketId = bucketId;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _etag;
  Gorder_by? get etag => _$this._etag;
  set etag(Gorder_by? etag) => _$this._etag = etag;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _mimeType;
  Gorder_by? get mimeType => _$this._mimeType;
  set mimeType(Gorder_by? mimeType) => _$this._mimeType = mimeType;

  Gorder_by? _name;
  Gorder_by? get name => _$this._name;
  set name(Gorder_by? name) => _$this._name = name;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gorder_by? _uploadedByUserId;
  Gorder_by? get uploadedByUserId => _$this._uploadedByUserId;
  set uploadedByUserId(Gorder_by? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_max_order_byBuilder();

  Gfiles_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt;
      _etag = $v.etag;
      _id = $v.id;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt;
      _uploadedByUserId = $v.uploadedByUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_max_order_by;
  }

  @override
  void update(void Function(Gfiles_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_max_order_by build() => _build();

  _$Gfiles_max_order_by _build() {
    final _$result = _$v ??
        new _$Gfiles_max_order_by._(
            bucketId: bucketId,
            createdAt: createdAt,
            etag: etag,
            id: id,
            mimeType: mimeType,
            name: name,
            size: size,
            updatedAt: updatedAt,
            uploadedByUserId: uploadedByUserId);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_min_order_by extends Gfiles_min_order_by {
  @override
  final Gorder_by? bucketId;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? etag;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? mimeType;
  @override
  final Gorder_by? name;
  @override
  final Gorder_by? size;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gorder_by? uploadedByUserId;

  factory _$Gfiles_min_order_by(
          [void Function(Gfiles_min_order_byBuilder)? updates]) =>
      (new Gfiles_min_order_byBuilder()..update(updates))._build();

  _$Gfiles_min_order_by._(
      {this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_min_order_by rebuild(
          void Function(Gfiles_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_min_order_byBuilder toBuilder() =>
      new Gfiles_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_min_order_by &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, bucketId.hashCode),
                                    createdAt.hashCode),
                                etag.hashCode),
                            id.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_min_order_by')
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_min_order_byBuilder
    implements Builder<Gfiles_min_order_by, Gfiles_min_order_byBuilder> {
  _$Gfiles_min_order_by? _$v;

  Gorder_by? _bucketId;
  Gorder_by? get bucketId => _$this._bucketId;
  set bucketId(Gorder_by? bucketId) => _$this._bucketId = bucketId;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _etag;
  Gorder_by? get etag => _$this._etag;
  set etag(Gorder_by? etag) => _$this._etag = etag;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _mimeType;
  Gorder_by? get mimeType => _$this._mimeType;
  set mimeType(Gorder_by? mimeType) => _$this._mimeType = mimeType;

  Gorder_by? _name;
  Gorder_by? get name => _$this._name;
  set name(Gorder_by? name) => _$this._name = name;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gorder_by? _uploadedByUserId;
  Gorder_by? get uploadedByUserId => _$this._uploadedByUserId;
  set uploadedByUserId(Gorder_by? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_min_order_byBuilder();

  Gfiles_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt;
      _etag = $v.etag;
      _id = $v.id;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt;
      _uploadedByUserId = $v.uploadedByUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_min_order_by;
  }

  @override
  void update(void Function(Gfiles_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_min_order_by build() => _build();

  _$Gfiles_min_order_by _build() {
    final _$result = _$v ??
        new _$Gfiles_min_order_by._(
            bucketId: bucketId,
            createdAt: createdAt,
            etag: etag,
            id: id,
            mimeType: mimeType,
            name: name,
            size: size,
            updatedAt: updatedAt,
            uploadedByUserId: uploadedByUserId);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_on_conflict extends Gfiles_on_conflict {
  @override
  final Gfiles_constraint constraint;
  @override
  final BuiltList<Gfiles_update_column> update_columns;
  @override
  final Gfiles_bool_exp? where;

  factory _$Gfiles_on_conflict(
          [void Function(Gfiles_on_conflictBuilder)? updates]) =>
      (new Gfiles_on_conflictBuilder()..update(updates))._build();

  _$Gfiles_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Gfiles_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Gfiles_on_conflict', 'update_columns');
  }

  @override
  Gfiles_on_conflict rebuild(
          void Function(Gfiles_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_on_conflictBuilder toBuilder() =>
      new Gfiles_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Gfiles_on_conflictBuilder
    implements Builder<Gfiles_on_conflict, Gfiles_on_conflictBuilder> {
  _$Gfiles_on_conflict? _$v;

  Gfiles_constraint? _constraint;
  Gfiles_constraint? get constraint => _$this._constraint;
  set constraint(Gfiles_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Gfiles_update_column>? _update_columns;
  ListBuilder<Gfiles_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<Gfiles_update_column>();
  set update_columns(ListBuilder<Gfiles_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Gfiles_bool_expBuilder? _where;
  Gfiles_bool_expBuilder get where =>
      _$this._where ??= new Gfiles_bool_expBuilder();
  set where(Gfiles_bool_expBuilder? where) => _$this._where = where;

  Gfiles_on_conflictBuilder();

  Gfiles_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_on_conflict;
  }

  @override
  void update(void Function(Gfiles_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_on_conflict build() => _build();

  _$Gfiles_on_conflict _build() {
    _$Gfiles_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Gfiles_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_order_by extends Gfiles_order_by {
  @override
  final Gbuckets_order_by? bucket;
  @override
  final Gorder_by? bucketId;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? etag;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? isUploaded;
  @override
  final Gorder_by? mimeType;
  @override
  final Gorder_by? name;
  @override
  final Gorder_by? size;
  @override
  final Gorder_by? updatedAt;
  @override
  final Gorder_by? uploadedByUserId;

  factory _$Gfiles_order_by([void Function(Gfiles_order_byBuilder)? updates]) =>
      (new Gfiles_order_byBuilder()..update(updates))._build();

  _$Gfiles_order_by._(
      {this.bucket,
      this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.isUploaded,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_order_by rebuild(void Function(Gfiles_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_order_byBuilder toBuilder() =>
      new Gfiles_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_order_by &&
        bucket == other.bucket &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        isUploaded == other.isUploaded &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, bucket.hashCode),
                                            bucketId.hashCode),
                                        createdAt.hashCode),
                                    etag.hashCode),
                                id.hashCode),
                            isUploaded.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_order_by')
          ..add('bucket', bucket)
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('isUploaded', isUploaded)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_order_byBuilder
    implements Builder<Gfiles_order_by, Gfiles_order_byBuilder> {
  _$Gfiles_order_by? _$v;

  Gbuckets_order_byBuilder? _bucket;
  Gbuckets_order_byBuilder get bucket =>
      _$this._bucket ??= new Gbuckets_order_byBuilder();
  set bucket(Gbuckets_order_byBuilder? bucket) => _$this._bucket = bucket;

  Gorder_by? _bucketId;
  Gorder_by? get bucketId => _$this._bucketId;
  set bucketId(Gorder_by? bucketId) => _$this._bucketId = bucketId;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _etag;
  Gorder_by? get etag => _$this._etag;
  set etag(Gorder_by? etag) => _$this._etag = etag;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _isUploaded;
  Gorder_by? get isUploaded => _$this._isUploaded;
  set isUploaded(Gorder_by? isUploaded) => _$this._isUploaded = isUploaded;

  Gorder_by? _mimeType;
  Gorder_by? get mimeType => _$this._mimeType;
  set mimeType(Gorder_by? mimeType) => _$this._mimeType = mimeType;

  Gorder_by? _name;
  Gorder_by? get name => _$this._name;
  set name(Gorder_by? name) => _$this._name = name;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gorder_by? _uploadedByUserId;
  Gorder_by? get uploadedByUserId => _$this._uploadedByUserId;
  set uploadedByUserId(Gorder_by? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_order_byBuilder();

  Gfiles_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucket = $v.bucket?.toBuilder();
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt;
      _etag = $v.etag;
      _id = $v.id;
      _isUploaded = $v.isUploaded;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt;
      _uploadedByUserId = $v.uploadedByUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_order_by;
  }

  @override
  void update(void Function(Gfiles_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_order_by build() => _build();

  _$Gfiles_order_by _build() {
    _$Gfiles_order_by _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_order_by._(
              bucket: _bucket?.build(),
              bucketId: bucketId,
              createdAt: createdAt,
              etag: etag,
              id: id,
              isUploaded: isUploaded,
              mimeType: mimeType,
              name: name,
              size: size,
              updatedAt: updatedAt,
              uploadedByUserId: uploadedByUserId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'bucket';
        _bucket?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_pk_columns_input extends Gfiles_pk_columns_input {
  @override
  final Guuid id;

  factory _$Gfiles_pk_columns_input(
          [void Function(Gfiles_pk_columns_inputBuilder)? updates]) =>
      (new Gfiles_pk_columns_inputBuilder()..update(updates))._build();

  _$Gfiles_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'Gfiles_pk_columns_input', 'id');
  }

  @override
  Gfiles_pk_columns_input rebuild(
          void Function(Gfiles_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_pk_columns_inputBuilder toBuilder() =>
      new Gfiles_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Gfiles_pk_columns_inputBuilder
    implements
        Builder<Gfiles_pk_columns_input, Gfiles_pk_columns_inputBuilder> {
  _$Gfiles_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  Gfiles_pk_columns_inputBuilder();

  Gfiles_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_pk_columns_input;
  }

  @override
  void update(void Function(Gfiles_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_pk_columns_input build() => _build();

  _$Gfiles_pk_columns_input _build() {
    _$Gfiles_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$Gfiles_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_set_input extends Gfiles_set_input {
  @override
  final String? bucketId;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? etag;
  @override
  final Guuid? id;
  @override
  final bool? isUploaded;
  @override
  final String? mimeType;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Guuid? uploadedByUserId;

  factory _$Gfiles_set_input(
          [void Function(Gfiles_set_inputBuilder)? updates]) =>
      (new Gfiles_set_inputBuilder()..update(updates))._build();

  _$Gfiles_set_input._(
      {this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.isUploaded,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_set_input rebuild(void Function(Gfiles_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_set_inputBuilder toBuilder() =>
      new Gfiles_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_set_input &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        isUploaded == other.isUploaded &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, bucketId.hashCode),
                                        createdAt.hashCode),
                                    etag.hashCode),
                                id.hashCode),
                            isUploaded.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_set_input')
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('isUploaded', isUploaded)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_set_inputBuilder
    implements Builder<Gfiles_set_input, Gfiles_set_inputBuilder> {
  _$Gfiles_set_input? _$v;

  String? _bucketId;
  String? get bucketId => _$this._bucketId;
  set bucketId(String? bucketId) => _$this._bucketId = bucketId;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _etag;
  String? get etag => _$this._etag;
  set etag(String? etag) => _$this._etag = etag;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isUploaded;
  bool? get isUploaded => _$this._isUploaded;
  set isUploaded(bool? isUploaded) => _$this._isUploaded = isUploaded;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GuuidBuilder? _uploadedByUserId;
  GuuidBuilder get uploadedByUserId =>
      _$this._uploadedByUserId ??= new GuuidBuilder();
  set uploadedByUserId(GuuidBuilder? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_set_inputBuilder();

  Gfiles_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt?.toBuilder();
      _etag = $v.etag;
      _id = $v.id?.toBuilder();
      _isUploaded = $v.isUploaded;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt?.toBuilder();
      _uploadedByUserId = $v.uploadedByUserId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_set_input;
  }

  @override
  void update(void Function(Gfiles_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_set_input build() => _build();

  _$Gfiles_set_input _build() {
    _$Gfiles_set_input _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_set_input._(
              bucketId: bucketId,
              createdAt: _createdAt?.build(),
              etag: etag,
              id: _id?.build(),
              isUploaded: isUploaded,
              mimeType: mimeType,
              name: name,
              size: size,
              updatedAt: _updatedAt?.build(),
              uploadedByUserId: _uploadedByUserId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'uploadedByUserId';
        _uploadedByUserId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_stddev_order_by extends Gfiles_stddev_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_stddev_order_by(
          [void Function(Gfiles_stddev_order_byBuilder)? updates]) =>
      (new Gfiles_stddev_order_byBuilder()..update(updates))._build();

  _$Gfiles_stddev_order_by._({this.size}) : super._();

  @override
  Gfiles_stddev_order_by rebuild(
          void Function(Gfiles_stddev_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_stddev_order_byBuilder toBuilder() =>
      new Gfiles_stddev_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_stddev_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_stddev_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_stddev_order_byBuilder
    implements Builder<Gfiles_stddev_order_by, Gfiles_stddev_order_byBuilder> {
  _$Gfiles_stddev_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_stddev_order_byBuilder();

  Gfiles_stddev_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_stddev_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_stddev_order_by;
  }

  @override
  void update(void Function(Gfiles_stddev_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_stddev_order_by build() => _build();

  _$Gfiles_stddev_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_stddev_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_stddev_pop_order_by extends Gfiles_stddev_pop_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_stddev_pop_order_by(
          [void Function(Gfiles_stddev_pop_order_byBuilder)? updates]) =>
      (new Gfiles_stddev_pop_order_byBuilder()..update(updates))._build();

  _$Gfiles_stddev_pop_order_by._({this.size}) : super._();

  @override
  Gfiles_stddev_pop_order_by rebuild(
          void Function(Gfiles_stddev_pop_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_stddev_pop_order_byBuilder toBuilder() =>
      new Gfiles_stddev_pop_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_stddev_pop_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_stddev_pop_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_stddev_pop_order_byBuilder
    implements
        Builder<Gfiles_stddev_pop_order_by, Gfiles_stddev_pop_order_byBuilder> {
  _$Gfiles_stddev_pop_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_stddev_pop_order_byBuilder();

  Gfiles_stddev_pop_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_stddev_pop_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_stddev_pop_order_by;
  }

  @override
  void update(void Function(Gfiles_stddev_pop_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_stddev_pop_order_by build() => _build();

  _$Gfiles_stddev_pop_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_stddev_pop_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_stddev_samp_order_by extends Gfiles_stddev_samp_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_stddev_samp_order_by(
          [void Function(Gfiles_stddev_samp_order_byBuilder)? updates]) =>
      (new Gfiles_stddev_samp_order_byBuilder()..update(updates))._build();

  _$Gfiles_stddev_samp_order_by._({this.size}) : super._();

  @override
  Gfiles_stddev_samp_order_by rebuild(
          void Function(Gfiles_stddev_samp_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_stddev_samp_order_byBuilder toBuilder() =>
      new Gfiles_stddev_samp_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_stddev_samp_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_stddev_samp_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_stddev_samp_order_byBuilder
    implements
        Builder<Gfiles_stddev_samp_order_by,
            Gfiles_stddev_samp_order_byBuilder> {
  _$Gfiles_stddev_samp_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_stddev_samp_order_byBuilder();

  Gfiles_stddev_samp_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_stddev_samp_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_stddev_samp_order_by;
  }

  @override
  void update(void Function(Gfiles_stddev_samp_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_stddev_samp_order_by build() => _build();

  _$Gfiles_stddev_samp_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_stddev_samp_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_stream_cursor_input extends Gfiles_stream_cursor_input {
  @override
  final Gfiles_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Gfiles_stream_cursor_input(
          [void Function(Gfiles_stream_cursor_inputBuilder)? updates]) =>
      (new Gfiles_stream_cursor_inputBuilder()..update(updates))._build();

  _$Gfiles_stream_cursor_input._({required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Gfiles_stream_cursor_input', 'initial_value');
  }

  @override
  Gfiles_stream_cursor_input rebuild(
          void Function(Gfiles_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_stream_cursor_inputBuilder toBuilder() =>
      new Gfiles_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Gfiles_stream_cursor_inputBuilder
    implements
        Builder<Gfiles_stream_cursor_input, Gfiles_stream_cursor_inputBuilder> {
  _$Gfiles_stream_cursor_input? _$v;

  Gfiles_stream_cursor_value_inputBuilder? _initial_value;
  Gfiles_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??= new Gfiles_stream_cursor_value_inputBuilder();
  set initial_value(Gfiles_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Gfiles_stream_cursor_inputBuilder();

  Gfiles_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_stream_cursor_input;
  }

  @override
  void update(void Function(Gfiles_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_stream_cursor_input build() => _build();

  _$Gfiles_stream_cursor_input _build() {
    _$Gfiles_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_stream_cursor_value_input
    extends Gfiles_stream_cursor_value_input {
  @override
  final String? bucketId;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? etag;
  @override
  final Guuid? id;
  @override
  final bool? isUploaded;
  @override
  final String? mimeType;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final Guuid? uploadedByUserId;

  factory _$Gfiles_stream_cursor_value_input(
          [void Function(Gfiles_stream_cursor_value_inputBuilder)? updates]) =>
      (new Gfiles_stream_cursor_value_inputBuilder()..update(updates))._build();

  _$Gfiles_stream_cursor_value_input._(
      {this.bucketId,
      this.createdAt,
      this.etag,
      this.id,
      this.isUploaded,
      this.mimeType,
      this.name,
      this.size,
      this.updatedAt,
      this.uploadedByUserId})
      : super._();

  @override
  Gfiles_stream_cursor_value_input rebuild(
          void Function(Gfiles_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_stream_cursor_value_inputBuilder toBuilder() =>
      new Gfiles_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_stream_cursor_value_input &&
        bucketId == other.bucketId &&
        createdAt == other.createdAt &&
        etag == other.etag &&
        id == other.id &&
        isUploaded == other.isUploaded &&
        mimeType == other.mimeType &&
        name == other.name &&
        size == other.size &&
        updatedAt == other.updatedAt &&
        uploadedByUserId == other.uploadedByUserId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, bucketId.hashCode),
                                        createdAt.hashCode),
                                    etag.hashCode),
                                id.hashCode),
                            isUploaded.hashCode),
                        mimeType.hashCode),
                    name.hashCode),
                size.hashCode),
            updatedAt.hashCode),
        uploadedByUserId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_stream_cursor_value_input')
          ..add('bucketId', bucketId)
          ..add('createdAt', createdAt)
          ..add('etag', etag)
          ..add('id', id)
          ..add('isUploaded', isUploaded)
          ..add('mimeType', mimeType)
          ..add('name', name)
          ..add('size', size)
          ..add('updatedAt', updatedAt)
          ..add('uploadedByUserId', uploadedByUserId))
        .toString();
  }
}

class Gfiles_stream_cursor_value_inputBuilder
    implements
        Builder<Gfiles_stream_cursor_value_input,
            Gfiles_stream_cursor_value_inputBuilder> {
  _$Gfiles_stream_cursor_value_input? _$v;

  String? _bucketId;
  String? get bucketId => _$this._bucketId;
  set bucketId(String? bucketId) => _$this._bucketId = bucketId;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _etag;
  String? get etag => _$this._etag;
  set etag(String? etag) => _$this._etag = etag;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isUploaded;
  bool? get isUploaded => _$this._isUploaded;
  set isUploaded(bool? isUploaded) => _$this._isUploaded = isUploaded;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GuuidBuilder? _uploadedByUserId;
  GuuidBuilder get uploadedByUserId =>
      _$this._uploadedByUserId ??= new GuuidBuilder();
  set uploadedByUserId(GuuidBuilder? uploadedByUserId) =>
      _$this._uploadedByUserId = uploadedByUserId;

  Gfiles_stream_cursor_value_inputBuilder();

  Gfiles_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bucketId = $v.bucketId;
      _createdAt = $v.createdAt?.toBuilder();
      _etag = $v.etag;
      _id = $v.id?.toBuilder();
      _isUploaded = $v.isUploaded;
      _mimeType = $v.mimeType;
      _name = $v.name;
      _size = $v.size;
      _updatedAt = $v.updatedAt?.toBuilder();
      _uploadedByUserId = $v.uploadedByUserId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_stream_cursor_value_input;
  }

  @override
  void update(void Function(Gfiles_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_stream_cursor_value_input build() => _build();

  _$Gfiles_stream_cursor_value_input _build() {
    _$Gfiles_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_stream_cursor_value_input._(
              bucketId: bucketId,
              createdAt: _createdAt?.build(),
              etag: etag,
              id: _id?.build(),
              isUploaded: isUploaded,
              mimeType: mimeType,
              name: name,
              size: size,
              updatedAt: _updatedAt?.build(),
              uploadedByUserId: _uploadedByUserId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'uploadedByUserId';
        _uploadedByUserId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_stream_cursor_value_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_sum_order_by extends Gfiles_sum_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_sum_order_by(
          [void Function(Gfiles_sum_order_byBuilder)? updates]) =>
      (new Gfiles_sum_order_byBuilder()..update(updates))._build();

  _$Gfiles_sum_order_by._({this.size}) : super._();

  @override
  Gfiles_sum_order_by rebuild(
          void Function(Gfiles_sum_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_sum_order_byBuilder toBuilder() =>
      new Gfiles_sum_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_sum_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_sum_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_sum_order_byBuilder
    implements Builder<Gfiles_sum_order_by, Gfiles_sum_order_byBuilder> {
  _$Gfiles_sum_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_sum_order_byBuilder();

  Gfiles_sum_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_sum_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_sum_order_by;
  }

  @override
  void update(void Function(Gfiles_sum_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_sum_order_by build() => _build();

  _$Gfiles_sum_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_sum_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_updates extends Gfiles_updates {
  @override
  final Gfiles_inc_input? G_inc;
  @override
  final Gfiles_set_input? G_set;
  @override
  final Gfiles_bool_exp where;

  factory _$Gfiles_updates([void Function(Gfiles_updatesBuilder)? updates]) =>
      (new Gfiles_updatesBuilder()..update(updates))._build();

  _$Gfiles_updates._({this.G_inc, this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(where, r'Gfiles_updates', 'where');
  }

  @override
  Gfiles_updates rebuild(void Function(Gfiles_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_updatesBuilder toBuilder() =>
      new Gfiles_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_updates &&
        G_inc == other.G_inc &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, G_inc.hashCode), G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_updates')
          ..add('G_inc', G_inc)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Gfiles_updatesBuilder
    implements Builder<Gfiles_updates, Gfiles_updatesBuilder> {
  _$Gfiles_updates? _$v;

  Gfiles_inc_inputBuilder? _G_inc;
  Gfiles_inc_inputBuilder get G_inc =>
      _$this._G_inc ??= new Gfiles_inc_inputBuilder();
  set G_inc(Gfiles_inc_inputBuilder? G_inc) => _$this._G_inc = G_inc;

  Gfiles_set_inputBuilder? _G_set;
  Gfiles_set_inputBuilder get G_set =>
      _$this._G_set ??= new Gfiles_set_inputBuilder();
  set G_set(Gfiles_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Gfiles_bool_expBuilder? _where;
  Gfiles_bool_expBuilder get where =>
      _$this._where ??= new Gfiles_bool_expBuilder();
  set where(Gfiles_bool_expBuilder? where) => _$this._where = where;

  Gfiles_updatesBuilder();

  Gfiles_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_inc = $v.G_inc?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_updates;
  }

  @override
  void update(void Function(Gfiles_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_updates build() => _build();

  _$Gfiles_updates _build() {
    _$Gfiles_updates _$result;
    try {
      _$result = _$v ??
          new _$Gfiles_updates._(
              G_inc: _G_inc?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_inc';
        _G_inc?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gfiles_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_var_pop_order_by extends Gfiles_var_pop_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_var_pop_order_by(
          [void Function(Gfiles_var_pop_order_byBuilder)? updates]) =>
      (new Gfiles_var_pop_order_byBuilder()..update(updates))._build();

  _$Gfiles_var_pop_order_by._({this.size}) : super._();

  @override
  Gfiles_var_pop_order_by rebuild(
          void Function(Gfiles_var_pop_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_var_pop_order_byBuilder toBuilder() =>
      new Gfiles_var_pop_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_var_pop_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_var_pop_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_var_pop_order_byBuilder
    implements
        Builder<Gfiles_var_pop_order_by, Gfiles_var_pop_order_byBuilder> {
  _$Gfiles_var_pop_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_var_pop_order_byBuilder();

  Gfiles_var_pop_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_var_pop_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_var_pop_order_by;
  }

  @override
  void update(void Function(Gfiles_var_pop_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_var_pop_order_by build() => _build();

  _$Gfiles_var_pop_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_var_pop_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_var_samp_order_by extends Gfiles_var_samp_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_var_samp_order_by(
          [void Function(Gfiles_var_samp_order_byBuilder)? updates]) =>
      (new Gfiles_var_samp_order_byBuilder()..update(updates))._build();

  _$Gfiles_var_samp_order_by._({this.size}) : super._();

  @override
  Gfiles_var_samp_order_by rebuild(
          void Function(Gfiles_var_samp_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_var_samp_order_byBuilder toBuilder() =>
      new Gfiles_var_samp_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_var_samp_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_var_samp_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_var_samp_order_byBuilder
    implements
        Builder<Gfiles_var_samp_order_by, Gfiles_var_samp_order_byBuilder> {
  _$Gfiles_var_samp_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_var_samp_order_byBuilder();

  Gfiles_var_samp_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_var_samp_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_var_samp_order_by;
  }

  @override
  void update(void Function(Gfiles_var_samp_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_var_samp_order_by build() => _build();

  _$Gfiles_var_samp_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_var_samp_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gfiles_variance_order_by extends Gfiles_variance_order_by {
  @override
  final Gorder_by? size;

  factory _$Gfiles_variance_order_by(
          [void Function(Gfiles_variance_order_byBuilder)? updates]) =>
      (new Gfiles_variance_order_byBuilder()..update(updates))._build();

  _$Gfiles_variance_order_by._({this.size}) : super._();

  @override
  Gfiles_variance_order_by rebuild(
          void Function(Gfiles_variance_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gfiles_variance_order_byBuilder toBuilder() =>
      new Gfiles_variance_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gfiles_variance_order_by && size == other.size;
  }

  @override
  int get hashCode {
    return $jf($jc(0, size.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gfiles_variance_order_by')
          ..add('size', size))
        .toString();
  }
}

class Gfiles_variance_order_byBuilder
    implements
        Builder<Gfiles_variance_order_by, Gfiles_variance_order_byBuilder> {
  _$Gfiles_variance_order_by? _$v;

  Gorder_by? _size;
  Gorder_by? get size => _$this._size;
  set size(Gorder_by? size) => _$this._size = size;

  Gfiles_variance_order_byBuilder();

  Gfiles_variance_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _size = $v.size;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gfiles_variance_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gfiles_variance_order_by;
  }

  @override
  void update(void Function(Gfiles_variance_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gfiles_variance_order_by build() => _build();

  _$Gfiles_variance_order_by _build() {
    final _$result = _$v ?? new _$Gfiles_variance_order_by._(size: size);
    replace(_$result);
    return _$result;
  }
}

class _$Gjsonb_cast_exp extends Gjsonb_cast_exp {
  @override
  final GString_comparison_exp? GString;

  factory _$Gjsonb_cast_exp([void Function(Gjsonb_cast_expBuilder)? updates]) =>
      (new Gjsonb_cast_expBuilder()..update(updates))._build();

  _$Gjsonb_cast_exp._({this.GString}) : super._();

  @override
  Gjsonb_cast_exp rebuild(void Function(Gjsonb_cast_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gjsonb_cast_expBuilder toBuilder() =>
      new Gjsonb_cast_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gjsonb_cast_exp && GString == other.GString;
  }

  @override
  int get hashCode {
    return $jf($jc(0, GString.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gjsonb_cast_exp')
          ..add('GString', GString))
        .toString();
  }
}

class Gjsonb_cast_expBuilder
    implements Builder<Gjsonb_cast_exp, Gjsonb_cast_expBuilder> {
  _$Gjsonb_cast_exp? _$v;

  GString_comparison_expBuilder? _GString;
  GString_comparison_expBuilder get GString =>
      _$this._GString ??= new GString_comparison_expBuilder();
  set GString(GString_comparison_expBuilder? GString) =>
      _$this._GString = GString;

  Gjsonb_cast_expBuilder();

  Gjsonb_cast_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _GString = $v.GString?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gjsonb_cast_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gjsonb_cast_exp;
  }

  @override
  void update(void Function(Gjsonb_cast_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gjsonb_cast_exp build() => _build();

  _$Gjsonb_cast_exp _build() {
    _$Gjsonb_cast_exp _$result;
    try {
      _$result = _$v ?? new _$Gjsonb_cast_exp._(GString: _GString?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'GString';
        _GString?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gjsonb_cast_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gjsonb_comparison_exp extends Gjsonb_comparison_exp {
  @override
  final Gjsonb_cast_exp? G_cast;
  @override
  final _i2.JsonObject? G_contained_in;
  @override
  final _i2.JsonObject? G_contains;
  @override
  final _i2.JsonObject? G_eq;
  @override
  final _i2.JsonObject? G_gt;
  @override
  final _i2.JsonObject? G_gte;
  @override
  final String? G_has_key;
  @override
  final BuiltList<String>? G_has_keys_all;
  @override
  final BuiltList<String>? G_has_keys_any;
  @override
  final BuiltList<_i2.JsonObject>? G_in;
  @override
  final bool? G_is_null;
  @override
  final _i2.JsonObject? G_lt;
  @override
  final _i2.JsonObject? G_lte;
  @override
  final _i2.JsonObject? G_neq;
  @override
  final BuiltList<_i2.JsonObject>? G_nin;

  factory _$Gjsonb_comparison_exp(
          [void Function(Gjsonb_comparison_expBuilder)? updates]) =>
      (new Gjsonb_comparison_expBuilder()..update(updates))._build();

  _$Gjsonb_comparison_exp._(
      {this.G_cast,
      this.G_contained_in,
      this.G_contains,
      this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_has_key,
      this.G_has_keys_all,
      this.G_has_keys_any,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  Gjsonb_comparison_exp rebuild(
          void Function(Gjsonb_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gjsonb_comparison_expBuilder toBuilder() =>
      new Gjsonb_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gjsonb_comparison_exp &&
        G_cast == other.G_cast &&
        G_contained_in == other.G_contained_in &&
        G_contains == other.G_contains &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_has_key == other.G_has_key &&
        G_has_keys_all == other.G_has_keys_all &&
        G_has_keys_any == other.G_has_keys_any &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                G_cast
                                                                    .hashCode),
                                                            G_contained_in
                                                                .hashCode),
                                                        G_contains.hashCode),
                                                    G_eq.hashCode),
                                                G_gt.hashCode),
                                            G_gte.hashCode),
                                        G_has_key.hashCode),
                                    G_has_keys_all.hashCode),
                                G_has_keys_any.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gjsonb_comparison_exp')
          ..add('G_cast', G_cast)
          ..add('G_contained_in', G_contained_in)
          ..add('G_contains', G_contains)
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_has_key', G_has_key)
          ..add('G_has_keys_all', G_has_keys_all)
          ..add('G_has_keys_any', G_has_keys_any)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class Gjsonb_comparison_expBuilder
    implements Builder<Gjsonb_comparison_exp, Gjsonb_comparison_expBuilder> {
  _$Gjsonb_comparison_exp? _$v;

  Gjsonb_cast_expBuilder? _G_cast;
  Gjsonb_cast_expBuilder get G_cast =>
      _$this._G_cast ??= new Gjsonb_cast_expBuilder();
  set G_cast(Gjsonb_cast_expBuilder? G_cast) => _$this._G_cast = G_cast;

  _i2.JsonObject? _G_contained_in;
  _i2.JsonObject? get G_contained_in => _$this._G_contained_in;
  set G_contained_in(_i2.JsonObject? G_contained_in) =>
      _$this._G_contained_in = G_contained_in;

  _i2.JsonObject? _G_contains;
  _i2.JsonObject? get G_contains => _$this._G_contains;
  set G_contains(_i2.JsonObject? G_contains) => _$this._G_contains = G_contains;

  _i2.JsonObject? _G_eq;
  _i2.JsonObject? get G_eq => _$this._G_eq;
  set G_eq(_i2.JsonObject? G_eq) => _$this._G_eq = G_eq;

  _i2.JsonObject? _G_gt;
  _i2.JsonObject? get G_gt => _$this._G_gt;
  set G_gt(_i2.JsonObject? G_gt) => _$this._G_gt = G_gt;

  _i2.JsonObject? _G_gte;
  _i2.JsonObject? get G_gte => _$this._G_gte;
  set G_gte(_i2.JsonObject? G_gte) => _$this._G_gte = G_gte;

  String? _G_has_key;
  String? get G_has_key => _$this._G_has_key;
  set G_has_key(String? G_has_key) => _$this._G_has_key = G_has_key;

  ListBuilder<String>? _G_has_keys_all;
  ListBuilder<String> get G_has_keys_all =>
      _$this._G_has_keys_all ??= new ListBuilder<String>();
  set G_has_keys_all(ListBuilder<String>? G_has_keys_all) =>
      _$this._G_has_keys_all = G_has_keys_all;

  ListBuilder<String>? _G_has_keys_any;
  ListBuilder<String> get G_has_keys_any =>
      _$this._G_has_keys_any ??= new ListBuilder<String>();
  set G_has_keys_any(ListBuilder<String>? G_has_keys_any) =>
      _$this._G_has_keys_any = G_has_keys_any;

  ListBuilder<_i2.JsonObject>? _G_in;
  ListBuilder<_i2.JsonObject> get G_in =>
      _$this._G_in ??= new ListBuilder<_i2.JsonObject>();
  set G_in(ListBuilder<_i2.JsonObject>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  _i2.JsonObject? _G_lt;
  _i2.JsonObject? get G_lt => _$this._G_lt;
  set G_lt(_i2.JsonObject? G_lt) => _$this._G_lt = G_lt;

  _i2.JsonObject? _G_lte;
  _i2.JsonObject? get G_lte => _$this._G_lte;
  set G_lte(_i2.JsonObject? G_lte) => _$this._G_lte = G_lte;

  _i2.JsonObject? _G_neq;
  _i2.JsonObject? get G_neq => _$this._G_neq;
  set G_neq(_i2.JsonObject? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<_i2.JsonObject>? _G_nin;
  ListBuilder<_i2.JsonObject> get G_nin =>
      _$this._G_nin ??= new ListBuilder<_i2.JsonObject>();
  set G_nin(ListBuilder<_i2.JsonObject>? G_nin) => _$this._G_nin = G_nin;

  Gjsonb_comparison_expBuilder();

  Gjsonb_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_cast = $v.G_cast?.toBuilder();
      _G_contained_in = $v.G_contained_in;
      _G_contains = $v.G_contains;
      _G_eq = $v.G_eq;
      _G_gt = $v.G_gt;
      _G_gte = $v.G_gte;
      _G_has_key = $v.G_has_key;
      _G_has_keys_all = $v.G_has_keys_all?.toBuilder();
      _G_has_keys_any = $v.G_has_keys_any?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt;
      _G_lte = $v.G_lte;
      _G_neq = $v.G_neq;
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gjsonb_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gjsonb_comparison_exp;
  }

  @override
  void update(void Function(Gjsonb_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gjsonb_comparison_exp build() => _build();

  _$Gjsonb_comparison_exp _build() {
    _$Gjsonb_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Gjsonb_comparison_exp._(
              G_cast: _G_cast?.build(),
              G_contained_in: G_contained_in,
              G_contains: G_contains,
              G_eq: G_eq,
              G_gt: G_gt,
              G_gte: G_gte,
              G_has_key: G_has_key,
              G_has_keys_all: _G_has_keys_all?.build(),
              G_has_keys_any: _G_has_keys_any?.build(),
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: G_lt,
              G_lte: G_lte,
              G_neq: G_neq,
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_cast';
        _G_cast?.build();

        _$failedField = 'G_has_keys_all';
        _G_has_keys_all?.build();
        _$failedField = 'G_has_keys_any';
        _G_has_keys_any?.build();
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gjsonb_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gtimestamptz extends Gtimestamptz {
  @override
  final String value;

  factory _$Gtimestamptz([void Function(GtimestamptzBuilder)? updates]) =>
      (new GtimestamptzBuilder()..update(updates))._build();

  _$Gtimestamptz._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'Gtimestamptz', 'value');
  }

  @override
  Gtimestamptz rebuild(void Function(GtimestamptzBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GtimestamptzBuilder toBuilder() => new GtimestamptzBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gtimestamptz && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gtimestamptz')..add('value', value))
        .toString();
  }
}

class GtimestamptzBuilder
    implements Builder<Gtimestamptz, GtimestamptzBuilder> {
  _$Gtimestamptz? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GtimestamptzBuilder();

  GtimestamptzBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gtimestamptz other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gtimestamptz;
  }

  @override
  void update(void Function(GtimestamptzBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gtimestamptz build() => _build();

  _$Gtimestamptz _build() {
    final _$result = _$v ??
        new _$Gtimestamptz._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'Gtimestamptz', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$Gtimestamptz_comparison_exp extends Gtimestamptz_comparison_exp {
  @override
  final Gtimestamptz? G_eq;
  @override
  final Gtimestamptz? G_gt;
  @override
  final Gtimestamptz? G_gte;
  @override
  final BuiltList<Gtimestamptz>? G_in;
  @override
  final bool? G_is_null;
  @override
  final Gtimestamptz? G_lt;
  @override
  final Gtimestamptz? G_lte;
  @override
  final Gtimestamptz? G_neq;
  @override
  final BuiltList<Gtimestamptz>? G_nin;

  factory _$Gtimestamptz_comparison_exp(
          [void Function(Gtimestamptz_comparison_expBuilder)? updates]) =>
      (new Gtimestamptz_comparison_expBuilder()..update(updates))._build();

  _$Gtimestamptz_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  Gtimestamptz_comparison_exp rebuild(
          void Function(Gtimestamptz_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gtimestamptz_comparison_expBuilder toBuilder() =>
      new Gtimestamptz_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gtimestamptz_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gtimestamptz_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class Gtimestamptz_comparison_expBuilder
    implements
        Builder<Gtimestamptz_comparison_exp,
            Gtimestamptz_comparison_expBuilder> {
  _$Gtimestamptz_comparison_exp? _$v;

  GtimestamptzBuilder? _G_eq;
  GtimestamptzBuilder get G_eq => _$this._G_eq ??= new GtimestamptzBuilder();
  set G_eq(GtimestamptzBuilder? G_eq) => _$this._G_eq = G_eq;

  GtimestamptzBuilder? _G_gt;
  GtimestamptzBuilder get G_gt => _$this._G_gt ??= new GtimestamptzBuilder();
  set G_gt(GtimestamptzBuilder? G_gt) => _$this._G_gt = G_gt;

  GtimestamptzBuilder? _G_gte;
  GtimestamptzBuilder get G_gte => _$this._G_gte ??= new GtimestamptzBuilder();
  set G_gte(GtimestamptzBuilder? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<Gtimestamptz>? _G_in;
  ListBuilder<Gtimestamptz> get G_in =>
      _$this._G_in ??= new ListBuilder<Gtimestamptz>();
  set G_in(ListBuilder<Gtimestamptz>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  GtimestamptzBuilder? _G_lt;
  GtimestamptzBuilder get G_lt => _$this._G_lt ??= new GtimestamptzBuilder();
  set G_lt(GtimestamptzBuilder? G_lt) => _$this._G_lt = G_lt;

  GtimestamptzBuilder? _G_lte;
  GtimestamptzBuilder get G_lte => _$this._G_lte ??= new GtimestamptzBuilder();
  set G_lte(GtimestamptzBuilder? G_lte) => _$this._G_lte = G_lte;

  GtimestamptzBuilder? _G_neq;
  GtimestamptzBuilder get G_neq => _$this._G_neq ??= new GtimestamptzBuilder();
  set G_neq(GtimestamptzBuilder? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<Gtimestamptz>? _G_nin;
  ListBuilder<Gtimestamptz> get G_nin =>
      _$this._G_nin ??= new ListBuilder<Gtimestamptz>();
  set G_nin(ListBuilder<Gtimestamptz>? G_nin) => _$this._G_nin = G_nin;

  Gtimestamptz_comparison_expBuilder();

  Gtimestamptz_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq?.toBuilder();
      _G_gt = $v.G_gt?.toBuilder();
      _G_gte = $v.G_gte?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt?.toBuilder();
      _G_lte = $v.G_lte?.toBuilder();
      _G_neq = $v.G_neq?.toBuilder();
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gtimestamptz_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gtimestamptz_comparison_exp;
  }

  @override
  void update(void Function(Gtimestamptz_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gtimestamptz_comparison_exp build() => _build();

  _$Gtimestamptz_comparison_exp _build() {
    _$Gtimestamptz_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Gtimestamptz_comparison_exp._(
              G_eq: _G_eq?.build(),
              G_gt: _G_gt?.build(),
              G_gte: _G_gte?.build(),
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: _G_lt?.build(),
              G_lte: _G_lte?.build(),
              G_neq: _G_neq?.build(),
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_eq';
        _G_eq?.build();
        _$failedField = 'G_gt';
        _G_gt?.build();
        _$failedField = 'G_gte';
        _G_gte?.build();
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_lt';
        _G_lt?.build();
        _$failedField = 'G_lte';
        _G_lte?.build();
        _$failedField = 'G_neq';
        _G_neq?.build();
        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gtimestamptz_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_bool_exp extends Guser_articles_bool_exp {
  @override
  final BuiltList<Guser_articles_bool_exp>? G_and;
  @override
  final Guser_articles_bool_exp? G_not;
  @override
  final BuiltList<Guser_articles_bool_exp>? G_or;
  @override
  final Guuid_comparison_exp? article_id;
  @override
  final Gtimestamptz_comparison_exp? created_at;
  @override
  final Guuid_comparison_exp? created_by;
  @override
  final Gtimestamptz_comparison_exp? deleted_at;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GInt_comparison_exp? play_at;
  @override
  final Gtimestamptz_comparison_exp? updated_at;
  @override
  final Guuid_comparison_exp? updated_by;
  @override
  final Guuid_comparison_exp? user_id;

  factory _$Guser_articles_bool_exp(
          [void Function(Guser_articles_bool_expBuilder)? updates]) =>
      (new Guser_articles_bool_expBuilder()..update(updates))._build();

  _$Guser_articles_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.article_id,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.play_at,
      this.updated_at,
      this.updated_by,
      this.user_id})
      : super._();

  @override
  Guser_articles_bool_exp rebuild(
          void Function(Guser_articles_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_bool_expBuilder toBuilder() =>
      new Guser_articles_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        article_id == other.article_id &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        play_at == other.play_at &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        user_id == other.user_id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, G_and.hashCode),
                                                G_not.hashCode),
                                            G_or.hashCode),
                                        article_id.hashCode),
                                    created_at.hashCode),
                                created_by.hashCode),
                            deleted_at.hashCode),
                        id.hashCode),
                    play_at.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        user_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('article_id', article_id)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('play_at', play_at)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('user_id', user_id))
        .toString();
  }
}

class Guser_articles_bool_expBuilder
    implements
        Builder<Guser_articles_bool_exp, Guser_articles_bool_expBuilder> {
  _$Guser_articles_bool_exp? _$v;

  ListBuilder<Guser_articles_bool_exp>? _G_and;
  ListBuilder<Guser_articles_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Guser_articles_bool_exp>();
  set G_and(ListBuilder<Guser_articles_bool_exp>? G_and) =>
      _$this._G_and = G_and;

  Guser_articles_bool_expBuilder? _G_not;
  Guser_articles_bool_expBuilder get G_not =>
      _$this._G_not ??= new Guser_articles_bool_expBuilder();
  set G_not(Guser_articles_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Guser_articles_bool_exp>? _G_or;
  ListBuilder<Guser_articles_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Guser_articles_bool_exp>();
  set G_or(ListBuilder<Guser_articles_bool_exp>? G_or) => _$this._G_or = G_or;

  Guuid_comparison_expBuilder? _article_id;
  Guuid_comparison_expBuilder get article_id =>
      _$this._article_id ??= new Guuid_comparison_expBuilder();
  set article_id(Guuid_comparison_expBuilder? article_id) =>
      _$this._article_id = article_id;

  Gtimestamptz_comparison_expBuilder? _created_at;
  Gtimestamptz_comparison_expBuilder get created_at =>
      _$this._created_at ??= new Gtimestamptz_comparison_expBuilder();
  set created_at(Gtimestamptz_comparison_expBuilder? created_at) =>
      _$this._created_at = created_at;

  Guuid_comparison_expBuilder? _created_by;
  Guuid_comparison_expBuilder get created_by =>
      _$this._created_by ??= new Guuid_comparison_expBuilder();
  set created_by(Guuid_comparison_expBuilder? created_by) =>
      _$this._created_by = created_by;

  Gtimestamptz_comparison_expBuilder? _deleted_at;
  Gtimestamptz_comparison_expBuilder get deleted_at =>
      _$this._deleted_at ??= new Gtimestamptz_comparison_expBuilder();
  set deleted_at(Gtimestamptz_comparison_expBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GInt_comparison_expBuilder? _play_at;
  GInt_comparison_expBuilder get play_at =>
      _$this._play_at ??= new GInt_comparison_expBuilder();
  set play_at(GInt_comparison_expBuilder? play_at) => _$this._play_at = play_at;

  Gtimestamptz_comparison_expBuilder? _updated_at;
  Gtimestamptz_comparison_expBuilder get updated_at =>
      _$this._updated_at ??= new Gtimestamptz_comparison_expBuilder();
  set updated_at(Gtimestamptz_comparison_expBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  Guuid_comparison_expBuilder? _updated_by;
  Guuid_comparison_expBuilder get updated_by =>
      _$this._updated_by ??= new Guuid_comparison_expBuilder();
  set updated_by(Guuid_comparison_expBuilder? updated_by) =>
      _$this._updated_by = updated_by;

  Guuid_comparison_expBuilder? _user_id;
  Guuid_comparison_expBuilder get user_id =>
      _$this._user_id ??= new Guuid_comparison_expBuilder();
  set user_id(Guuid_comparison_expBuilder? user_id) =>
      _$this._user_id = user_id;

  Guser_articles_bool_expBuilder();

  Guser_articles_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _article_id = $v.article_id?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _play_at = $v.play_at?.toBuilder();
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _user_id = $v.user_id?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_bool_exp;
  }

  @override
  void update(void Function(Guser_articles_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_bool_exp build() => _build();

  _$Guser_articles_bool_exp _build() {
    _$Guser_articles_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              article_id: _article_id?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              play_at: _play_at?.build(),
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              user_id: _user_id?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'article_id';
        _article_id?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'play_at';
        _play_at?.build();
        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'user_id';
        _user_id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_inc_input extends Guser_articles_inc_input {
  @override
  final int? play_at;

  factory _$Guser_articles_inc_input(
          [void Function(Guser_articles_inc_inputBuilder)? updates]) =>
      (new Guser_articles_inc_inputBuilder()..update(updates))._build();

  _$Guser_articles_inc_input._({this.play_at}) : super._();

  @override
  Guser_articles_inc_input rebuild(
          void Function(Guser_articles_inc_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_inc_inputBuilder toBuilder() =>
      new Guser_articles_inc_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_inc_input && play_at == other.play_at;
  }

  @override
  int get hashCode {
    return $jf($jc(0, play_at.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_inc_input')
          ..add('play_at', play_at))
        .toString();
  }
}

class Guser_articles_inc_inputBuilder
    implements
        Builder<Guser_articles_inc_input, Guser_articles_inc_inputBuilder> {
  _$Guser_articles_inc_input? _$v;

  int? _play_at;
  int? get play_at => _$this._play_at;
  set play_at(int? play_at) => _$this._play_at = play_at;

  Guser_articles_inc_inputBuilder();

  Guser_articles_inc_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _play_at = $v.play_at;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_inc_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_inc_input;
  }

  @override
  void update(void Function(Guser_articles_inc_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_inc_input build() => _build();

  _$Guser_articles_inc_input _build() {
    final _$result = _$v ?? new _$Guser_articles_inc_input._(play_at: play_at);
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_insert_input extends Guser_articles_insert_input {
  @override
  final Guuid? article_id;
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final int? play_at;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final Guuid? user_id;

  factory _$Guser_articles_insert_input(
          [void Function(Guser_articles_insert_inputBuilder)? updates]) =>
      (new Guser_articles_insert_inputBuilder()..update(updates))._build();

  _$Guser_articles_insert_input._(
      {this.article_id,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.play_at,
      this.updated_at,
      this.updated_by,
      this.user_id})
      : super._();

  @override
  Guser_articles_insert_input rebuild(
          void Function(Guser_articles_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_insert_inputBuilder toBuilder() =>
      new Guser_articles_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_insert_input &&
        article_id == other.article_id &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        play_at == other.play_at &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        user_id == other.user_id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, article_id.hashCode),
                                    created_at.hashCode),
                                created_by.hashCode),
                            deleted_at.hashCode),
                        id.hashCode),
                    play_at.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        user_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_insert_input')
          ..add('article_id', article_id)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('play_at', play_at)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('user_id', user_id))
        .toString();
  }
}

class Guser_articles_insert_inputBuilder
    implements
        Builder<Guser_articles_insert_input,
            Guser_articles_insert_inputBuilder> {
  _$Guser_articles_insert_input? _$v;

  GuuidBuilder? _article_id;
  GuuidBuilder get article_id => _$this._article_id ??= new GuuidBuilder();
  set article_id(GuuidBuilder? article_id) => _$this._article_id = article_id;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  int? _play_at;
  int? get play_at => _$this._play_at;
  set play_at(int? play_at) => _$this._play_at = play_at;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  GuuidBuilder? _user_id;
  GuuidBuilder get user_id => _$this._user_id ??= new GuuidBuilder();
  set user_id(GuuidBuilder? user_id) => _$this._user_id = user_id;

  Guser_articles_insert_inputBuilder();

  Guser_articles_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _article_id = $v.article_id?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _play_at = $v.play_at;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _user_id = $v.user_id?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_insert_input;
  }

  @override
  void update(void Function(Guser_articles_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_insert_input build() => _build();

  _$Guser_articles_insert_input _build() {
    _$Guser_articles_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_insert_input._(
              article_id: _article_id?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              play_at: play_at,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              user_id: _user_id?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'article_id';
        _article_id?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'user_id';
        _user_id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_on_conflict extends Guser_articles_on_conflict {
  @override
  final Guser_articles_constraint constraint;
  @override
  final BuiltList<Guser_articles_update_column> update_columns;
  @override
  final Guser_articles_bool_exp? where;

  factory _$Guser_articles_on_conflict(
          [void Function(Guser_articles_on_conflictBuilder)? updates]) =>
      (new Guser_articles_on_conflictBuilder()..update(updates))._build();

  _$Guser_articles_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Guser_articles_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Guser_articles_on_conflict', 'update_columns');
  }

  @override
  Guser_articles_on_conflict rebuild(
          void Function(Guser_articles_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_on_conflictBuilder toBuilder() =>
      new Guser_articles_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Guser_articles_on_conflictBuilder
    implements
        Builder<Guser_articles_on_conflict, Guser_articles_on_conflictBuilder> {
  _$Guser_articles_on_conflict? _$v;

  Guser_articles_constraint? _constraint;
  Guser_articles_constraint? get constraint => _$this._constraint;
  set constraint(Guser_articles_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Guser_articles_update_column>? _update_columns;
  ListBuilder<Guser_articles_update_column> get update_columns =>
      _$this._update_columns ??=
          new ListBuilder<Guser_articles_update_column>();
  set update_columns(
          ListBuilder<Guser_articles_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Guser_articles_bool_expBuilder? _where;
  Guser_articles_bool_expBuilder get where =>
      _$this._where ??= new Guser_articles_bool_expBuilder();
  set where(Guser_articles_bool_expBuilder? where) => _$this._where = where;

  Guser_articles_on_conflictBuilder();

  Guser_articles_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_on_conflict;
  }

  @override
  void update(void Function(Guser_articles_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_on_conflict build() => _build();

  _$Guser_articles_on_conflict _build() {
    _$Guser_articles_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Guser_articles_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_order_by extends Guser_articles_order_by {
  @override
  final Gorder_by? article_id;
  @override
  final Gorder_by? created_at;
  @override
  final Gorder_by? created_by;
  @override
  final Gorder_by? deleted_at;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? play_at;
  @override
  final Gorder_by? updated_at;
  @override
  final Gorder_by? updated_by;
  @override
  final Gorder_by? user_id;

  factory _$Guser_articles_order_by(
          [void Function(Guser_articles_order_byBuilder)? updates]) =>
      (new Guser_articles_order_byBuilder()..update(updates))._build();

  _$Guser_articles_order_by._(
      {this.article_id,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.play_at,
      this.updated_at,
      this.updated_by,
      this.user_id})
      : super._();

  @override
  Guser_articles_order_by rebuild(
          void Function(Guser_articles_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_order_byBuilder toBuilder() =>
      new Guser_articles_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_order_by &&
        article_id == other.article_id &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        play_at == other.play_at &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        user_id == other.user_id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, article_id.hashCode),
                                    created_at.hashCode),
                                created_by.hashCode),
                            deleted_at.hashCode),
                        id.hashCode),
                    play_at.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        user_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_order_by')
          ..add('article_id', article_id)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('play_at', play_at)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('user_id', user_id))
        .toString();
  }
}

class Guser_articles_order_byBuilder
    implements
        Builder<Guser_articles_order_by, Guser_articles_order_byBuilder> {
  _$Guser_articles_order_by? _$v;

  Gorder_by? _article_id;
  Gorder_by? get article_id => _$this._article_id;
  set article_id(Gorder_by? article_id) => _$this._article_id = article_id;

  Gorder_by? _created_at;
  Gorder_by? get created_at => _$this._created_at;
  set created_at(Gorder_by? created_at) => _$this._created_at = created_at;

  Gorder_by? _created_by;
  Gorder_by? get created_by => _$this._created_by;
  set created_by(Gorder_by? created_by) => _$this._created_by = created_by;

  Gorder_by? _deleted_at;
  Gorder_by? get deleted_at => _$this._deleted_at;
  set deleted_at(Gorder_by? deleted_at) => _$this._deleted_at = deleted_at;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _play_at;
  Gorder_by? get play_at => _$this._play_at;
  set play_at(Gorder_by? play_at) => _$this._play_at = play_at;

  Gorder_by? _updated_at;
  Gorder_by? get updated_at => _$this._updated_at;
  set updated_at(Gorder_by? updated_at) => _$this._updated_at = updated_at;

  Gorder_by? _updated_by;
  Gorder_by? get updated_by => _$this._updated_by;
  set updated_by(Gorder_by? updated_by) => _$this._updated_by = updated_by;

  Gorder_by? _user_id;
  Gorder_by? get user_id => _$this._user_id;
  set user_id(Gorder_by? user_id) => _$this._user_id = user_id;

  Guser_articles_order_byBuilder();

  Guser_articles_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _article_id = $v.article_id;
      _created_at = $v.created_at;
      _created_by = $v.created_by;
      _deleted_at = $v.deleted_at;
      _id = $v.id;
      _play_at = $v.play_at;
      _updated_at = $v.updated_at;
      _updated_by = $v.updated_by;
      _user_id = $v.user_id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_order_by;
  }

  @override
  void update(void Function(Guser_articles_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_order_by build() => _build();

  _$Guser_articles_order_by _build() {
    final _$result = _$v ??
        new _$Guser_articles_order_by._(
            article_id: article_id,
            created_at: created_at,
            created_by: created_by,
            deleted_at: deleted_at,
            id: id,
            play_at: play_at,
            updated_at: updated_at,
            updated_by: updated_by,
            user_id: user_id);
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_pk_columns_input
    extends Guser_articles_pk_columns_input {
  @override
  final Guuid id;

  factory _$Guser_articles_pk_columns_input(
          [void Function(Guser_articles_pk_columns_inputBuilder)? updates]) =>
      (new Guser_articles_pk_columns_inputBuilder()..update(updates))._build();

  _$Guser_articles_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'Guser_articles_pk_columns_input', 'id');
  }

  @override
  Guser_articles_pk_columns_input rebuild(
          void Function(Guser_articles_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_pk_columns_inputBuilder toBuilder() =>
      new Guser_articles_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Guser_articles_pk_columns_inputBuilder
    implements
        Builder<Guser_articles_pk_columns_input,
            Guser_articles_pk_columns_inputBuilder> {
  _$Guser_articles_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  Guser_articles_pk_columns_inputBuilder();

  Guser_articles_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_pk_columns_input;
  }

  @override
  void update(void Function(Guser_articles_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_pk_columns_input build() => _build();

  _$Guser_articles_pk_columns_input _build() {
    _$Guser_articles_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$Guser_articles_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_set_input extends Guser_articles_set_input {
  @override
  final Guuid? article_id;
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final int? play_at;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final Guuid? user_id;

  factory _$Guser_articles_set_input(
          [void Function(Guser_articles_set_inputBuilder)? updates]) =>
      (new Guser_articles_set_inputBuilder()..update(updates))._build();

  _$Guser_articles_set_input._(
      {this.article_id,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.play_at,
      this.updated_at,
      this.updated_by,
      this.user_id})
      : super._();

  @override
  Guser_articles_set_input rebuild(
          void Function(Guser_articles_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_set_inputBuilder toBuilder() =>
      new Guser_articles_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_set_input &&
        article_id == other.article_id &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        play_at == other.play_at &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        user_id == other.user_id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, article_id.hashCode),
                                    created_at.hashCode),
                                created_by.hashCode),
                            deleted_at.hashCode),
                        id.hashCode),
                    play_at.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        user_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_set_input')
          ..add('article_id', article_id)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('play_at', play_at)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('user_id', user_id))
        .toString();
  }
}

class Guser_articles_set_inputBuilder
    implements
        Builder<Guser_articles_set_input, Guser_articles_set_inputBuilder> {
  _$Guser_articles_set_input? _$v;

  GuuidBuilder? _article_id;
  GuuidBuilder get article_id => _$this._article_id ??= new GuuidBuilder();
  set article_id(GuuidBuilder? article_id) => _$this._article_id = article_id;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  int? _play_at;
  int? get play_at => _$this._play_at;
  set play_at(int? play_at) => _$this._play_at = play_at;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  GuuidBuilder? _user_id;
  GuuidBuilder get user_id => _$this._user_id ??= new GuuidBuilder();
  set user_id(GuuidBuilder? user_id) => _$this._user_id = user_id;

  Guser_articles_set_inputBuilder();

  Guser_articles_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _article_id = $v.article_id?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _play_at = $v.play_at;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _user_id = $v.user_id?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_set_input;
  }

  @override
  void update(void Function(Guser_articles_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_set_input build() => _build();

  _$Guser_articles_set_input _build() {
    _$Guser_articles_set_input _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_set_input._(
              article_id: _article_id?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              play_at: play_at,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              user_id: _user_id?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'article_id';
        _article_id?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'user_id';
        _user_id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_stream_cursor_input
    extends Guser_articles_stream_cursor_input {
  @override
  final Guser_articles_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Guser_articles_stream_cursor_input(
          [void Function(Guser_articles_stream_cursor_inputBuilder)?
              updates]) =>
      (new Guser_articles_stream_cursor_inputBuilder()..update(updates))
          ._build();

  _$Guser_articles_stream_cursor_input._(
      {required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Guser_articles_stream_cursor_input', 'initial_value');
  }

  @override
  Guser_articles_stream_cursor_input rebuild(
          void Function(Guser_articles_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_stream_cursor_inputBuilder toBuilder() =>
      new Guser_articles_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Guser_articles_stream_cursor_inputBuilder
    implements
        Builder<Guser_articles_stream_cursor_input,
            Guser_articles_stream_cursor_inputBuilder> {
  _$Guser_articles_stream_cursor_input? _$v;

  Guser_articles_stream_cursor_value_inputBuilder? _initial_value;
  Guser_articles_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??=
          new Guser_articles_stream_cursor_value_inputBuilder();
  set initial_value(
          Guser_articles_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Guser_articles_stream_cursor_inputBuilder();

  Guser_articles_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_stream_cursor_input;
  }

  @override
  void update(
      void Function(Guser_articles_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_stream_cursor_input build() => _build();

  _$Guser_articles_stream_cursor_input _build() {
    _$Guser_articles_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_stream_cursor_value_input
    extends Guser_articles_stream_cursor_value_input {
  @override
  final Guuid? article_id;
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final int? play_at;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final Guuid? user_id;

  factory _$Guser_articles_stream_cursor_value_input(
          [void Function(Guser_articles_stream_cursor_value_inputBuilder)?
              updates]) =>
      (new Guser_articles_stream_cursor_value_inputBuilder()..update(updates))
          ._build();

  _$Guser_articles_stream_cursor_value_input._(
      {this.article_id,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.play_at,
      this.updated_at,
      this.updated_by,
      this.user_id})
      : super._();

  @override
  Guser_articles_stream_cursor_value_input rebuild(
          void Function(Guser_articles_stream_cursor_value_inputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_stream_cursor_value_inputBuilder toBuilder() =>
      new Guser_articles_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_stream_cursor_value_input &&
        article_id == other.article_id &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        play_at == other.play_at &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        user_id == other.user_id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, article_id.hashCode),
                                    created_at.hashCode),
                                created_by.hashCode),
                            deleted_at.hashCode),
                        id.hashCode),
                    play_at.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        user_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'Guser_articles_stream_cursor_value_input')
          ..add('article_id', article_id)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('play_at', play_at)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('user_id', user_id))
        .toString();
  }
}

class Guser_articles_stream_cursor_value_inputBuilder
    implements
        Builder<Guser_articles_stream_cursor_value_input,
            Guser_articles_stream_cursor_value_inputBuilder> {
  _$Guser_articles_stream_cursor_value_input? _$v;

  GuuidBuilder? _article_id;
  GuuidBuilder get article_id => _$this._article_id ??= new GuuidBuilder();
  set article_id(GuuidBuilder? article_id) => _$this._article_id = article_id;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  int? _play_at;
  int? get play_at => _$this._play_at;
  set play_at(int? play_at) => _$this._play_at = play_at;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  GuuidBuilder? _user_id;
  GuuidBuilder get user_id => _$this._user_id ??= new GuuidBuilder();
  set user_id(GuuidBuilder? user_id) => _$this._user_id = user_id;

  Guser_articles_stream_cursor_value_inputBuilder();

  Guser_articles_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _article_id = $v.article_id?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _play_at = $v.play_at;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _user_id = $v.user_id?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_stream_cursor_value_input;
  }

  @override
  void update(
      void Function(Guser_articles_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_stream_cursor_value_input build() => _build();

  _$Guser_articles_stream_cursor_value_input _build() {
    _$Guser_articles_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_stream_cursor_value_input._(
              article_id: _article_id?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              play_at: play_at,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              user_id: _user_id?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'article_id';
        _article_id?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'user_id';
        _user_id?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_stream_cursor_value_input',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guser_articles_updates extends Guser_articles_updates {
  @override
  final Guser_articles_inc_input? G_inc;
  @override
  final Guser_articles_set_input? G_set;
  @override
  final Guser_articles_bool_exp where;

  factory _$Guser_articles_updates(
          [void Function(Guser_articles_updatesBuilder)? updates]) =>
      (new Guser_articles_updatesBuilder()..update(updates))._build();

  _$Guser_articles_updates._({this.G_inc, this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        where, r'Guser_articles_updates', 'where');
  }

  @override
  Guser_articles_updates rebuild(
          void Function(Guser_articles_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guser_articles_updatesBuilder toBuilder() =>
      new Guser_articles_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guser_articles_updates &&
        G_inc == other.G_inc &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, G_inc.hashCode), G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guser_articles_updates')
          ..add('G_inc', G_inc)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Guser_articles_updatesBuilder
    implements Builder<Guser_articles_updates, Guser_articles_updatesBuilder> {
  _$Guser_articles_updates? _$v;

  Guser_articles_inc_inputBuilder? _G_inc;
  Guser_articles_inc_inputBuilder get G_inc =>
      _$this._G_inc ??= new Guser_articles_inc_inputBuilder();
  set G_inc(Guser_articles_inc_inputBuilder? G_inc) => _$this._G_inc = G_inc;

  Guser_articles_set_inputBuilder? _G_set;
  Guser_articles_set_inputBuilder get G_set =>
      _$this._G_set ??= new Guser_articles_set_inputBuilder();
  set G_set(Guser_articles_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Guser_articles_bool_expBuilder? _where;
  Guser_articles_bool_expBuilder get where =>
      _$this._where ??= new Guser_articles_bool_expBuilder();
  set where(Guser_articles_bool_expBuilder? where) => _$this._where = where;

  Guser_articles_updatesBuilder();

  Guser_articles_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_inc = $v.G_inc?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guser_articles_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guser_articles_updates;
  }

  @override
  void update(void Function(Guser_articles_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guser_articles_updates build() => _build();

  _$Guser_articles_updates _build() {
    _$Guser_articles_updates _$result;
    try {
      _$result = _$v ??
          new _$Guser_articles_updates._(
              G_inc: _G_inc?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_inc';
        _G_inc?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guser_articles_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_aggregate_bool_exp extends Gusers_aggregate_bool_exp {
  @override
  final Gusers_aggregate_bool_exp_bool_and? bool_and;
  @override
  final Gusers_aggregate_bool_exp_bool_or? bool_or;
  @override
  final Gusers_aggregate_bool_exp_count? count;

  factory _$Gusers_aggregate_bool_exp(
          [void Function(Gusers_aggregate_bool_expBuilder)? updates]) =>
      (new Gusers_aggregate_bool_expBuilder()..update(updates))._build();

  _$Gusers_aggregate_bool_exp._({this.bool_and, this.bool_or, this.count})
      : super._();

  @override
  Gusers_aggregate_bool_exp rebuild(
          void Function(Gusers_aggregate_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_aggregate_bool_expBuilder toBuilder() =>
      new Gusers_aggregate_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_aggregate_bool_exp &&
        bool_and == other.bool_and &&
        bool_or == other.bool_or &&
        count == other.count;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, bool_and.hashCode), bool_or.hashCode), count.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_aggregate_bool_exp')
          ..add('bool_and', bool_and)
          ..add('bool_or', bool_or)
          ..add('count', count))
        .toString();
  }
}

class Gusers_aggregate_bool_expBuilder
    implements
        Builder<Gusers_aggregate_bool_exp, Gusers_aggregate_bool_expBuilder> {
  _$Gusers_aggregate_bool_exp? _$v;

  Gusers_aggregate_bool_exp_bool_andBuilder? _bool_and;
  Gusers_aggregate_bool_exp_bool_andBuilder get bool_and =>
      _$this._bool_and ??= new Gusers_aggregate_bool_exp_bool_andBuilder();
  set bool_and(Gusers_aggregate_bool_exp_bool_andBuilder? bool_and) =>
      _$this._bool_and = bool_and;

  Gusers_aggregate_bool_exp_bool_orBuilder? _bool_or;
  Gusers_aggregate_bool_exp_bool_orBuilder get bool_or =>
      _$this._bool_or ??= new Gusers_aggregate_bool_exp_bool_orBuilder();
  set bool_or(Gusers_aggregate_bool_exp_bool_orBuilder? bool_or) =>
      _$this._bool_or = bool_or;

  Gusers_aggregate_bool_exp_countBuilder? _count;
  Gusers_aggregate_bool_exp_countBuilder get count =>
      _$this._count ??= new Gusers_aggregate_bool_exp_countBuilder();
  set count(Gusers_aggregate_bool_exp_countBuilder? count) =>
      _$this._count = count;

  Gusers_aggregate_bool_expBuilder();

  Gusers_aggregate_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _bool_and = $v.bool_and?.toBuilder();
      _bool_or = $v.bool_or?.toBuilder();
      _count = $v.count?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_aggregate_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_aggregate_bool_exp;
  }

  @override
  void update(void Function(Gusers_aggregate_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_aggregate_bool_exp build() => _build();

  _$Gusers_aggregate_bool_exp _build() {
    _$Gusers_aggregate_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gusers_aggregate_bool_exp._(
              bool_and: _bool_and?.build(),
              bool_or: _bool_or?.build(),
              count: _count?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'bool_and';
        _bool_and?.build();
        _$failedField = 'bool_or';
        _bool_or?.build();
        _$failedField = 'count';
        _count?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_aggregate_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_aggregate_bool_exp_bool_and
    extends Gusers_aggregate_bool_exp_bool_and {
  @override
  final Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns
      arguments;
  @override
  final bool? distinct;
  @override
  final Gusers_bool_exp? filter;
  @override
  final GBoolean_comparison_exp predicate;

  factory _$Gusers_aggregate_bool_exp_bool_and(
          [void Function(Gusers_aggregate_bool_exp_bool_andBuilder)?
              updates]) =>
      (new Gusers_aggregate_bool_exp_bool_andBuilder()..update(updates))
          ._build();

  _$Gusers_aggregate_bool_exp_bool_and._(
      {required this.arguments,
      this.distinct,
      this.filter,
      required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        arguments, r'Gusers_aggregate_bool_exp_bool_and', 'arguments');
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gusers_aggregate_bool_exp_bool_and', 'predicate');
  }

  @override
  Gusers_aggregate_bool_exp_bool_and rebuild(
          void Function(Gusers_aggregate_bool_exp_bool_andBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_aggregate_bool_exp_bool_andBuilder toBuilder() =>
      new Gusers_aggregate_bool_exp_bool_andBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_aggregate_bool_exp_bool_and &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_aggregate_bool_exp_bool_and')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gusers_aggregate_bool_exp_bool_andBuilder
    implements
        Builder<Gusers_aggregate_bool_exp_bool_and,
            Gusers_aggregate_bool_exp_bool_andBuilder> {
  _$Gusers_aggregate_bool_exp_bool_and? _$v;

  Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns?
      _arguments;
  Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns?
      get arguments => _$this._arguments;
  set arguments(
          Gusers_select_column_users_aggregate_bool_exp_bool_and_arguments_columns?
              arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gusers_bool_expBuilder? _filter;
  Gusers_bool_expBuilder get filter =>
      _$this._filter ??= new Gusers_bool_expBuilder();
  set filter(Gusers_bool_expBuilder? filter) => _$this._filter = filter;

  GBoolean_comparison_expBuilder? _predicate;
  GBoolean_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GBoolean_comparison_expBuilder();
  set predicate(GBoolean_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gusers_aggregate_bool_exp_bool_andBuilder();

  Gusers_aggregate_bool_exp_bool_andBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments;
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_aggregate_bool_exp_bool_and other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_aggregate_bool_exp_bool_and;
  }

  @override
  void update(
      void Function(Gusers_aggregate_bool_exp_bool_andBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_aggregate_bool_exp_bool_and build() => _build();

  _$Gusers_aggregate_bool_exp_bool_and _build() {
    _$Gusers_aggregate_bool_exp_bool_and _$result;
    try {
      _$result = _$v ??
          new _$Gusers_aggregate_bool_exp_bool_and._(
              arguments: BuiltValueNullFieldError.checkNotNull(arguments,
                  r'Gusers_aggregate_bool_exp_bool_and', 'arguments'),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_aggregate_bool_exp_bool_and', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_aggregate_bool_exp_bool_or
    extends Gusers_aggregate_bool_exp_bool_or {
  @override
  final Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns
      arguments;
  @override
  final bool? distinct;
  @override
  final Gusers_bool_exp? filter;
  @override
  final GBoolean_comparison_exp predicate;

  factory _$Gusers_aggregate_bool_exp_bool_or(
          [void Function(Gusers_aggregate_bool_exp_bool_orBuilder)? updates]) =>
      (new Gusers_aggregate_bool_exp_bool_orBuilder()..update(updates))
          ._build();

  _$Gusers_aggregate_bool_exp_bool_or._(
      {required this.arguments,
      this.distinct,
      this.filter,
      required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        arguments, r'Gusers_aggregate_bool_exp_bool_or', 'arguments');
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gusers_aggregate_bool_exp_bool_or', 'predicate');
  }

  @override
  Gusers_aggregate_bool_exp_bool_or rebuild(
          void Function(Gusers_aggregate_bool_exp_bool_orBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_aggregate_bool_exp_bool_orBuilder toBuilder() =>
      new Gusers_aggregate_bool_exp_bool_orBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_aggregate_bool_exp_bool_or &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_aggregate_bool_exp_bool_or')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gusers_aggregate_bool_exp_bool_orBuilder
    implements
        Builder<Gusers_aggregate_bool_exp_bool_or,
            Gusers_aggregate_bool_exp_bool_orBuilder> {
  _$Gusers_aggregate_bool_exp_bool_or? _$v;

  Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns?
      _arguments;
  Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns?
      get arguments => _$this._arguments;
  set arguments(
          Gusers_select_column_users_aggregate_bool_exp_bool_or_arguments_columns?
              arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gusers_bool_expBuilder? _filter;
  Gusers_bool_expBuilder get filter =>
      _$this._filter ??= new Gusers_bool_expBuilder();
  set filter(Gusers_bool_expBuilder? filter) => _$this._filter = filter;

  GBoolean_comparison_expBuilder? _predicate;
  GBoolean_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GBoolean_comparison_expBuilder();
  set predicate(GBoolean_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gusers_aggregate_bool_exp_bool_orBuilder();

  Gusers_aggregate_bool_exp_bool_orBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments;
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_aggregate_bool_exp_bool_or other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_aggregate_bool_exp_bool_or;
  }

  @override
  void update(
      void Function(Gusers_aggregate_bool_exp_bool_orBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_aggregate_bool_exp_bool_or build() => _build();

  _$Gusers_aggregate_bool_exp_bool_or _build() {
    _$Gusers_aggregate_bool_exp_bool_or _$result;
    try {
      _$result = _$v ??
          new _$Gusers_aggregate_bool_exp_bool_or._(
              arguments: BuiltValueNullFieldError.checkNotNull(
                  arguments, r'Gusers_aggregate_bool_exp_bool_or', 'arguments'),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_aggregate_bool_exp_bool_or', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_aggregate_bool_exp_count
    extends Gusers_aggregate_bool_exp_count {
  @override
  final BuiltList<Gusers_select_column>? arguments;
  @override
  final bool? distinct;
  @override
  final Gusers_bool_exp? filter;
  @override
  final GInt_comparison_exp predicate;

  factory _$Gusers_aggregate_bool_exp_count(
          [void Function(Gusers_aggregate_bool_exp_countBuilder)? updates]) =>
      (new Gusers_aggregate_bool_exp_countBuilder()..update(updates))._build();

  _$Gusers_aggregate_bool_exp_count._(
      {this.arguments, this.distinct, this.filter, required this.predicate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        predicate, r'Gusers_aggregate_bool_exp_count', 'predicate');
  }

  @override
  Gusers_aggregate_bool_exp_count rebuild(
          void Function(Gusers_aggregate_bool_exp_countBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_aggregate_bool_exp_countBuilder toBuilder() =>
      new Gusers_aggregate_bool_exp_countBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_aggregate_bool_exp_count &&
        arguments == other.arguments &&
        distinct == other.distinct &&
        filter == other.filter &&
        predicate == other.predicate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, arguments.hashCode), distinct.hashCode),
            filter.hashCode),
        predicate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_aggregate_bool_exp_count')
          ..add('arguments', arguments)
          ..add('distinct', distinct)
          ..add('filter', filter)
          ..add('predicate', predicate))
        .toString();
  }
}

class Gusers_aggregate_bool_exp_countBuilder
    implements
        Builder<Gusers_aggregate_bool_exp_count,
            Gusers_aggregate_bool_exp_countBuilder> {
  _$Gusers_aggregate_bool_exp_count? _$v;

  ListBuilder<Gusers_select_column>? _arguments;
  ListBuilder<Gusers_select_column> get arguments =>
      _$this._arguments ??= new ListBuilder<Gusers_select_column>();
  set arguments(ListBuilder<Gusers_select_column>? arguments) =>
      _$this._arguments = arguments;

  bool? _distinct;
  bool? get distinct => _$this._distinct;
  set distinct(bool? distinct) => _$this._distinct = distinct;

  Gusers_bool_expBuilder? _filter;
  Gusers_bool_expBuilder get filter =>
      _$this._filter ??= new Gusers_bool_expBuilder();
  set filter(Gusers_bool_expBuilder? filter) => _$this._filter = filter;

  GInt_comparison_expBuilder? _predicate;
  GInt_comparison_expBuilder get predicate =>
      _$this._predicate ??= new GInt_comparison_expBuilder();
  set predicate(GInt_comparison_expBuilder? predicate) =>
      _$this._predicate = predicate;

  Gusers_aggregate_bool_exp_countBuilder();

  Gusers_aggregate_bool_exp_countBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _arguments = $v.arguments?.toBuilder();
      _distinct = $v.distinct;
      _filter = $v.filter?.toBuilder();
      _predicate = $v.predicate.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_aggregate_bool_exp_count other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_aggregate_bool_exp_count;
  }

  @override
  void update(void Function(Gusers_aggregate_bool_exp_countBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_aggregate_bool_exp_count build() => _build();

  _$Gusers_aggregate_bool_exp_count _build() {
    _$Gusers_aggregate_bool_exp_count _$result;
    try {
      _$result = _$v ??
          new _$Gusers_aggregate_bool_exp_count._(
              arguments: _arguments?.build(),
              distinct: distinct,
              filter: _filter?.build(),
              predicate: predicate.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'arguments';
        _arguments?.build();

        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'predicate';
        predicate.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_aggregate_bool_exp_count', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_aggregate_order_by extends Gusers_aggregate_order_by {
  @override
  final Gorder_by? count;
  @override
  final Gusers_max_order_by? max;
  @override
  final Gusers_min_order_by? min;

  factory _$Gusers_aggregate_order_by(
          [void Function(Gusers_aggregate_order_byBuilder)? updates]) =>
      (new Gusers_aggregate_order_byBuilder()..update(updates))._build();

  _$Gusers_aggregate_order_by._({this.count, this.max, this.min}) : super._();

  @override
  Gusers_aggregate_order_by rebuild(
          void Function(Gusers_aggregate_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_aggregate_order_byBuilder toBuilder() =>
      new Gusers_aggregate_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_aggregate_order_by &&
        count == other.count &&
        max == other.max &&
        min == other.min;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, count.hashCode), max.hashCode), min.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_aggregate_order_by')
          ..add('count', count)
          ..add('max', max)
          ..add('min', min))
        .toString();
  }
}

class Gusers_aggregate_order_byBuilder
    implements
        Builder<Gusers_aggregate_order_by, Gusers_aggregate_order_byBuilder> {
  _$Gusers_aggregate_order_by? _$v;

  Gorder_by? _count;
  Gorder_by? get count => _$this._count;
  set count(Gorder_by? count) => _$this._count = count;

  Gusers_max_order_byBuilder? _max;
  Gusers_max_order_byBuilder get max =>
      _$this._max ??= new Gusers_max_order_byBuilder();
  set max(Gusers_max_order_byBuilder? max) => _$this._max = max;

  Gusers_min_order_byBuilder? _min;
  Gusers_min_order_byBuilder get min =>
      _$this._min ??= new Gusers_min_order_byBuilder();
  set min(Gusers_min_order_byBuilder? min) => _$this._min = min;

  Gusers_aggregate_order_byBuilder();

  Gusers_aggregate_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _max = $v.max?.toBuilder();
      _min = $v.min?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_aggregate_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_aggregate_order_by;
  }

  @override
  void update(void Function(Gusers_aggregate_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_aggregate_order_by build() => _build();

  _$Gusers_aggregate_order_by _build() {
    _$Gusers_aggregate_order_by _$result;
    try {
      _$result = _$v ??
          new _$Gusers_aggregate_order_by._(
              count: count, max: _max?.build(), min: _min?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'max';
        _max?.build();
        _$failedField = 'min';
        _min?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_aggregate_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_append_input extends Gusers_append_input {
  @override
  final _i2.JsonObject? metadata;

  factory _$Gusers_append_input(
          [void Function(Gusers_append_inputBuilder)? updates]) =>
      (new Gusers_append_inputBuilder()..update(updates))._build();

  _$Gusers_append_input._({this.metadata}) : super._();

  @override
  Gusers_append_input rebuild(
          void Function(Gusers_append_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_append_inputBuilder toBuilder() =>
      new Gusers_append_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_append_input && metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(0, metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_append_input')
          ..add('metadata', metadata))
        .toString();
  }
}

class Gusers_append_inputBuilder
    implements Builder<Gusers_append_input, Gusers_append_inputBuilder> {
  _$Gusers_append_input? _$v;

  _i2.JsonObject? _metadata;
  _i2.JsonObject? get metadata => _$this._metadata;
  set metadata(_i2.JsonObject? metadata) => _$this._metadata = metadata;

  Gusers_append_inputBuilder();

  Gusers_append_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _metadata = $v.metadata;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_append_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_append_input;
  }

  @override
  void update(void Function(Gusers_append_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_append_input build() => _build();

  _$Gusers_append_input _build() {
    final _$result = _$v ?? new _$Gusers_append_input._(metadata: metadata);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_arr_rel_insert_input extends Gusers_arr_rel_insert_input {
  @override
  final BuiltList<Gusers_insert_input> data;
  @override
  final Gusers_on_conflict? on_conflict;

  factory _$Gusers_arr_rel_insert_input(
          [void Function(Gusers_arr_rel_insert_inputBuilder)? updates]) =>
      (new Gusers_arr_rel_insert_inputBuilder()..update(updates))._build();

  _$Gusers_arr_rel_insert_input._({required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'Gusers_arr_rel_insert_input', 'data');
  }

  @override
  Gusers_arr_rel_insert_input rebuild(
          void Function(Gusers_arr_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_arr_rel_insert_inputBuilder toBuilder() =>
      new Gusers_arr_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_arr_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_arr_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class Gusers_arr_rel_insert_inputBuilder
    implements
        Builder<Gusers_arr_rel_insert_input,
            Gusers_arr_rel_insert_inputBuilder> {
  _$Gusers_arr_rel_insert_input? _$v;

  ListBuilder<Gusers_insert_input>? _data;
  ListBuilder<Gusers_insert_input> get data =>
      _$this._data ??= new ListBuilder<Gusers_insert_input>();
  set data(ListBuilder<Gusers_insert_input>? data) => _$this._data = data;

  Gusers_on_conflictBuilder? _on_conflict;
  Gusers_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new Gusers_on_conflictBuilder();
  set on_conflict(Gusers_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  Gusers_arr_rel_insert_inputBuilder();

  Gusers_arr_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_arr_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_arr_rel_insert_input;
  }

  @override
  void update(void Function(Gusers_arr_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_arr_rel_insert_input build() => _build();

  _$Gusers_arr_rel_insert_input _build() {
    _$Gusers_arr_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_arr_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_arr_rel_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_bool_exp extends Gusers_bool_exp {
  @override
  final BuiltList<Gusers_bool_exp>? G_and;
  @override
  final Gusers_bool_exp? G_not;
  @override
  final BuiltList<Gusers_bool_exp>? G_or;
  @override
  final GString_comparison_exp? activeMfaType;
  @override
  final GString_comparison_exp? avatarUrl;
  @override
  final Gtimestamptz_comparison_exp? createdAt;
  @override
  final GString_comparison_exp? currentChallenge;
  @override
  final GString_comparison_exp? defaultRole;
  @override
  final GauthRoles_bool_exp? defaultRoleByRole;
  @override
  final GBoolean_comparison_exp? disabled;
  @override
  final GString_comparison_exp? displayName;
  @override
  final Gcitext_comparison_exp? email;
  @override
  final GBoolean_comparison_exp? emailVerified;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GBoolean_comparison_exp? isAnonymous;
  @override
  final Gtimestamptz_comparison_exp? lastSeen;
  @override
  final GString_comparison_exp? locale;
  @override
  final Gjsonb_comparison_exp? metadata;
  @override
  final Gcitext_comparison_exp? newEmail;
  @override
  final GString_comparison_exp? otpHash;
  @override
  final Gtimestamptz_comparison_exp? otpHashExpiresAt;
  @override
  final GString_comparison_exp? otpMethodLastUsed;
  @override
  final GString_comparison_exp? passwordHash;
  @override
  final GString_comparison_exp? phoneNumber;
  @override
  final GBoolean_comparison_exp? phoneNumberVerified;
  @override
  final GauthRefreshTokens_bool_exp? refreshTokens;
  @override
  final GauthRefreshTokens_aggregate_bool_exp? refreshTokens_aggregate;
  @override
  final GauthUserRoles_bool_exp? roles;
  @override
  final GauthUserRoles_aggregate_bool_exp? roles_aggregate;
  @override
  final GauthUserSecurityKeys_bool_exp? securityKeys;
  @override
  final GauthUserSecurityKeys_aggregate_bool_exp? securityKeys_aggregate;
  @override
  final GString_comparison_exp? ticket;
  @override
  final Gtimestamptz_comparison_exp? ticketExpiresAt;
  @override
  final GString_comparison_exp? totpSecret;
  @override
  final Gtimestamptz_comparison_exp? updatedAt;
  @override
  final GauthUserProviders_bool_exp? userProviders;
  @override
  final GauthUserProviders_aggregate_bool_exp? userProviders_aggregate;

  factory _$Gusers_bool_exp([void Function(Gusers_bool_expBuilder)? updates]) =>
      (new Gusers_bool_expBuilder()..update(updates))._build();

  _$Gusers_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.defaultRoleByRole,
      this.disabled,
      this.displayName,
      this.email,
      this.emailVerified,
      this.id,
      this.isAnonymous,
      this.lastSeen,
      this.locale,
      this.metadata,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.phoneNumberVerified,
      this.refreshTokens,
      this.refreshTokens_aggregate,
      this.roles,
      this.roles_aggregate,
      this.securityKeys,
      this.securityKeys_aggregate,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt,
      this.userProviders,
      this.userProviders_aggregate})
      : super._();

  @override
  Gusers_bool_exp rebuild(void Function(Gusers_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_bool_expBuilder toBuilder() =>
      new Gusers_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        defaultRoleByRole == other.defaultRoleByRole &&
        disabled == other.disabled &&
        displayName == other.displayName &&
        email == other.email &&
        emailVerified == other.emailVerified &&
        id == other.id &&
        isAnonymous == other.isAnonymous &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        metadata == other.metadata &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        phoneNumberVerified == other.phoneNumberVerified &&
        refreshTokens == other.refreshTokens &&
        refreshTokens_aggregate == other.refreshTokens_aggregate &&
        roles == other.roles &&
        roles_aggregate == other.roles_aggregate &&
        securityKeys == other.securityKeys &&
        securityKeys_aggregate == other.securityKeys_aggregate &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt &&
        userProviders == other.userProviders &&
        userProviders_aggregate == other.userProviders_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, G_and.hashCode), G_not.hashCode), G_or.hashCode), activeMfaType.hashCode), avatarUrl.hashCode), createdAt.hashCode), currentChallenge.hashCode), defaultRole.hashCode), defaultRoleByRole.hashCode), disabled.hashCode), displayName.hashCode), email.hashCode), emailVerified.hashCode), id.hashCode), isAnonymous.hashCode), lastSeen.hashCode), locale.hashCode), metadata.hashCode),
                                                                                newEmail.hashCode),
                                                                            otpHash.hashCode),
                                                                        otpHashExpiresAt.hashCode),
                                                                    otpMethodLastUsed.hashCode),
                                                                passwordHash.hashCode),
                                                            phoneNumber.hashCode),
                                                        phoneNumberVerified.hashCode),
                                                    refreshTokens.hashCode),
                                                refreshTokens_aggregate.hashCode),
                                            roles.hashCode),
                                        roles_aggregate.hashCode),
                                    securityKeys.hashCode),
                                securityKeys_aggregate.hashCode),
                            ticket.hashCode),
                        ticketExpiresAt.hashCode),
                    totpSecret.hashCode),
                updatedAt.hashCode),
            userProviders.hashCode),
        userProviders_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('defaultRoleByRole', defaultRoleByRole)
          ..add('disabled', disabled)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('emailVerified', emailVerified)
          ..add('id', id)
          ..add('isAnonymous', isAnonymous)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('metadata', metadata)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('phoneNumberVerified', phoneNumberVerified)
          ..add('refreshTokens', refreshTokens)
          ..add('refreshTokens_aggregate', refreshTokens_aggregate)
          ..add('roles', roles)
          ..add('roles_aggregate', roles_aggregate)
          ..add('securityKeys', securityKeys)
          ..add('securityKeys_aggregate', securityKeys_aggregate)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt)
          ..add('userProviders', userProviders)
          ..add('userProviders_aggregate', userProviders_aggregate))
        .toString();
  }
}

class Gusers_bool_expBuilder
    implements Builder<Gusers_bool_exp, Gusers_bool_expBuilder> {
  _$Gusers_bool_exp? _$v;

  ListBuilder<Gusers_bool_exp>? _G_and;
  ListBuilder<Gusers_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Gusers_bool_exp>();
  set G_and(ListBuilder<Gusers_bool_exp>? G_and) => _$this._G_and = G_and;

  Gusers_bool_expBuilder? _G_not;
  Gusers_bool_expBuilder get G_not =>
      _$this._G_not ??= new Gusers_bool_expBuilder();
  set G_not(Gusers_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Gusers_bool_exp>? _G_or;
  ListBuilder<Gusers_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Gusers_bool_exp>();
  set G_or(ListBuilder<Gusers_bool_exp>? G_or) => _$this._G_or = G_or;

  GString_comparison_expBuilder? _activeMfaType;
  GString_comparison_expBuilder get activeMfaType =>
      _$this._activeMfaType ??= new GString_comparison_expBuilder();
  set activeMfaType(GString_comparison_expBuilder? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  GString_comparison_expBuilder? _avatarUrl;
  GString_comparison_expBuilder get avatarUrl =>
      _$this._avatarUrl ??= new GString_comparison_expBuilder();
  set avatarUrl(GString_comparison_expBuilder? avatarUrl) =>
      _$this._avatarUrl = avatarUrl;

  Gtimestamptz_comparison_expBuilder? _createdAt;
  Gtimestamptz_comparison_expBuilder get createdAt =>
      _$this._createdAt ??= new Gtimestamptz_comparison_expBuilder();
  set createdAt(Gtimestamptz_comparison_expBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GString_comparison_expBuilder? _currentChallenge;
  GString_comparison_expBuilder get currentChallenge =>
      _$this._currentChallenge ??= new GString_comparison_expBuilder();
  set currentChallenge(GString_comparison_expBuilder? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  GString_comparison_expBuilder? _defaultRole;
  GString_comparison_expBuilder get defaultRole =>
      _$this._defaultRole ??= new GString_comparison_expBuilder();
  set defaultRole(GString_comparison_expBuilder? defaultRole) =>
      _$this._defaultRole = defaultRole;

  GauthRoles_bool_expBuilder? _defaultRoleByRole;
  GauthRoles_bool_expBuilder get defaultRoleByRole =>
      _$this._defaultRoleByRole ??= new GauthRoles_bool_expBuilder();
  set defaultRoleByRole(GauthRoles_bool_expBuilder? defaultRoleByRole) =>
      _$this._defaultRoleByRole = defaultRoleByRole;

  GBoolean_comparison_expBuilder? _disabled;
  GBoolean_comparison_expBuilder get disabled =>
      _$this._disabled ??= new GBoolean_comparison_expBuilder();
  set disabled(GBoolean_comparison_expBuilder? disabled) =>
      _$this._disabled = disabled;

  GString_comparison_expBuilder? _displayName;
  GString_comparison_expBuilder get displayName =>
      _$this._displayName ??= new GString_comparison_expBuilder();
  set displayName(GString_comparison_expBuilder? displayName) =>
      _$this._displayName = displayName;

  Gcitext_comparison_expBuilder? _email;
  Gcitext_comparison_expBuilder get email =>
      _$this._email ??= new Gcitext_comparison_expBuilder();
  set email(Gcitext_comparison_expBuilder? email) => _$this._email = email;

  GBoolean_comparison_expBuilder? _emailVerified;
  GBoolean_comparison_expBuilder get emailVerified =>
      _$this._emailVerified ??= new GBoolean_comparison_expBuilder();
  set emailVerified(GBoolean_comparison_expBuilder? emailVerified) =>
      _$this._emailVerified = emailVerified;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GBoolean_comparison_expBuilder? _isAnonymous;
  GBoolean_comparison_expBuilder get isAnonymous =>
      _$this._isAnonymous ??= new GBoolean_comparison_expBuilder();
  set isAnonymous(GBoolean_comparison_expBuilder? isAnonymous) =>
      _$this._isAnonymous = isAnonymous;

  Gtimestamptz_comparison_expBuilder? _lastSeen;
  Gtimestamptz_comparison_expBuilder get lastSeen =>
      _$this._lastSeen ??= new Gtimestamptz_comparison_expBuilder();
  set lastSeen(Gtimestamptz_comparison_expBuilder? lastSeen) =>
      _$this._lastSeen = lastSeen;

  GString_comparison_expBuilder? _locale;
  GString_comparison_expBuilder get locale =>
      _$this._locale ??= new GString_comparison_expBuilder();
  set locale(GString_comparison_expBuilder? locale) => _$this._locale = locale;

  Gjsonb_comparison_expBuilder? _metadata;
  Gjsonb_comparison_expBuilder get metadata =>
      _$this._metadata ??= new Gjsonb_comparison_expBuilder();
  set metadata(Gjsonb_comparison_expBuilder? metadata) =>
      _$this._metadata = metadata;

  Gcitext_comparison_expBuilder? _newEmail;
  Gcitext_comparison_expBuilder get newEmail =>
      _$this._newEmail ??= new Gcitext_comparison_expBuilder();
  set newEmail(Gcitext_comparison_expBuilder? newEmail) =>
      _$this._newEmail = newEmail;

  GString_comparison_expBuilder? _otpHash;
  GString_comparison_expBuilder get otpHash =>
      _$this._otpHash ??= new GString_comparison_expBuilder();
  set otpHash(GString_comparison_expBuilder? otpHash) =>
      _$this._otpHash = otpHash;

  Gtimestamptz_comparison_expBuilder? _otpHashExpiresAt;
  Gtimestamptz_comparison_expBuilder get otpHashExpiresAt =>
      _$this._otpHashExpiresAt ??= new Gtimestamptz_comparison_expBuilder();
  set otpHashExpiresAt(Gtimestamptz_comparison_expBuilder? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  GString_comparison_expBuilder? _otpMethodLastUsed;
  GString_comparison_expBuilder get otpMethodLastUsed =>
      _$this._otpMethodLastUsed ??= new GString_comparison_expBuilder();
  set otpMethodLastUsed(GString_comparison_expBuilder? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  GString_comparison_expBuilder? _passwordHash;
  GString_comparison_expBuilder get passwordHash =>
      _$this._passwordHash ??= new GString_comparison_expBuilder();
  set passwordHash(GString_comparison_expBuilder? passwordHash) =>
      _$this._passwordHash = passwordHash;

  GString_comparison_expBuilder? _phoneNumber;
  GString_comparison_expBuilder get phoneNumber =>
      _$this._phoneNumber ??= new GString_comparison_expBuilder();
  set phoneNumber(GString_comparison_expBuilder? phoneNumber) =>
      _$this._phoneNumber = phoneNumber;

  GBoolean_comparison_expBuilder? _phoneNumberVerified;
  GBoolean_comparison_expBuilder get phoneNumberVerified =>
      _$this._phoneNumberVerified ??= new GBoolean_comparison_expBuilder();
  set phoneNumberVerified(
          GBoolean_comparison_expBuilder? phoneNumberVerified) =>
      _$this._phoneNumberVerified = phoneNumberVerified;

  GauthRefreshTokens_bool_expBuilder? _refreshTokens;
  GauthRefreshTokens_bool_expBuilder get refreshTokens =>
      _$this._refreshTokens ??= new GauthRefreshTokens_bool_expBuilder();
  set refreshTokens(GauthRefreshTokens_bool_expBuilder? refreshTokens) =>
      _$this._refreshTokens = refreshTokens;

  GauthRefreshTokens_aggregate_bool_expBuilder? _refreshTokens_aggregate;
  GauthRefreshTokens_aggregate_bool_expBuilder get refreshTokens_aggregate =>
      _$this._refreshTokens_aggregate ??=
          new GauthRefreshTokens_aggregate_bool_expBuilder();
  set refreshTokens_aggregate(
          GauthRefreshTokens_aggregate_bool_expBuilder?
              refreshTokens_aggregate) =>
      _$this._refreshTokens_aggregate = refreshTokens_aggregate;

  GauthUserRoles_bool_expBuilder? _roles;
  GauthUserRoles_bool_expBuilder get roles =>
      _$this._roles ??= new GauthUserRoles_bool_expBuilder();
  set roles(GauthUserRoles_bool_expBuilder? roles) => _$this._roles = roles;

  GauthUserRoles_aggregate_bool_expBuilder? _roles_aggregate;
  GauthUserRoles_aggregate_bool_expBuilder get roles_aggregate =>
      _$this._roles_aggregate ??=
          new GauthUserRoles_aggregate_bool_expBuilder();
  set roles_aggregate(
          GauthUserRoles_aggregate_bool_expBuilder? roles_aggregate) =>
      _$this._roles_aggregate = roles_aggregate;

  GauthUserSecurityKeys_bool_expBuilder? _securityKeys;
  GauthUserSecurityKeys_bool_expBuilder get securityKeys =>
      _$this._securityKeys ??= new GauthUserSecurityKeys_bool_expBuilder();
  set securityKeys(GauthUserSecurityKeys_bool_expBuilder? securityKeys) =>
      _$this._securityKeys = securityKeys;

  GauthUserSecurityKeys_aggregate_bool_expBuilder? _securityKeys_aggregate;
  GauthUserSecurityKeys_aggregate_bool_expBuilder get securityKeys_aggregate =>
      _$this._securityKeys_aggregate ??=
          new GauthUserSecurityKeys_aggregate_bool_expBuilder();
  set securityKeys_aggregate(
          GauthUserSecurityKeys_aggregate_bool_expBuilder?
              securityKeys_aggregate) =>
      _$this._securityKeys_aggregate = securityKeys_aggregate;

  GString_comparison_expBuilder? _ticket;
  GString_comparison_expBuilder get ticket =>
      _$this._ticket ??= new GString_comparison_expBuilder();
  set ticket(GString_comparison_expBuilder? ticket) => _$this._ticket = ticket;

  Gtimestamptz_comparison_expBuilder? _ticketExpiresAt;
  Gtimestamptz_comparison_expBuilder get ticketExpiresAt =>
      _$this._ticketExpiresAt ??= new Gtimestamptz_comparison_expBuilder();
  set ticketExpiresAt(Gtimestamptz_comparison_expBuilder? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  GString_comparison_expBuilder? _totpSecret;
  GString_comparison_expBuilder get totpSecret =>
      _$this._totpSecret ??= new GString_comparison_expBuilder();
  set totpSecret(GString_comparison_expBuilder? totpSecret) =>
      _$this._totpSecret = totpSecret;

  Gtimestamptz_comparison_expBuilder? _updatedAt;
  Gtimestamptz_comparison_expBuilder get updatedAt =>
      _$this._updatedAt ??= new Gtimestamptz_comparison_expBuilder();
  set updatedAt(Gtimestamptz_comparison_expBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GauthUserProviders_bool_expBuilder? _userProviders;
  GauthUserProviders_bool_expBuilder get userProviders =>
      _$this._userProviders ??= new GauthUserProviders_bool_expBuilder();
  set userProviders(GauthUserProviders_bool_expBuilder? userProviders) =>
      _$this._userProviders = userProviders;

  GauthUserProviders_aggregate_bool_expBuilder? _userProviders_aggregate;
  GauthUserProviders_aggregate_bool_expBuilder get userProviders_aggregate =>
      _$this._userProviders_aggregate ??=
          new GauthUserProviders_aggregate_bool_expBuilder();
  set userProviders_aggregate(
          GauthUserProviders_aggregate_bool_expBuilder?
              userProviders_aggregate) =>
      _$this._userProviders_aggregate = userProviders_aggregate;

  Gusers_bool_expBuilder();

  Gusers_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _activeMfaType = $v.activeMfaType?.toBuilder();
      _avatarUrl = $v.avatarUrl?.toBuilder();
      _createdAt = $v.createdAt?.toBuilder();
      _currentChallenge = $v.currentChallenge?.toBuilder();
      _defaultRole = $v.defaultRole?.toBuilder();
      _defaultRoleByRole = $v.defaultRoleByRole?.toBuilder();
      _disabled = $v.disabled?.toBuilder();
      _displayName = $v.displayName?.toBuilder();
      _email = $v.email?.toBuilder();
      _emailVerified = $v.emailVerified?.toBuilder();
      _id = $v.id?.toBuilder();
      _isAnonymous = $v.isAnonymous?.toBuilder();
      _lastSeen = $v.lastSeen?.toBuilder();
      _locale = $v.locale?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _newEmail = $v.newEmail?.toBuilder();
      _otpHash = $v.otpHash?.toBuilder();
      _otpHashExpiresAt = $v.otpHashExpiresAt?.toBuilder();
      _otpMethodLastUsed = $v.otpMethodLastUsed?.toBuilder();
      _passwordHash = $v.passwordHash?.toBuilder();
      _phoneNumber = $v.phoneNumber?.toBuilder();
      _phoneNumberVerified = $v.phoneNumberVerified?.toBuilder();
      _refreshTokens = $v.refreshTokens?.toBuilder();
      _refreshTokens_aggregate = $v.refreshTokens_aggregate?.toBuilder();
      _roles = $v.roles?.toBuilder();
      _roles_aggregate = $v.roles_aggregate?.toBuilder();
      _securityKeys = $v.securityKeys?.toBuilder();
      _securityKeys_aggregate = $v.securityKeys_aggregate?.toBuilder();
      _ticket = $v.ticket?.toBuilder();
      _ticketExpiresAt = $v.ticketExpiresAt?.toBuilder();
      _totpSecret = $v.totpSecret?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _userProviders = $v.userProviders?.toBuilder();
      _userProviders_aggregate = $v.userProviders_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_bool_exp;
  }

  @override
  void update(void Function(Gusers_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_bool_exp build() => _build();

  _$Gusers_bool_exp _build() {
    _$Gusers_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gusers_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              activeMfaType: _activeMfaType?.build(),
              avatarUrl: _avatarUrl?.build(),
              createdAt: _createdAt?.build(),
              currentChallenge: _currentChallenge?.build(),
              defaultRole: _defaultRole?.build(),
              defaultRoleByRole: _defaultRoleByRole?.build(),
              disabled: _disabled?.build(),
              displayName: _displayName?.build(),
              email: _email?.build(),
              emailVerified: _emailVerified?.build(),
              id: _id?.build(),
              isAnonymous: _isAnonymous?.build(),
              lastSeen: _lastSeen?.build(),
              locale: _locale?.build(),
              metadata: _metadata?.build(),
              newEmail: _newEmail?.build(),
              otpHash: _otpHash?.build(),
              otpHashExpiresAt: _otpHashExpiresAt?.build(),
              otpMethodLastUsed: _otpMethodLastUsed?.build(),
              passwordHash: _passwordHash?.build(),
              phoneNumber: _phoneNumber?.build(),
              phoneNumberVerified: _phoneNumberVerified?.build(),
              refreshTokens: _refreshTokens?.build(),
              refreshTokens_aggregate: _refreshTokens_aggregate?.build(),
              roles: _roles?.build(),
              roles_aggregate: _roles_aggregate?.build(),
              securityKeys: _securityKeys?.build(),
              securityKeys_aggregate: _securityKeys_aggregate?.build(),
              ticket: _ticket?.build(),
              ticketExpiresAt: _ticketExpiresAt?.build(),
              totpSecret: _totpSecret?.build(),
              updatedAt: _updatedAt?.build(),
              userProviders: _userProviders?.build(),
              userProviders_aggregate: _userProviders_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'activeMfaType';
        _activeMfaType?.build();
        _$failedField = 'avatarUrl';
        _avatarUrl?.build();
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'currentChallenge';
        _currentChallenge?.build();
        _$failedField = 'defaultRole';
        _defaultRole?.build();
        _$failedField = 'defaultRoleByRole';
        _defaultRoleByRole?.build();
        _$failedField = 'disabled';
        _disabled?.build();
        _$failedField = 'displayName';
        _displayName?.build();
        _$failedField = 'email';
        _email?.build();
        _$failedField = 'emailVerified';
        _emailVerified?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'isAnonymous';
        _isAnonymous?.build();
        _$failedField = 'lastSeen';
        _lastSeen?.build();
        _$failedField = 'locale';
        _locale?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'newEmail';
        _newEmail?.build();
        _$failedField = 'otpHash';
        _otpHash?.build();
        _$failedField = 'otpHashExpiresAt';
        _otpHashExpiresAt?.build();
        _$failedField = 'otpMethodLastUsed';
        _otpMethodLastUsed?.build();
        _$failedField = 'passwordHash';
        _passwordHash?.build();
        _$failedField = 'phoneNumber';
        _phoneNumber?.build();
        _$failedField = 'phoneNumberVerified';
        _phoneNumberVerified?.build();
        _$failedField = 'refreshTokens';
        _refreshTokens?.build();
        _$failedField = 'refreshTokens_aggregate';
        _refreshTokens_aggregate?.build();
        _$failedField = 'roles';
        _roles?.build();
        _$failedField = 'roles_aggregate';
        _roles_aggregate?.build();
        _$failedField = 'securityKeys';
        _securityKeys?.build();
        _$failedField = 'securityKeys_aggregate';
        _securityKeys_aggregate?.build();
        _$failedField = 'ticket';
        _ticket?.build();
        _$failedField = 'ticketExpiresAt';
        _ticketExpiresAt?.build();
        _$failedField = 'totpSecret';
        _totpSecret?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'userProviders';
        _userProviders?.build();
        _$failedField = 'userProviders_aggregate';
        _userProviders_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_delete_at_path_input extends Gusers_delete_at_path_input {
  @override
  final BuiltList<String>? metadata;

  factory _$Gusers_delete_at_path_input(
          [void Function(Gusers_delete_at_path_inputBuilder)? updates]) =>
      (new Gusers_delete_at_path_inputBuilder()..update(updates))._build();

  _$Gusers_delete_at_path_input._({this.metadata}) : super._();

  @override
  Gusers_delete_at_path_input rebuild(
          void Function(Gusers_delete_at_path_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_delete_at_path_inputBuilder toBuilder() =>
      new Gusers_delete_at_path_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_delete_at_path_input && metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(0, metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_delete_at_path_input')
          ..add('metadata', metadata))
        .toString();
  }
}

class Gusers_delete_at_path_inputBuilder
    implements
        Builder<Gusers_delete_at_path_input,
            Gusers_delete_at_path_inputBuilder> {
  _$Gusers_delete_at_path_input? _$v;

  ListBuilder<String>? _metadata;
  ListBuilder<String> get metadata =>
      _$this._metadata ??= new ListBuilder<String>();
  set metadata(ListBuilder<String>? metadata) => _$this._metadata = metadata;

  Gusers_delete_at_path_inputBuilder();

  Gusers_delete_at_path_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _metadata = $v.metadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_delete_at_path_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_delete_at_path_input;
  }

  @override
  void update(void Function(Gusers_delete_at_path_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_delete_at_path_input build() => _build();

  _$Gusers_delete_at_path_input _build() {
    _$Gusers_delete_at_path_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_delete_at_path_input._(metadata: _metadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_delete_at_path_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_delete_elem_input extends Gusers_delete_elem_input {
  @override
  final int? metadata;

  factory _$Gusers_delete_elem_input(
          [void Function(Gusers_delete_elem_inputBuilder)? updates]) =>
      (new Gusers_delete_elem_inputBuilder()..update(updates))._build();

  _$Gusers_delete_elem_input._({this.metadata}) : super._();

  @override
  Gusers_delete_elem_input rebuild(
          void Function(Gusers_delete_elem_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_delete_elem_inputBuilder toBuilder() =>
      new Gusers_delete_elem_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_delete_elem_input && metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(0, metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_delete_elem_input')
          ..add('metadata', metadata))
        .toString();
  }
}

class Gusers_delete_elem_inputBuilder
    implements
        Builder<Gusers_delete_elem_input, Gusers_delete_elem_inputBuilder> {
  _$Gusers_delete_elem_input? _$v;

  int? _metadata;
  int? get metadata => _$this._metadata;
  set metadata(int? metadata) => _$this._metadata = metadata;

  Gusers_delete_elem_inputBuilder();

  Gusers_delete_elem_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _metadata = $v.metadata;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_delete_elem_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_delete_elem_input;
  }

  @override
  void update(void Function(Gusers_delete_elem_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_delete_elem_input build() => _build();

  _$Gusers_delete_elem_input _build() {
    final _$result =
        _$v ?? new _$Gusers_delete_elem_input._(metadata: metadata);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_delete_key_input extends Gusers_delete_key_input {
  @override
  final String? metadata;

  factory _$Gusers_delete_key_input(
          [void Function(Gusers_delete_key_inputBuilder)? updates]) =>
      (new Gusers_delete_key_inputBuilder()..update(updates))._build();

  _$Gusers_delete_key_input._({this.metadata}) : super._();

  @override
  Gusers_delete_key_input rebuild(
          void Function(Gusers_delete_key_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_delete_key_inputBuilder toBuilder() =>
      new Gusers_delete_key_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_delete_key_input && metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(0, metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_delete_key_input')
          ..add('metadata', metadata))
        .toString();
  }
}

class Gusers_delete_key_inputBuilder
    implements
        Builder<Gusers_delete_key_input, Gusers_delete_key_inputBuilder> {
  _$Gusers_delete_key_input? _$v;

  String? _metadata;
  String? get metadata => _$this._metadata;
  set metadata(String? metadata) => _$this._metadata = metadata;

  Gusers_delete_key_inputBuilder();

  Gusers_delete_key_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _metadata = $v.metadata;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_delete_key_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_delete_key_input;
  }

  @override
  void update(void Function(Gusers_delete_key_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_delete_key_input build() => _build();

  _$Gusers_delete_key_input _build() {
    final _$result = _$v ?? new _$Gusers_delete_key_input._(metadata: metadata);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_insert_input extends Gusers_insert_input {
  @override
  final String? activeMfaType;
  @override
  final String? avatarUrl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? currentChallenge;
  @override
  final String? defaultRole;
  @override
  final GauthRoles_obj_rel_insert_input? defaultRoleByRole;
  @override
  final bool? disabled;
  @override
  final String? displayName;
  @override
  final Gcitext? email;
  @override
  final bool? emailVerified;
  @override
  final Guuid? id;
  @override
  final bool? isAnonymous;
  @override
  final Gtimestamptz? lastSeen;
  @override
  final String? locale;
  @override
  final _i2.JsonObject? metadata;
  @override
  final Gcitext? newEmail;
  @override
  final String? otpHash;
  @override
  final Gtimestamptz? otpHashExpiresAt;
  @override
  final String? otpMethodLastUsed;
  @override
  final String? passwordHash;
  @override
  final String? phoneNumber;
  @override
  final bool? phoneNumberVerified;
  @override
  final GauthRefreshTokens_arr_rel_insert_input? refreshTokens;
  @override
  final GauthUserRoles_arr_rel_insert_input? roles;
  @override
  final GauthUserSecurityKeys_arr_rel_insert_input? securityKeys;
  @override
  final String? ticket;
  @override
  final Gtimestamptz? ticketExpiresAt;
  @override
  final String? totpSecret;
  @override
  final Gtimestamptz? updatedAt;
  @override
  final GauthUserProviders_arr_rel_insert_input? userProviders;

  factory _$Gusers_insert_input(
          [void Function(Gusers_insert_inputBuilder)? updates]) =>
      (new Gusers_insert_inputBuilder()..update(updates))._build();

  _$Gusers_insert_input._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.defaultRoleByRole,
      this.disabled,
      this.displayName,
      this.email,
      this.emailVerified,
      this.id,
      this.isAnonymous,
      this.lastSeen,
      this.locale,
      this.metadata,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.phoneNumberVerified,
      this.refreshTokens,
      this.roles,
      this.securityKeys,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt,
      this.userProviders})
      : super._();

  @override
  Gusers_insert_input rebuild(
          void Function(Gusers_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_insert_inputBuilder toBuilder() =>
      new Gusers_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_insert_input &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        defaultRoleByRole == other.defaultRoleByRole &&
        disabled == other.disabled &&
        displayName == other.displayName &&
        email == other.email &&
        emailVerified == other.emailVerified &&
        id == other.id &&
        isAnonymous == other.isAnonymous &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        metadata == other.metadata &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        phoneNumberVerified == other.phoneNumberVerified &&
        refreshTokens == other.refreshTokens &&
        roles == other.roles &&
        securityKeys == other.securityKeys &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt &&
        userProviders == other.userProviders;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, activeMfaType.hashCode), avatarUrl.hashCode), createdAt.hashCode), currentChallenge.hashCode), defaultRole.hashCode), defaultRoleByRole.hashCode), disabled.hashCode), displayName.hashCode), email.hashCode), emailVerified.hashCode), id.hashCode),
                                                                                isAnonymous.hashCode),
                                                                            lastSeen.hashCode),
                                                                        locale.hashCode),
                                                                    metadata.hashCode),
                                                                newEmail.hashCode),
                                                            otpHash.hashCode),
                                                        otpHashExpiresAt.hashCode),
                                                    otpMethodLastUsed.hashCode),
                                                passwordHash.hashCode),
                                            phoneNumber.hashCode),
                                        phoneNumberVerified.hashCode),
                                    refreshTokens.hashCode),
                                roles.hashCode),
                            securityKeys.hashCode),
                        ticket.hashCode),
                    ticketExpiresAt.hashCode),
                totpSecret.hashCode),
            updatedAt.hashCode),
        userProviders.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_insert_input')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('defaultRoleByRole', defaultRoleByRole)
          ..add('disabled', disabled)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('emailVerified', emailVerified)
          ..add('id', id)
          ..add('isAnonymous', isAnonymous)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('metadata', metadata)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('phoneNumberVerified', phoneNumberVerified)
          ..add('refreshTokens', refreshTokens)
          ..add('roles', roles)
          ..add('securityKeys', securityKeys)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt)
          ..add('userProviders', userProviders))
        .toString();
  }
}

class Gusers_insert_inputBuilder
    implements Builder<Gusers_insert_input, Gusers_insert_inputBuilder> {
  _$Gusers_insert_input? _$v;

  String? _activeMfaType;
  String? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(String? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  String? _avatarUrl;
  String? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(String? avatarUrl) => _$this._avatarUrl = avatarUrl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _currentChallenge;
  String? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(String? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  String? _defaultRole;
  String? get defaultRole => _$this._defaultRole;
  set defaultRole(String? defaultRole) => _$this._defaultRole = defaultRole;

  GauthRoles_obj_rel_insert_inputBuilder? _defaultRoleByRole;
  GauthRoles_obj_rel_insert_inputBuilder get defaultRoleByRole =>
      _$this._defaultRoleByRole ??=
          new GauthRoles_obj_rel_insert_inputBuilder();
  set defaultRoleByRole(
          GauthRoles_obj_rel_insert_inputBuilder? defaultRoleByRole) =>
      _$this._defaultRoleByRole = defaultRoleByRole;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  GcitextBuilder? _email;
  GcitextBuilder get email => _$this._email ??= new GcitextBuilder();
  set email(GcitextBuilder? email) => _$this._email = email;

  bool? _emailVerified;
  bool? get emailVerified => _$this._emailVerified;
  set emailVerified(bool? emailVerified) =>
      _$this._emailVerified = emailVerified;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isAnonymous;
  bool? get isAnonymous => _$this._isAnonymous;
  set isAnonymous(bool? isAnonymous) => _$this._isAnonymous = isAnonymous;

  GtimestamptzBuilder? _lastSeen;
  GtimestamptzBuilder get lastSeen =>
      _$this._lastSeen ??= new GtimestamptzBuilder();
  set lastSeen(GtimestamptzBuilder? lastSeen) => _$this._lastSeen = lastSeen;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  _i2.JsonObject? _metadata;
  _i2.JsonObject? get metadata => _$this._metadata;
  set metadata(_i2.JsonObject? metadata) => _$this._metadata = metadata;

  GcitextBuilder? _newEmail;
  GcitextBuilder get newEmail => _$this._newEmail ??= new GcitextBuilder();
  set newEmail(GcitextBuilder? newEmail) => _$this._newEmail = newEmail;

  String? _otpHash;
  String? get otpHash => _$this._otpHash;
  set otpHash(String? otpHash) => _$this._otpHash = otpHash;

  GtimestamptzBuilder? _otpHashExpiresAt;
  GtimestamptzBuilder get otpHashExpiresAt =>
      _$this._otpHashExpiresAt ??= new GtimestamptzBuilder();
  set otpHashExpiresAt(GtimestamptzBuilder? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  String? _otpMethodLastUsed;
  String? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(String? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  String? _passwordHash;
  String? get passwordHash => _$this._passwordHash;
  set passwordHash(String? passwordHash) => _$this._passwordHash = passwordHash;

  String? _phoneNumber;
  String? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(String? phoneNumber) => _$this._phoneNumber = phoneNumber;

  bool? _phoneNumberVerified;
  bool? get phoneNumberVerified => _$this._phoneNumberVerified;
  set phoneNumberVerified(bool? phoneNumberVerified) =>
      _$this._phoneNumberVerified = phoneNumberVerified;

  GauthRefreshTokens_arr_rel_insert_inputBuilder? _refreshTokens;
  GauthRefreshTokens_arr_rel_insert_inputBuilder get refreshTokens =>
      _$this._refreshTokens ??=
          new GauthRefreshTokens_arr_rel_insert_inputBuilder();
  set refreshTokens(
          GauthRefreshTokens_arr_rel_insert_inputBuilder? refreshTokens) =>
      _$this._refreshTokens = refreshTokens;

  GauthUserRoles_arr_rel_insert_inputBuilder? _roles;
  GauthUserRoles_arr_rel_insert_inputBuilder get roles =>
      _$this._roles ??= new GauthUserRoles_arr_rel_insert_inputBuilder();
  set roles(GauthUserRoles_arr_rel_insert_inputBuilder? roles) =>
      _$this._roles = roles;

  GauthUserSecurityKeys_arr_rel_insert_inputBuilder? _securityKeys;
  GauthUserSecurityKeys_arr_rel_insert_inputBuilder get securityKeys =>
      _$this._securityKeys ??=
          new GauthUserSecurityKeys_arr_rel_insert_inputBuilder();
  set securityKeys(
          GauthUserSecurityKeys_arr_rel_insert_inputBuilder? securityKeys) =>
      _$this._securityKeys = securityKeys;

  String? _ticket;
  String? get ticket => _$this._ticket;
  set ticket(String? ticket) => _$this._ticket = ticket;

  GtimestamptzBuilder? _ticketExpiresAt;
  GtimestamptzBuilder get ticketExpiresAt =>
      _$this._ticketExpiresAt ??= new GtimestamptzBuilder();
  set ticketExpiresAt(GtimestamptzBuilder? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  String? _totpSecret;
  String? get totpSecret => _$this._totpSecret;
  set totpSecret(String? totpSecret) => _$this._totpSecret = totpSecret;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GauthUserProviders_arr_rel_insert_inputBuilder? _userProviders;
  GauthUserProviders_arr_rel_insert_inputBuilder get userProviders =>
      _$this._userProviders ??=
          new GauthUserProviders_arr_rel_insert_inputBuilder();
  set userProviders(
          GauthUserProviders_arr_rel_insert_inputBuilder? userProviders) =>
      _$this._userProviders = userProviders;

  Gusers_insert_inputBuilder();

  Gusers_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt?.toBuilder();
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _defaultRoleByRole = $v.defaultRoleByRole?.toBuilder();
      _disabled = $v.disabled;
      _displayName = $v.displayName;
      _email = $v.email?.toBuilder();
      _emailVerified = $v.emailVerified;
      _id = $v.id?.toBuilder();
      _isAnonymous = $v.isAnonymous;
      _lastSeen = $v.lastSeen?.toBuilder();
      _locale = $v.locale;
      _metadata = $v.metadata;
      _newEmail = $v.newEmail?.toBuilder();
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt?.toBuilder();
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _phoneNumberVerified = $v.phoneNumberVerified;
      _refreshTokens = $v.refreshTokens?.toBuilder();
      _roles = $v.roles?.toBuilder();
      _securityKeys = $v.securityKeys?.toBuilder();
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt?.toBuilder();
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt?.toBuilder();
      _userProviders = $v.userProviders?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_insert_input;
  }

  @override
  void update(void Function(Gusers_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_insert_input build() => _build();

  _$Gusers_insert_input _build() {
    _$Gusers_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_insert_input._(
              activeMfaType: activeMfaType,
              avatarUrl: avatarUrl,
              createdAt: _createdAt?.build(),
              currentChallenge: currentChallenge,
              defaultRole: defaultRole,
              defaultRoleByRole: _defaultRoleByRole?.build(),
              disabled: disabled,
              displayName: displayName,
              email: _email?.build(),
              emailVerified: emailVerified,
              id: _id?.build(),
              isAnonymous: isAnonymous,
              lastSeen: _lastSeen?.build(),
              locale: locale,
              metadata: metadata,
              newEmail: _newEmail?.build(),
              otpHash: otpHash,
              otpHashExpiresAt: _otpHashExpiresAt?.build(),
              otpMethodLastUsed: otpMethodLastUsed,
              passwordHash: passwordHash,
              phoneNumber: phoneNumber,
              phoneNumberVerified: phoneNumberVerified,
              refreshTokens: _refreshTokens?.build(),
              roles: _roles?.build(),
              securityKeys: _securityKeys?.build(),
              ticket: ticket,
              ticketExpiresAt: _ticketExpiresAt?.build(),
              totpSecret: totpSecret,
              updatedAt: _updatedAt?.build(),
              userProviders: _userProviders?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'defaultRoleByRole';
        _defaultRoleByRole?.build();

        _$failedField = 'email';
        _email?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'lastSeen';
        _lastSeen?.build();

        _$failedField = 'newEmail';
        _newEmail?.build();

        _$failedField = 'otpHashExpiresAt';
        _otpHashExpiresAt?.build();

        _$failedField = 'refreshTokens';
        _refreshTokens?.build();
        _$failedField = 'roles';
        _roles?.build();
        _$failedField = 'securityKeys';
        _securityKeys?.build();

        _$failedField = 'ticketExpiresAt';
        _ticketExpiresAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'userProviders';
        _userProviders?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_max_order_by extends Gusers_max_order_by {
  @override
  final Gorder_by? activeMfaType;
  @override
  final Gorder_by? avatarUrl;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? currentChallenge;
  @override
  final Gorder_by? defaultRole;
  @override
  final Gorder_by? displayName;
  @override
  final Gorder_by? email;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? lastSeen;
  @override
  final Gorder_by? locale;
  @override
  final Gorder_by? newEmail;
  @override
  final Gorder_by? otpHash;
  @override
  final Gorder_by? otpHashExpiresAt;
  @override
  final Gorder_by? otpMethodLastUsed;
  @override
  final Gorder_by? passwordHash;
  @override
  final Gorder_by? phoneNumber;
  @override
  final Gorder_by? ticket;
  @override
  final Gorder_by? ticketExpiresAt;
  @override
  final Gorder_by? totpSecret;
  @override
  final Gorder_by? updatedAt;

  factory _$Gusers_max_order_by(
          [void Function(Gusers_max_order_byBuilder)? updates]) =>
      (new Gusers_max_order_byBuilder()..update(updates))._build();

  _$Gusers_max_order_by._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.displayName,
      this.email,
      this.id,
      this.lastSeen,
      this.locale,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt})
      : super._();

  @override
  Gusers_max_order_by rebuild(
          void Function(Gusers_max_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_max_order_byBuilder toBuilder() =>
      new Gusers_max_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_max_order_by &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        displayName == other.displayName &&
        email == other.email &&
        id == other.id &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc(0, activeMfaType.hashCode),
                                                                                avatarUrl.hashCode),
                                                                            createdAt.hashCode),
                                                                        currentChallenge.hashCode),
                                                                    defaultRole.hashCode),
                                                                displayName.hashCode),
                                                            email.hashCode),
                                                        id.hashCode),
                                                    lastSeen.hashCode),
                                                locale.hashCode),
                                            newEmail.hashCode),
                                        otpHash.hashCode),
                                    otpHashExpiresAt.hashCode),
                                otpMethodLastUsed.hashCode),
                            passwordHash.hashCode),
                        phoneNumber.hashCode),
                    ticket.hashCode),
                ticketExpiresAt.hashCode),
            totpSecret.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_max_order_by')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gusers_max_order_byBuilder
    implements Builder<Gusers_max_order_by, Gusers_max_order_byBuilder> {
  _$Gusers_max_order_by? _$v;

  Gorder_by? _activeMfaType;
  Gorder_by? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(Gorder_by? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  Gorder_by? _avatarUrl;
  Gorder_by? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(Gorder_by? avatarUrl) => _$this._avatarUrl = avatarUrl;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _currentChallenge;
  Gorder_by? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(Gorder_by? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  Gorder_by? _defaultRole;
  Gorder_by? get defaultRole => _$this._defaultRole;
  set defaultRole(Gorder_by? defaultRole) => _$this._defaultRole = defaultRole;

  Gorder_by? _displayName;
  Gorder_by? get displayName => _$this._displayName;
  set displayName(Gorder_by? displayName) => _$this._displayName = displayName;

  Gorder_by? _email;
  Gorder_by? get email => _$this._email;
  set email(Gorder_by? email) => _$this._email = email;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _lastSeen;
  Gorder_by? get lastSeen => _$this._lastSeen;
  set lastSeen(Gorder_by? lastSeen) => _$this._lastSeen = lastSeen;

  Gorder_by? _locale;
  Gorder_by? get locale => _$this._locale;
  set locale(Gorder_by? locale) => _$this._locale = locale;

  Gorder_by? _newEmail;
  Gorder_by? get newEmail => _$this._newEmail;
  set newEmail(Gorder_by? newEmail) => _$this._newEmail = newEmail;

  Gorder_by? _otpHash;
  Gorder_by? get otpHash => _$this._otpHash;
  set otpHash(Gorder_by? otpHash) => _$this._otpHash = otpHash;

  Gorder_by? _otpHashExpiresAt;
  Gorder_by? get otpHashExpiresAt => _$this._otpHashExpiresAt;
  set otpHashExpiresAt(Gorder_by? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  Gorder_by? _otpMethodLastUsed;
  Gorder_by? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(Gorder_by? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  Gorder_by? _passwordHash;
  Gorder_by? get passwordHash => _$this._passwordHash;
  set passwordHash(Gorder_by? passwordHash) =>
      _$this._passwordHash = passwordHash;

  Gorder_by? _phoneNumber;
  Gorder_by? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(Gorder_by? phoneNumber) => _$this._phoneNumber = phoneNumber;

  Gorder_by? _ticket;
  Gorder_by? get ticket => _$this._ticket;
  set ticket(Gorder_by? ticket) => _$this._ticket = ticket;

  Gorder_by? _ticketExpiresAt;
  Gorder_by? get ticketExpiresAt => _$this._ticketExpiresAt;
  set ticketExpiresAt(Gorder_by? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  Gorder_by? _totpSecret;
  Gorder_by? get totpSecret => _$this._totpSecret;
  set totpSecret(Gorder_by? totpSecret) => _$this._totpSecret = totpSecret;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gusers_max_order_byBuilder();

  Gusers_max_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt;
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _displayName = $v.displayName;
      _email = $v.email;
      _id = $v.id;
      _lastSeen = $v.lastSeen;
      _locale = $v.locale;
      _newEmail = $v.newEmail;
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt;
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt;
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_max_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_max_order_by;
  }

  @override
  void update(void Function(Gusers_max_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_max_order_by build() => _build();

  _$Gusers_max_order_by _build() {
    final _$result = _$v ??
        new _$Gusers_max_order_by._(
            activeMfaType: activeMfaType,
            avatarUrl: avatarUrl,
            createdAt: createdAt,
            currentChallenge: currentChallenge,
            defaultRole: defaultRole,
            displayName: displayName,
            email: email,
            id: id,
            lastSeen: lastSeen,
            locale: locale,
            newEmail: newEmail,
            otpHash: otpHash,
            otpHashExpiresAt: otpHashExpiresAt,
            otpMethodLastUsed: otpMethodLastUsed,
            passwordHash: passwordHash,
            phoneNumber: phoneNumber,
            ticket: ticket,
            ticketExpiresAt: ticketExpiresAt,
            totpSecret: totpSecret,
            updatedAt: updatedAt);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_min_order_by extends Gusers_min_order_by {
  @override
  final Gorder_by? activeMfaType;
  @override
  final Gorder_by? avatarUrl;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? currentChallenge;
  @override
  final Gorder_by? defaultRole;
  @override
  final Gorder_by? displayName;
  @override
  final Gorder_by? email;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? lastSeen;
  @override
  final Gorder_by? locale;
  @override
  final Gorder_by? newEmail;
  @override
  final Gorder_by? otpHash;
  @override
  final Gorder_by? otpHashExpiresAt;
  @override
  final Gorder_by? otpMethodLastUsed;
  @override
  final Gorder_by? passwordHash;
  @override
  final Gorder_by? phoneNumber;
  @override
  final Gorder_by? ticket;
  @override
  final Gorder_by? ticketExpiresAt;
  @override
  final Gorder_by? totpSecret;
  @override
  final Gorder_by? updatedAt;

  factory _$Gusers_min_order_by(
          [void Function(Gusers_min_order_byBuilder)? updates]) =>
      (new Gusers_min_order_byBuilder()..update(updates))._build();

  _$Gusers_min_order_by._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.displayName,
      this.email,
      this.id,
      this.lastSeen,
      this.locale,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt})
      : super._();

  @override
  Gusers_min_order_by rebuild(
          void Function(Gusers_min_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_min_order_byBuilder toBuilder() =>
      new Gusers_min_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_min_order_by &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        displayName == other.displayName &&
        email == other.email &&
        id == other.id &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc(0, activeMfaType.hashCode),
                                                                                avatarUrl.hashCode),
                                                                            createdAt.hashCode),
                                                                        currentChallenge.hashCode),
                                                                    defaultRole.hashCode),
                                                                displayName.hashCode),
                                                            email.hashCode),
                                                        id.hashCode),
                                                    lastSeen.hashCode),
                                                locale.hashCode),
                                            newEmail.hashCode),
                                        otpHash.hashCode),
                                    otpHashExpiresAt.hashCode),
                                otpMethodLastUsed.hashCode),
                            passwordHash.hashCode),
                        phoneNumber.hashCode),
                    ticket.hashCode),
                ticketExpiresAt.hashCode),
            totpSecret.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_min_order_by')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gusers_min_order_byBuilder
    implements Builder<Gusers_min_order_by, Gusers_min_order_byBuilder> {
  _$Gusers_min_order_by? _$v;

  Gorder_by? _activeMfaType;
  Gorder_by? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(Gorder_by? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  Gorder_by? _avatarUrl;
  Gorder_by? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(Gorder_by? avatarUrl) => _$this._avatarUrl = avatarUrl;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _currentChallenge;
  Gorder_by? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(Gorder_by? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  Gorder_by? _defaultRole;
  Gorder_by? get defaultRole => _$this._defaultRole;
  set defaultRole(Gorder_by? defaultRole) => _$this._defaultRole = defaultRole;

  Gorder_by? _displayName;
  Gorder_by? get displayName => _$this._displayName;
  set displayName(Gorder_by? displayName) => _$this._displayName = displayName;

  Gorder_by? _email;
  Gorder_by? get email => _$this._email;
  set email(Gorder_by? email) => _$this._email = email;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _lastSeen;
  Gorder_by? get lastSeen => _$this._lastSeen;
  set lastSeen(Gorder_by? lastSeen) => _$this._lastSeen = lastSeen;

  Gorder_by? _locale;
  Gorder_by? get locale => _$this._locale;
  set locale(Gorder_by? locale) => _$this._locale = locale;

  Gorder_by? _newEmail;
  Gorder_by? get newEmail => _$this._newEmail;
  set newEmail(Gorder_by? newEmail) => _$this._newEmail = newEmail;

  Gorder_by? _otpHash;
  Gorder_by? get otpHash => _$this._otpHash;
  set otpHash(Gorder_by? otpHash) => _$this._otpHash = otpHash;

  Gorder_by? _otpHashExpiresAt;
  Gorder_by? get otpHashExpiresAt => _$this._otpHashExpiresAt;
  set otpHashExpiresAt(Gorder_by? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  Gorder_by? _otpMethodLastUsed;
  Gorder_by? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(Gorder_by? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  Gorder_by? _passwordHash;
  Gorder_by? get passwordHash => _$this._passwordHash;
  set passwordHash(Gorder_by? passwordHash) =>
      _$this._passwordHash = passwordHash;

  Gorder_by? _phoneNumber;
  Gorder_by? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(Gorder_by? phoneNumber) => _$this._phoneNumber = phoneNumber;

  Gorder_by? _ticket;
  Gorder_by? get ticket => _$this._ticket;
  set ticket(Gorder_by? ticket) => _$this._ticket = ticket;

  Gorder_by? _ticketExpiresAt;
  Gorder_by? get ticketExpiresAt => _$this._ticketExpiresAt;
  set ticketExpiresAt(Gorder_by? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  Gorder_by? _totpSecret;
  Gorder_by? get totpSecret => _$this._totpSecret;
  set totpSecret(Gorder_by? totpSecret) => _$this._totpSecret = totpSecret;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  Gusers_min_order_byBuilder();

  Gusers_min_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt;
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _displayName = $v.displayName;
      _email = $v.email;
      _id = $v.id;
      _lastSeen = $v.lastSeen;
      _locale = $v.locale;
      _newEmail = $v.newEmail;
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt;
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt;
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_min_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_min_order_by;
  }

  @override
  void update(void Function(Gusers_min_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_min_order_by build() => _build();

  _$Gusers_min_order_by _build() {
    final _$result = _$v ??
        new _$Gusers_min_order_by._(
            activeMfaType: activeMfaType,
            avatarUrl: avatarUrl,
            createdAt: createdAt,
            currentChallenge: currentChallenge,
            defaultRole: defaultRole,
            displayName: displayName,
            email: email,
            id: id,
            lastSeen: lastSeen,
            locale: locale,
            newEmail: newEmail,
            otpHash: otpHash,
            otpHashExpiresAt: otpHashExpiresAt,
            otpMethodLastUsed: otpMethodLastUsed,
            passwordHash: passwordHash,
            phoneNumber: phoneNumber,
            ticket: ticket,
            ticketExpiresAt: ticketExpiresAt,
            totpSecret: totpSecret,
            updatedAt: updatedAt);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_obj_rel_insert_input extends Gusers_obj_rel_insert_input {
  @override
  final Gusers_insert_input data;
  @override
  final Gusers_on_conflict? on_conflict;

  factory _$Gusers_obj_rel_insert_input(
          [void Function(Gusers_obj_rel_insert_inputBuilder)? updates]) =>
      (new Gusers_obj_rel_insert_inputBuilder()..update(updates))._build();

  _$Gusers_obj_rel_insert_input._({required this.data, this.on_conflict})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        data, r'Gusers_obj_rel_insert_input', 'data');
  }

  @override
  Gusers_obj_rel_insert_input rebuild(
          void Function(Gusers_obj_rel_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_obj_rel_insert_inputBuilder toBuilder() =>
      new Gusers_obj_rel_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_obj_rel_insert_input &&
        data == other.data &&
        on_conflict == other.on_conflict;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, data.hashCode), on_conflict.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_obj_rel_insert_input')
          ..add('data', data)
          ..add('on_conflict', on_conflict))
        .toString();
  }
}

class Gusers_obj_rel_insert_inputBuilder
    implements
        Builder<Gusers_obj_rel_insert_input,
            Gusers_obj_rel_insert_inputBuilder> {
  _$Gusers_obj_rel_insert_input? _$v;

  Gusers_insert_inputBuilder? _data;
  Gusers_insert_inputBuilder get data =>
      _$this._data ??= new Gusers_insert_inputBuilder();
  set data(Gusers_insert_inputBuilder? data) => _$this._data = data;

  Gusers_on_conflictBuilder? _on_conflict;
  Gusers_on_conflictBuilder get on_conflict =>
      _$this._on_conflict ??= new Gusers_on_conflictBuilder();
  set on_conflict(Gusers_on_conflictBuilder? on_conflict) =>
      _$this._on_conflict = on_conflict;

  Gusers_obj_rel_insert_inputBuilder();

  Gusers_obj_rel_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _data = $v.data.toBuilder();
      _on_conflict = $v.on_conflict?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_obj_rel_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_obj_rel_insert_input;
  }

  @override
  void update(void Function(Gusers_obj_rel_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_obj_rel_insert_input build() => _build();

  _$Gusers_obj_rel_insert_input _build() {
    _$Gusers_obj_rel_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_obj_rel_insert_input._(
              data: data.build(), on_conflict: _on_conflict?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'data';
        data.build();
        _$failedField = 'on_conflict';
        _on_conflict?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_obj_rel_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_on_conflict extends Gusers_on_conflict {
  @override
  final Gusers_constraint constraint;
  @override
  final BuiltList<Gusers_update_column> update_columns;
  @override
  final Gusers_bool_exp? where;

  factory _$Gusers_on_conflict(
          [void Function(Gusers_on_conflictBuilder)? updates]) =>
      (new Gusers_on_conflictBuilder()..update(updates))._build();

  _$Gusers_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Gusers_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Gusers_on_conflict', 'update_columns');
  }

  @override
  Gusers_on_conflict rebuild(
          void Function(Gusers_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_on_conflictBuilder toBuilder() =>
      new Gusers_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Gusers_on_conflictBuilder
    implements Builder<Gusers_on_conflict, Gusers_on_conflictBuilder> {
  _$Gusers_on_conflict? _$v;

  Gusers_constraint? _constraint;
  Gusers_constraint? get constraint => _$this._constraint;
  set constraint(Gusers_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Gusers_update_column>? _update_columns;
  ListBuilder<Gusers_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<Gusers_update_column>();
  set update_columns(ListBuilder<Gusers_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Gusers_bool_expBuilder? _where;
  Gusers_bool_expBuilder get where =>
      _$this._where ??= new Gusers_bool_expBuilder();
  set where(Gusers_bool_expBuilder? where) => _$this._where = where;

  Gusers_on_conflictBuilder();

  Gusers_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_on_conflict;
  }

  @override
  void update(void Function(Gusers_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_on_conflict build() => _build();

  _$Gusers_on_conflict _build() {
    _$Gusers_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Gusers_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Gusers_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_order_by extends Gusers_order_by {
  @override
  final Gorder_by? activeMfaType;
  @override
  final Gorder_by? avatarUrl;
  @override
  final Gorder_by? createdAt;
  @override
  final Gorder_by? currentChallenge;
  @override
  final Gorder_by? defaultRole;
  @override
  final GauthRoles_order_by? defaultRoleByRole;
  @override
  final Gorder_by? disabled;
  @override
  final Gorder_by? displayName;
  @override
  final Gorder_by? email;
  @override
  final Gorder_by? emailVerified;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? isAnonymous;
  @override
  final Gorder_by? lastSeen;
  @override
  final Gorder_by? locale;
  @override
  final Gorder_by? metadata;
  @override
  final Gorder_by? newEmail;
  @override
  final Gorder_by? otpHash;
  @override
  final Gorder_by? otpHashExpiresAt;
  @override
  final Gorder_by? otpMethodLastUsed;
  @override
  final Gorder_by? passwordHash;
  @override
  final Gorder_by? phoneNumber;
  @override
  final Gorder_by? phoneNumberVerified;
  @override
  final GauthRefreshTokens_aggregate_order_by? refreshTokens_aggregate;
  @override
  final GauthUserRoles_aggregate_order_by? roles_aggregate;
  @override
  final GauthUserSecurityKeys_aggregate_order_by? securityKeys_aggregate;
  @override
  final Gorder_by? ticket;
  @override
  final Gorder_by? ticketExpiresAt;
  @override
  final Gorder_by? totpSecret;
  @override
  final Gorder_by? updatedAt;
  @override
  final GauthUserProviders_aggregate_order_by? userProviders_aggregate;

  factory _$Gusers_order_by([void Function(Gusers_order_byBuilder)? updates]) =>
      (new Gusers_order_byBuilder()..update(updates))._build();

  _$Gusers_order_by._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.defaultRoleByRole,
      this.disabled,
      this.displayName,
      this.email,
      this.emailVerified,
      this.id,
      this.isAnonymous,
      this.lastSeen,
      this.locale,
      this.metadata,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.phoneNumberVerified,
      this.refreshTokens_aggregate,
      this.roles_aggregate,
      this.securityKeys_aggregate,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt,
      this.userProviders_aggregate})
      : super._();

  @override
  Gusers_order_by rebuild(void Function(Gusers_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_order_byBuilder toBuilder() =>
      new Gusers_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_order_by &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        defaultRoleByRole == other.defaultRoleByRole &&
        disabled == other.disabled &&
        displayName == other.displayName &&
        email == other.email &&
        emailVerified == other.emailVerified &&
        id == other.id &&
        isAnonymous == other.isAnonymous &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        metadata == other.metadata &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        phoneNumberVerified == other.phoneNumberVerified &&
        refreshTokens_aggregate == other.refreshTokens_aggregate &&
        roles_aggregate == other.roles_aggregate &&
        securityKeys_aggregate == other.securityKeys_aggregate &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt &&
        userProviders_aggregate == other.userProviders_aggregate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, activeMfaType.hashCode), avatarUrl.hashCode), createdAt.hashCode), currentChallenge.hashCode), defaultRole.hashCode), defaultRoleByRole.hashCode), disabled.hashCode), displayName.hashCode), email.hashCode), emailVerified.hashCode), id.hashCode),
                                                                                isAnonymous.hashCode),
                                                                            lastSeen.hashCode),
                                                                        locale.hashCode),
                                                                    metadata.hashCode),
                                                                newEmail.hashCode),
                                                            otpHash.hashCode),
                                                        otpHashExpiresAt.hashCode),
                                                    otpMethodLastUsed.hashCode),
                                                passwordHash.hashCode),
                                            phoneNumber.hashCode),
                                        phoneNumberVerified.hashCode),
                                    refreshTokens_aggregate.hashCode),
                                roles_aggregate.hashCode),
                            securityKeys_aggregate.hashCode),
                        ticket.hashCode),
                    ticketExpiresAt.hashCode),
                totpSecret.hashCode),
            updatedAt.hashCode),
        userProviders_aggregate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_order_by')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('defaultRoleByRole', defaultRoleByRole)
          ..add('disabled', disabled)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('emailVerified', emailVerified)
          ..add('id', id)
          ..add('isAnonymous', isAnonymous)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('metadata', metadata)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('phoneNumberVerified', phoneNumberVerified)
          ..add('refreshTokens_aggregate', refreshTokens_aggregate)
          ..add('roles_aggregate', roles_aggregate)
          ..add('securityKeys_aggregate', securityKeys_aggregate)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt)
          ..add('userProviders_aggregate', userProviders_aggregate))
        .toString();
  }
}

class Gusers_order_byBuilder
    implements Builder<Gusers_order_by, Gusers_order_byBuilder> {
  _$Gusers_order_by? _$v;

  Gorder_by? _activeMfaType;
  Gorder_by? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(Gorder_by? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  Gorder_by? _avatarUrl;
  Gorder_by? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(Gorder_by? avatarUrl) => _$this._avatarUrl = avatarUrl;

  Gorder_by? _createdAt;
  Gorder_by? get createdAt => _$this._createdAt;
  set createdAt(Gorder_by? createdAt) => _$this._createdAt = createdAt;

  Gorder_by? _currentChallenge;
  Gorder_by? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(Gorder_by? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  Gorder_by? _defaultRole;
  Gorder_by? get defaultRole => _$this._defaultRole;
  set defaultRole(Gorder_by? defaultRole) => _$this._defaultRole = defaultRole;

  GauthRoles_order_byBuilder? _defaultRoleByRole;
  GauthRoles_order_byBuilder get defaultRoleByRole =>
      _$this._defaultRoleByRole ??= new GauthRoles_order_byBuilder();
  set defaultRoleByRole(GauthRoles_order_byBuilder? defaultRoleByRole) =>
      _$this._defaultRoleByRole = defaultRoleByRole;

  Gorder_by? _disabled;
  Gorder_by? get disabled => _$this._disabled;
  set disabled(Gorder_by? disabled) => _$this._disabled = disabled;

  Gorder_by? _displayName;
  Gorder_by? get displayName => _$this._displayName;
  set displayName(Gorder_by? displayName) => _$this._displayName = displayName;

  Gorder_by? _email;
  Gorder_by? get email => _$this._email;
  set email(Gorder_by? email) => _$this._email = email;

  Gorder_by? _emailVerified;
  Gorder_by? get emailVerified => _$this._emailVerified;
  set emailVerified(Gorder_by? emailVerified) =>
      _$this._emailVerified = emailVerified;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _isAnonymous;
  Gorder_by? get isAnonymous => _$this._isAnonymous;
  set isAnonymous(Gorder_by? isAnonymous) => _$this._isAnonymous = isAnonymous;

  Gorder_by? _lastSeen;
  Gorder_by? get lastSeen => _$this._lastSeen;
  set lastSeen(Gorder_by? lastSeen) => _$this._lastSeen = lastSeen;

  Gorder_by? _locale;
  Gorder_by? get locale => _$this._locale;
  set locale(Gorder_by? locale) => _$this._locale = locale;

  Gorder_by? _metadata;
  Gorder_by? get metadata => _$this._metadata;
  set metadata(Gorder_by? metadata) => _$this._metadata = metadata;

  Gorder_by? _newEmail;
  Gorder_by? get newEmail => _$this._newEmail;
  set newEmail(Gorder_by? newEmail) => _$this._newEmail = newEmail;

  Gorder_by? _otpHash;
  Gorder_by? get otpHash => _$this._otpHash;
  set otpHash(Gorder_by? otpHash) => _$this._otpHash = otpHash;

  Gorder_by? _otpHashExpiresAt;
  Gorder_by? get otpHashExpiresAt => _$this._otpHashExpiresAt;
  set otpHashExpiresAt(Gorder_by? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  Gorder_by? _otpMethodLastUsed;
  Gorder_by? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(Gorder_by? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  Gorder_by? _passwordHash;
  Gorder_by? get passwordHash => _$this._passwordHash;
  set passwordHash(Gorder_by? passwordHash) =>
      _$this._passwordHash = passwordHash;

  Gorder_by? _phoneNumber;
  Gorder_by? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(Gorder_by? phoneNumber) => _$this._phoneNumber = phoneNumber;

  Gorder_by? _phoneNumberVerified;
  Gorder_by? get phoneNumberVerified => _$this._phoneNumberVerified;
  set phoneNumberVerified(Gorder_by? phoneNumberVerified) =>
      _$this._phoneNumberVerified = phoneNumberVerified;

  GauthRefreshTokens_aggregate_order_byBuilder? _refreshTokens_aggregate;
  GauthRefreshTokens_aggregate_order_byBuilder get refreshTokens_aggregate =>
      _$this._refreshTokens_aggregate ??=
          new GauthRefreshTokens_aggregate_order_byBuilder();
  set refreshTokens_aggregate(
          GauthRefreshTokens_aggregate_order_byBuilder?
              refreshTokens_aggregate) =>
      _$this._refreshTokens_aggregate = refreshTokens_aggregate;

  GauthUserRoles_aggregate_order_byBuilder? _roles_aggregate;
  GauthUserRoles_aggregate_order_byBuilder get roles_aggregate =>
      _$this._roles_aggregate ??=
          new GauthUserRoles_aggregate_order_byBuilder();
  set roles_aggregate(
          GauthUserRoles_aggregate_order_byBuilder? roles_aggregate) =>
      _$this._roles_aggregate = roles_aggregate;

  GauthUserSecurityKeys_aggregate_order_byBuilder? _securityKeys_aggregate;
  GauthUserSecurityKeys_aggregate_order_byBuilder get securityKeys_aggregate =>
      _$this._securityKeys_aggregate ??=
          new GauthUserSecurityKeys_aggregate_order_byBuilder();
  set securityKeys_aggregate(
          GauthUserSecurityKeys_aggregate_order_byBuilder?
              securityKeys_aggregate) =>
      _$this._securityKeys_aggregate = securityKeys_aggregate;

  Gorder_by? _ticket;
  Gorder_by? get ticket => _$this._ticket;
  set ticket(Gorder_by? ticket) => _$this._ticket = ticket;

  Gorder_by? _ticketExpiresAt;
  Gorder_by? get ticketExpiresAt => _$this._ticketExpiresAt;
  set ticketExpiresAt(Gorder_by? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  Gorder_by? _totpSecret;
  Gorder_by? get totpSecret => _$this._totpSecret;
  set totpSecret(Gorder_by? totpSecret) => _$this._totpSecret = totpSecret;

  Gorder_by? _updatedAt;
  Gorder_by? get updatedAt => _$this._updatedAt;
  set updatedAt(Gorder_by? updatedAt) => _$this._updatedAt = updatedAt;

  GauthUserProviders_aggregate_order_byBuilder? _userProviders_aggregate;
  GauthUserProviders_aggregate_order_byBuilder get userProviders_aggregate =>
      _$this._userProviders_aggregate ??=
          new GauthUserProviders_aggregate_order_byBuilder();
  set userProviders_aggregate(
          GauthUserProviders_aggregate_order_byBuilder?
              userProviders_aggregate) =>
      _$this._userProviders_aggregate = userProviders_aggregate;

  Gusers_order_byBuilder();

  Gusers_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt;
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _defaultRoleByRole = $v.defaultRoleByRole?.toBuilder();
      _disabled = $v.disabled;
      _displayName = $v.displayName;
      _email = $v.email;
      _emailVerified = $v.emailVerified;
      _id = $v.id;
      _isAnonymous = $v.isAnonymous;
      _lastSeen = $v.lastSeen;
      _locale = $v.locale;
      _metadata = $v.metadata;
      _newEmail = $v.newEmail;
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt;
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _phoneNumberVerified = $v.phoneNumberVerified;
      _refreshTokens_aggregate = $v.refreshTokens_aggregate?.toBuilder();
      _roles_aggregate = $v.roles_aggregate?.toBuilder();
      _securityKeys_aggregate = $v.securityKeys_aggregate?.toBuilder();
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt;
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt;
      _userProviders_aggregate = $v.userProviders_aggregate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_order_by;
  }

  @override
  void update(void Function(Gusers_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_order_by build() => _build();

  _$Gusers_order_by _build() {
    _$Gusers_order_by _$result;
    try {
      _$result = _$v ??
          new _$Gusers_order_by._(
              activeMfaType: activeMfaType,
              avatarUrl: avatarUrl,
              createdAt: createdAt,
              currentChallenge: currentChallenge,
              defaultRole: defaultRole,
              defaultRoleByRole: _defaultRoleByRole?.build(),
              disabled: disabled,
              displayName: displayName,
              email: email,
              emailVerified: emailVerified,
              id: id,
              isAnonymous: isAnonymous,
              lastSeen: lastSeen,
              locale: locale,
              metadata: metadata,
              newEmail: newEmail,
              otpHash: otpHash,
              otpHashExpiresAt: otpHashExpiresAt,
              otpMethodLastUsed: otpMethodLastUsed,
              passwordHash: passwordHash,
              phoneNumber: phoneNumber,
              phoneNumberVerified: phoneNumberVerified,
              refreshTokens_aggregate: _refreshTokens_aggregate?.build(),
              roles_aggregate: _roles_aggregate?.build(),
              securityKeys_aggregate: _securityKeys_aggregate?.build(),
              ticket: ticket,
              ticketExpiresAt: ticketExpiresAt,
              totpSecret: totpSecret,
              updatedAt: updatedAt,
              userProviders_aggregate: _userProviders_aggregate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'defaultRoleByRole';
        _defaultRoleByRole?.build();

        _$failedField = 'refreshTokens_aggregate';
        _refreshTokens_aggregate?.build();
        _$failedField = 'roles_aggregate';
        _roles_aggregate?.build();
        _$failedField = 'securityKeys_aggregate';
        _securityKeys_aggregate?.build();

        _$failedField = 'userProviders_aggregate';
        _userProviders_aggregate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_order_by', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_pk_columns_input extends Gusers_pk_columns_input {
  @override
  final Guuid id;

  factory _$Gusers_pk_columns_input(
          [void Function(Gusers_pk_columns_inputBuilder)? updates]) =>
      (new Gusers_pk_columns_inputBuilder()..update(updates))._build();

  _$Gusers_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'Gusers_pk_columns_input', 'id');
  }

  @override
  Gusers_pk_columns_input rebuild(
          void Function(Gusers_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_pk_columns_inputBuilder toBuilder() =>
      new Gusers_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Gusers_pk_columns_inputBuilder
    implements
        Builder<Gusers_pk_columns_input, Gusers_pk_columns_inputBuilder> {
  _$Gusers_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  Gusers_pk_columns_inputBuilder();

  Gusers_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_pk_columns_input;
  }

  @override
  void update(void Function(Gusers_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_pk_columns_input build() => _build();

  _$Gusers_pk_columns_input _build() {
    _$Gusers_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$Gusers_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_prepend_input extends Gusers_prepend_input {
  @override
  final _i2.JsonObject? metadata;

  factory _$Gusers_prepend_input(
          [void Function(Gusers_prepend_inputBuilder)? updates]) =>
      (new Gusers_prepend_inputBuilder()..update(updates))._build();

  _$Gusers_prepend_input._({this.metadata}) : super._();

  @override
  Gusers_prepend_input rebuild(
          void Function(Gusers_prepend_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_prepend_inputBuilder toBuilder() =>
      new Gusers_prepend_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_prepend_input && metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(0, metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_prepend_input')
          ..add('metadata', metadata))
        .toString();
  }
}

class Gusers_prepend_inputBuilder
    implements Builder<Gusers_prepend_input, Gusers_prepend_inputBuilder> {
  _$Gusers_prepend_input? _$v;

  _i2.JsonObject? _metadata;
  _i2.JsonObject? get metadata => _$this._metadata;
  set metadata(_i2.JsonObject? metadata) => _$this._metadata = metadata;

  Gusers_prepend_inputBuilder();

  Gusers_prepend_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _metadata = $v.metadata;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_prepend_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_prepend_input;
  }

  @override
  void update(void Function(Gusers_prepend_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_prepend_input build() => _build();

  _$Gusers_prepend_input _build() {
    final _$result = _$v ?? new _$Gusers_prepend_input._(metadata: metadata);
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_set_input extends Gusers_set_input {
  @override
  final String? activeMfaType;
  @override
  final String? avatarUrl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? currentChallenge;
  @override
  final String? defaultRole;
  @override
  final bool? disabled;
  @override
  final String? displayName;
  @override
  final Gcitext? email;
  @override
  final bool? emailVerified;
  @override
  final Guuid? id;
  @override
  final bool? isAnonymous;
  @override
  final Gtimestamptz? lastSeen;
  @override
  final String? locale;
  @override
  final _i2.JsonObject? metadata;
  @override
  final Gcitext? newEmail;
  @override
  final String? otpHash;
  @override
  final Gtimestamptz? otpHashExpiresAt;
  @override
  final String? otpMethodLastUsed;
  @override
  final String? passwordHash;
  @override
  final String? phoneNumber;
  @override
  final bool? phoneNumberVerified;
  @override
  final String? ticket;
  @override
  final Gtimestamptz? ticketExpiresAt;
  @override
  final String? totpSecret;
  @override
  final Gtimestamptz? updatedAt;

  factory _$Gusers_set_input(
          [void Function(Gusers_set_inputBuilder)? updates]) =>
      (new Gusers_set_inputBuilder()..update(updates))._build();

  _$Gusers_set_input._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.disabled,
      this.displayName,
      this.email,
      this.emailVerified,
      this.id,
      this.isAnonymous,
      this.lastSeen,
      this.locale,
      this.metadata,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.phoneNumberVerified,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt})
      : super._();

  @override
  Gusers_set_input rebuild(void Function(Gusers_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_set_inputBuilder toBuilder() =>
      new Gusers_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_set_input &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        disabled == other.disabled &&
        displayName == other.displayName &&
        email == other.email &&
        emailVerified == other.emailVerified &&
        id == other.id &&
        isAnonymous == other.isAnonymous &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        metadata == other.metadata &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        phoneNumberVerified == other.phoneNumberVerified &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc(0, activeMfaType.hashCode), avatarUrl.hashCode), createdAt.hashCode), currentChallenge.hashCode), defaultRole.hashCode), disabled.hashCode),
                                                                                displayName.hashCode),
                                                                            email.hashCode),
                                                                        emailVerified.hashCode),
                                                                    id.hashCode),
                                                                isAnonymous.hashCode),
                                                            lastSeen.hashCode),
                                                        locale.hashCode),
                                                    metadata.hashCode),
                                                newEmail.hashCode),
                                            otpHash.hashCode),
                                        otpHashExpiresAt.hashCode),
                                    otpMethodLastUsed.hashCode),
                                passwordHash.hashCode),
                            phoneNumber.hashCode),
                        phoneNumberVerified.hashCode),
                    ticket.hashCode),
                ticketExpiresAt.hashCode),
            totpSecret.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_set_input')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('disabled', disabled)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('emailVerified', emailVerified)
          ..add('id', id)
          ..add('isAnonymous', isAnonymous)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('metadata', metadata)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('phoneNumberVerified', phoneNumberVerified)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gusers_set_inputBuilder
    implements Builder<Gusers_set_input, Gusers_set_inputBuilder> {
  _$Gusers_set_input? _$v;

  String? _activeMfaType;
  String? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(String? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  String? _avatarUrl;
  String? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(String? avatarUrl) => _$this._avatarUrl = avatarUrl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _currentChallenge;
  String? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(String? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  String? _defaultRole;
  String? get defaultRole => _$this._defaultRole;
  set defaultRole(String? defaultRole) => _$this._defaultRole = defaultRole;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  GcitextBuilder? _email;
  GcitextBuilder get email => _$this._email ??= new GcitextBuilder();
  set email(GcitextBuilder? email) => _$this._email = email;

  bool? _emailVerified;
  bool? get emailVerified => _$this._emailVerified;
  set emailVerified(bool? emailVerified) =>
      _$this._emailVerified = emailVerified;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isAnonymous;
  bool? get isAnonymous => _$this._isAnonymous;
  set isAnonymous(bool? isAnonymous) => _$this._isAnonymous = isAnonymous;

  GtimestamptzBuilder? _lastSeen;
  GtimestamptzBuilder get lastSeen =>
      _$this._lastSeen ??= new GtimestamptzBuilder();
  set lastSeen(GtimestamptzBuilder? lastSeen) => _$this._lastSeen = lastSeen;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  _i2.JsonObject? _metadata;
  _i2.JsonObject? get metadata => _$this._metadata;
  set metadata(_i2.JsonObject? metadata) => _$this._metadata = metadata;

  GcitextBuilder? _newEmail;
  GcitextBuilder get newEmail => _$this._newEmail ??= new GcitextBuilder();
  set newEmail(GcitextBuilder? newEmail) => _$this._newEmail = newEmail;

  String? _otpHash;
  String? get otpHash => _$this._otpHash;
  set otpHash(String? otpHash) => _$this._otpHash = otpHash;

  GtimestamptzBuilder? _otpHashExpiresAt;
  GtimestamptzBuilder get otpHashExpiresAt =>
      _$this._otpHashExpiresAt ??= new GtimestamptzBuilder();
  set otpHashExpiresAt(GtimestamptzBuilder? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  String? _otpMethodLastUsed;
  String? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(String? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  String? _passwordHash;
  String? get passwordHash => _$this._passwordHash;
  set passwordHash(String? passwordHash) => _$this._passwordHash = passwordHash;

  String? _phoneNumber;
  String? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(String? phoneNumber) => _$this._phoneNumber = phoneNumber;

  bool? _phoneNumberVerified;
  bool? get phoneNumberVerified => _$this._phoneNumberVerified;
  set phoneNumberVerified(bool? phoneNumberVerified) =>
      _$this._phoneNumberVerified = phoneNumberVerified;

  String? _ticket;
  String? get ticket => _$this._ticket;
  set ticket(String? ticket) => _$this._ticket = ticket;

  GtimestamptzBuilder? _ticketExpiresAt;
  GtimestamptzBuilder get ticketExpiresAt =>
      _$this._ticketExpiresAt ??= new GtimestamptzBuilder();
  set ticketExpiresAt(GtimestamptzBuilder? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  String? _totpSecret;
  String? get totpSecret => _$this._totpSecret;
  set totpSecret(String? totpSecret) => _$this._totpSecret = totpSecret;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gusers_set_inputBuilder();

  Gusers_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt?.toBuilder();
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _disabled = $v.disabled;
      _displayName = $v.displayName;
      _email = $v.email?.toBuilder();
      _emailVerified = $v.emailVerified;
      _id = $v.id?.toBuilder();
      _isAnonymous = $v.isAnonymous;
      _lastSeen = $v.lastSeen?.toBuilder();
      _locale = $v.locale;
      _metadata = $v.metadata;
      _newEmail = $v.newEmail?.toBuilder();
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt?.toBuilder();
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _phoneNumberVerified = $v.phoneNumberVerified;
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt?.toBuilder();
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_set_input;
  }

  @override
  void update(void Function(Gusers_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_set_input build() => _build();

  _$Gusers_set_input _build() {
    _$Gusers_set_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_set_input._(
              activeMfaType: activeMfaType,
              avatarUrl: avatarUrl,
              createdAt: _createdAt?.build(),
              currentChallenge: currentChallenge,
              defaultRole: defaultRole,
              disabled: disabled,
              displayName: displayName,
              email: _email?.build(),
              emailVerified: emailVerified,
              id: _id?.build(),
              isAnonymous: isAnonymous,
              lastSeen: _lastSeen?.build(),
              locale: locale,
              metadata: metadata,
              newEmail: _newEmail?.build(),
              otpHash: otpHash,
              otpHashExpiresAt: _otpHashExpiresAt?.build(),
              otpMethodLastUsed: otpMethodLastUsed,
              passwordHash: passwordHash,
              phoneNumber: phoneNumber,
              phoneNumberVerified: phoneNumberVerified,
              ticket: ticket,
              ticketExpiresAt: _ticketExpiresAt?.build(),
              totpSecret: totpSecret,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'email';
        _email?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'lastSeen';
        _lastSeen?.build();

        _$failedField = 'newEmail';
        _newEmail?.build();

        _$failedField = 'otpHashExpiresAt';
        _otpHashExpiresAt?.build();

        _$failedField = 'ticketExpiresAt';
        _ticketExpiresAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_stream_cursor_input extends Gusers_stream_cursor_input {
  @override
  final Gusers_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Gusers_stream_cursor_input(
          [void Function(Gusers_stream_cursor_inputBuilder)? updates]) =>
      (new Gusers_stream_cursor_inputBuilder()..update(updates))._build();

  _$Gusers_stream_cursor_input._({required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Gusers_stream_cursor_input', 'initial_value');
  }

  @override
  Gusers_stream_cursor_input rebuild(
          void Function(Gusers_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_stream_cursor_inputBuilder toBuilder() =>
      new Gusers_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Gusers_stream_cursor_inputBuilder
    implements
        Builder<Gusers_stream_cursor_input, Gusers_stream_cursor_inputBuilder> {
  _$Gusers_stream_cursor_input? _$v;

  Gusers_stream_cursor_value_inputBuilder? _initial_value;
  Gusers_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??= new Gusers_stream_cursor_value_inputBuilder();
  set initial_value(Gusers_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Gusers_stream_cursor_inputBuilder();

  Gusers_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_stream_cursor_input;
  }

  @override
  void update(void Function(Gusers_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_stream_cursor_input build() => _build();

  _$Gusers_stream_cursor_input _build() {
    _$Gusers_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_stream_cursor_value_input
    extends Gusers_stream_cursor_value_input {
  @override
  final String? activeMfaType;
  @override
  final String? avatarUrl;
  @override
  final Gtimestamptz? createdAt;
  @override
  final String? currentChallenge;
  @override
  final String? defaultRole;
  @override
  final bool? disabled;
  @override
  final String? displayName;
  @override
  final Gcitext? email;
  @override
  final bool? emailVerified;
  @override
  final Guuid? id;
  @override
  final bool? isAnonymous;
  @override
  final Gtimestamptz? lastSeen;
  @override
  final String? locale;
  @override
  final _i2.JsonObject? metadata;
  @override
  final Gcitext? newEmail;
  @override
  final String? otpHash;
  @override
  final Gtimestamptz? otpHashExpiresAt;
  @override
  final String? otpMethodLastUsed;
  @override
  final String? passwordHash;
  @override
  final String? phoneNumber;
  @override
  final bool? phoneNumberVerified;
  @override
  final String? ticket;
  @override
  final Gtimestamptz? ticketExpiresAt;
  @override
  final String? totpSecret;
  @override
  final Gtimestamptz? updatedAt;

  factory _$Gusers_stream_cursor_value_input(
          [void Function(Gusers_stream_cursor_value_inputBuilder)? updates]) =>
      (new Gusers_stream_cursor_value_inputBuilder()..update(updates))._build();

  _$Gusers_stream_cursor_value_input._(
      {this.activeMfaType,
      this.avatarUrl,
      this.createdAt,
      this.currentChallenge,
      this.defaultRole,
      this.disabled,
      this.displayName,
      this.email,
      this.emailVerified,
      this.id,
      this.isAnonymous,
      this.lastSeen,
      this.locale,
      this.metadata,
      this.newEmail,
      this.otpHash,
      this.otpHashExpiresAt,
      this.otpMethodLastUsed,
      this.passwordHash,
      this.phoneNumber,
      this.phoneNumberVerified,
      this.ticket,
      this.ticketExpiresAt,
      this.totpSecret,
      this.updatedAt})
      : super._();

  @override
  Gusers_stream_cursor_value_input rebuild(
          void Function(Gusers_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_stream_cursor_value_inputBuilder toBuilder() =>
      new Gusers_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_stream_cursor_value_input &&
        activeMfaType == other.activeMfaType &&
        avatarUrl == other.avatarUrl &&
        createdAt == other.createdAt &&
        currentChallenge == other.currentChallenge &&
        defaultRole == other.defaultRole &&
        disabled == other.disabled &&
        displayName == other.displayName &&
        email == other.email &&
        emailVerified == other.emailVerified &&
        id == other.id &&
        isAnonymous == other.isAnonymous &&
        lastSeen == other.lastSeen &&
        locale == other.locale &&
        metadata == other.metadata &&
        newEmail == other.newEmail &&
        otpHash == other.otpHash &&
        otpHashExpiresAt == other.otpHashExpiresAt &&
        otpMethodLastUsed == other.otpMethodLastUsed &&
        passwordHash == other.passwordHash &&
        phoneNumber == other.phoneNumber &&
        phoneNumberVerified == other.phoneNumberVerified &&
        ticket == other.ticket &&
        ticketExpiresAt == other.ticketExpiresAt &&
        totpSecret == other.totpSecret &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc(0, activeMfaType.hashCode), avatarUrl.hashCode), createdAt.hashCode), currentChallenge.hashCode), defaultRole.hashCode), disabled.hashCode),
                                                                                displayName.hashCode),
                                                                            email.hashCode),
                                                                        emailVerified.hashCode),
                                                                    id.hashCode),
                                                                isAnonymous.hashCode),
                                                            lastSeen.hashCode),
                                                        locale.hashCode),
                                                    metadata.hashCode),
                                                newEmail.hashCode),
                                            otpHash.hashCode),
                                        otpHashExpiresAt.hashCode),
                                    otpMethodLastUsed.hashCode),
                                passwordHash.hashCode),
                            phoneNumber.hashCode),
                        phoneNumberVerified.hashCode),
                    ticket.hashCode),
                ticketExpiresAt.hashCode),
            totpSecret.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_stream_cursor_value_input')
          ..add('activeMfaType', activeMfaType)
          ..add('avatarUrl', avatarUrl)
          ..add('createdAt', createdAt)
          ..add('currentChallenge', currentChallenge)
          ..add('defaultRole', defaultRole)
          ..add('disabled', disabled)
          ..add('displayName', displayName)
          ..add('email', email)
          ..add('emailVerified', emailVerified)
          ..add('id', id)
          ..add('isAnonymous', isAnonymous)
          ..add('lastSeen', lastSeen)
          ..add('locale', locale)
          ..add('metadata', metadata)
          ..add('newEmail', newEmail)
          ..add('otpHash', otpHash)
          ..add('otpHashExpiresAt', otpHashExpiresAt)
          ..add('otpMethodLastUsed', otpMethodLastUsed)
          ..add('passwordHash', passwordHash)
          ..add('phoneNumber', phoneNumber)
          ..add('phoneNumberVerified', phoneNumberVerified)
          ..add('ticket', ticket)
          ..add('ticketExpiresAt', ticketExpiresAt)
          ..add('totpSecret', totpSecret)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class Gusers_stream_cursor_value_inputBuilder
    implements
        Builder<Gusers_stream_cursor_value_input,
            Gusers_stream_cursor_value_inputBuilder> {
  _$Gusers_stream_cursor_value_input? _$v;

  String? _activeMfaType;
  String? get activeMfaType => _$this._activeMfaType;
  set activeMfaType(String? activeMfaType) =>
      _$this._activeMfaType = activeMfaType;

  String? _avatarUrl;
  String? get avatarUrl => _$this._avatarUrl;
  set avatarUrl(String? avatarUrl) => _$this._avatarUrl = avatarUrl;

  GtimestamptzBuilder? _createdAt;
  GtimestamptzBuilder get createdAt =>
      _$this._createdAt ??= new GtimestamptzBuilder();
  set createdAt(GtimestamptzBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  String? _currentChallenge;
  String? get currentChallenge => _$this._currentChallenge;
  set currentChallenge(String? currentChallenge) =>
      _$this._currentChallenge = currentChallenge;

  String? _defaultRole;
  String? get defaultRole => _$this._defaultRole;
  set defaultRole(String? defaultRole) => _$this._defaultRole = defaultRole;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _displayName;
  String? get displayName => _$this._displayName;
  set displayName(String? displayName) => _$this._displayName = displayName;

  GcitextBuilder? _email;
  GcitextBuilder get email => _$this._email ??= new GcitextBuilder();
  set email(GcitextBuilder? email) => _$this._email = email;

  bool? _emailVerified;
  bool? get emailVerified => _$this._emailVerified;
  set emailVerified(bool? emailVerified) =>
      _$this._emailVerified = emailVerified;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _isAnonymous;
  bool? get isAnonymous => _$this._isAnonymous;
  set isAnonymous(bool? isAnonymous) => _$this._isAnonymous = isAnonymous;

  GtimestamptzBuilder? _lastSeen;
  GtimestamptzBuilder get lastSeen =>
      _$this._lastSeen ??= new GtimestamptzBuilder();
  set lastSeen(GtimestamptzBuilder? lastSeen) => _$this._lastSeen = lastSeen;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  _i2.JsonObject? _metadata;
  _i2.JsonObject? get metadata => _$this._metadata;
  set metadata(_i2.JsonObject? metadata) => _$this._metadata = metadata;

  GcitextBuilder? _newEmail;
  GcitextBuilder get newEmail => _$this._newEmail ??= new GcitextBuilder();
  set newEmail(GcitextBuilder? newEmail) => _$this._newEmail = newEmail;

  String? _otpHash;
  String? get otpHash => _$this._otpHash;
  set otpHash(String? otpHash) => _$this._otpHash = otpHash;

  GtimestamptzBuilder? _otpHashExpiresAt;
  GtimestamptzBuilder get otpHashExpiresAt =>
      _$this._otpHashExpiresAt ??= new GtimestamptzBuilder();
  set otpHashExpiresAt(GtimestamptzBuilder? otpHashExpiresAt) =>
      _$this._otpHashExpiresAt = otpHashExpiresAt;

  String? _otpMethodLastUsed;
  String? get otpMethodLastUsed => _$this._otpMethodLastUsed;
  set otpMethodLastUsed(String? otpMethodLastUsed) =>
      _$this._otpMethodLastUsed = otpMethodLastUsed;

  String? _passwordHash;
  String? get passwordHash => _$this._passwordHash;
  set passwordHash(String? passwordHash) => _$this._passwordHash = passwordHash;

  String? _phoneNumber;
  String? get phoneNumber => _$this._phoneNumber;
  set phoneNumber(String? phoneNumber) => _$this._phoneNumber = phoneNumber;

  bool? _phoneNumberVerified;
  bool? get phoneNumberVerified => _$this._phoneNumberVerified;
  set phoneNumberVerified(bool? phoneNumberVerified) =>
      _$this._phoneNumberVerified = phoneNumberVerified;

  String? _ticket;
  String? get ticket => _$this._ticket;
  set ticket(String? ticket) => _$this._ticket = ticket;

  GtimestamptzBuilder? _ticketExpiresAt;
  GtimestamptzBuilder get ticketExpiresAt =>
      _$this._ticketExpiresAt ??= new GtimestamptzBuilder();
  set ticketExpiresAt(GtimestamptzBuilder? ticketExpiresAt) =>
      _$this._ticketExpiresAt = ticketExpiresAt;

  String? _totpSecret;
  String? get totpSecret => _$this._totpSecret;
  set totpSecret(String? totpSecret) => _$this._totpSecret = totpSecret;

  GtimestamptzBuilder? _updatedAt;
  GtimestamptzBuilder get updatedAt =>
      _$this._updatedAt ??= new GtimestamptzBuilder();
  set updatedAt(GtimestamptzBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  Gusers_stream_cursor_value_inputBuilder();

  Gusers_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _activeMfaType = $v.activeMfaType;
      _avatarUrl = $v.avatarUrl;
      _createdAt = $v.createdAt?.toBuilder();
      _currentChallenge = $v.currentChallenge;
      _defaultRole = $v.defaultRole;
      _disabled = $v.disabled;
      _displayName = $v.displayName;
      _email = $v.email?.toBuilder();
      _emailVerified = $v.emailVerified;
      _id = $v.id?.toBuilder();
      _isAnonymous = $v.isAnonymous;
      _lastSeen = $v.lastSeen?.toBuilder();
      _locale = $v.locale;
      _metadata = $v.metadata;
      _newEmail = $v.newEmail?.toBuilder();
      _otpHash = $v.otpHash;
      _otpHashExpiresAt = $v.otpHashExpiresAt?.toBuilder();
      _otpMethodLastUsed = $v.otpMethodLastUsed;
      _passwordHash = $v.passwordHash;
      _phoneNumber = $v.phoneNumber;
      _phoneNumberVerified = $v.phoneNumberVerified;
      _ticket = $v.ticket;
      _ticketExpiresAt = $v.ticketExpiresAt?.toBuilder();
      _totpSecret = $v.totpSecret;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_stream_cursor_value_input;
  }

  @override
  void update(void Function(Gusers_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_stream_cursor_value_input build() => _build();

  _$Gusers_stream_cursor_value_input _build() {
    _$Gusers_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Gusers_stream_cursor_value_input._(
              activeMfaType: activeMfaType,
              avatarUrl: avatarUrl,
              createdAt: _createdAt?.build(),
              currentChallenge: currentChallenge,
              defaultRole: defaultRole,
              disabled: disabled,
              displayName: displayName,
              email: _email?.build(),
              emailVerified: emailVerified,
              id: _id?.build(),
              isAnonymous: isAnonymous,
              lastSeen: _lastSeen?.build(),
              locale: locale,
              metadata: metadata,
              newEmail: _newEmail?.build(),
              otpHash: otpHash,
              otpHashExpiresAt: _otpHashExpiresAt?.build(),
              otpMethodLastUsed: otpMethodLastUsed,
              passwordHash: passwordHash,
              phoneNumber: phoneNumber,
              phoneNumberVerified: phoneNumberVerified,
              ticket: ticket,
              ticketExpiresAt: _ticketExpiresAt?.build(),
              totpSecret: totpSecret,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();

        _$failedField = 'email';
        _email?.build();

        _$failedField = 'id';
        _id?.build();

        _$failedField = 'lastSeen';
        _lastSeen?.build();

        _$failedField = 'newEmail';
        _newEmail?.build();

        _$failedField = 'otpHashExpiresAt';
        _otpHashExpiresAt?.build();

        _$failedField = 'ticketExpiresAt';
        _ticketExpiresAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_stream_cursor_value_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gusers_updates extends Gusers_updates {
  @override
  final Gusers_append_input? G_append;
  @override
  final Gusers_delete_at_path_input? G_delete_at_path;
  @override
  final Gusers_delete_elem_input? G_delete_elem;
  @override
  final Gusers_delete_key_input? G_delete_key;
  @override
  final Gusers_prepend_input? G_prepend;
  @override
  final Gusers_set_input? G_set;
  @override
  final Gusers_bool_exp where;

  factory _$Gusers_updates([void Function(Gusers_updatesBuilder)? updates]) =>
      (new Gusers_updatesBuilder()..update(updates))._build();

  _$Gusers_updates._(
      {this.G_append,
      this.G_delete_at_path,
      this.G_delete_elem,
      this.G_delete_key,
      this.G_prepend,
      this.G_set,
      required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(where, r'Gusers_updates', 'where');
  }

  @override
  Gusers_updates rebuild(void Function(Gusers_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gusers_updatesBuilder toBuilder() =>
      new Gusers_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gusers_updates &&
        G_append == other.G_append &&
        G_delete_at_path == other.G_delete_at_path &&
        G_delete_elem == other.G_delete_elem &&
        G_delete_key == other.G_delete_key &&
        G_prepend == other.G_prepend &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, G_append.hashCode),
                            G_delete_at_path.hashCode),
                        G_delete_elem.hashCode),
                    G_delete_key.hashCode),
                G_prepend.hashCode),
            G_set.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gusers_updates')
          ..add('G_append', G_append)
          ..add('G_delete_at_path', G_delete_at_path)
          ..add('G_delete_elem', G_delete_elem)
          ..add('G_delete_key', G_delete_key)
          ..add('G_prepend', G_prepend)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Gusers_updatesBuilder
    implements Builder<Gusers_updates, Gusers_updatesBuilder> {
  _$Gusers_updates? _$v;

  Gusers_append_inputBuilder? _G_append;
  Gusers_append_inputBuilder get G_append =>
      _$this._G_append ??= new Gusers_append_inputBuilder();
  set G_append(Gusers_append_inputBuilder? G_append) =>
      _$this._G_append = G_append;

  Gusers_delete_at_path_inputBuilder? _G_delete_at_path;
  Gusers_delete_at_path_inputBuilder get G_delete_at_path =>
      _$this._G_delete_at_path ??= new Gusers_delete_at_path_inputBuilder();
  set G_delete_at_path(Gusers_delete_at_path_inputBuilder? G_delete_at_path) =>
      _$this._G_delete_at_path = G_delete_at_path;

  Gusers_delete_elem_inputBuilder? _G_delete_elem;
  Gusers_delete_elem_inputBuilder get G_delete_elem =>
      _$this._G_delete_elem ??= new Gusers_delete_elem_inputBuilder();
  set G_delete_elem(Gusers_delete_elem_inputBuilder? G_delete_elem) =>
      _$this._G_delete_elem = G_delete_elem;

  Gusers_delete_key_inputBuilder? _G_delete_key;
  Gusers_delete_key_inputBuilder get G_delete_key =>
      _$this._G_delete_key ??= new Gusers_delete_key_inputBuilder();
  set G_delete_key(Gusers_delete_key_inputBuilder? G_delete_key) =>
      _$this._G_delete_key = G_delete_key;

  Gusers_prepend_inputBuilder? _G_prepend;
  Gusers_prepend_inputBuilder get G_prepend =>
      _$this._G_prepend ??= new Gusers_prepend_inputBuilder();
  set G_prepend(Gusers_prepend_inputBuilder? G_prepend) =>
      _$this._G_prepend = G_prepend;

  Gusers_set_inputBuilder? _G_set;
  Gusers_set_inputBuilder get G_set =>
      _$this._G_set ??= new Gusers_set_inputBuilder();
  set G_set(Gusers_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Gusers_bool_expBuilder? _where;
  Gusers_bool_expBuilder get where =>
      _$this._where ??= new Gusers_bool_expBuilder();
  set where(Gusers_bool_expBuilder? where) => _$this._where = where;

  Gusers_updatesBuilder();

  Gusers_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_append = $v.G_append?.toBuilder();
      _G_delete_at_path = $v.G_delete_at_path?.toBuilder();
      _G_delete_elem = $v.G_delete_elem?.toBuilder();
      _G_delete_key = $v.G_delete_key?.toBuilder();
      _G_prepend = $v.G_prepend?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gusers_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gusers_updates;
  }

  @override
  void update(void Function(Gusers_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gusers_updates build() => _build();

  _$Gusers_updates _build() {
    _$Gusers_updates _$result;
    try {
      _$result = _$v ??
          new _$Gusers_updates._(
              G_append: _G_append?.build(),
              G_delete_at_path: _G_delete_at_path?.build(),
              G_delete_elem: _G_delete_elem?.build(),
              G_delete_key: _G_delete_key?.build(),
              G_prepend: _G_prepend?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_append';
        _G_append?.build();
        _$failedField = 'G_delete_at_path';
        _G_delete_at_path?.build();
        _$failedField = 'G_delete_elem';
        _G_delete_elem?.build();
        _$failedField = 'G_delete_key';
        _G_delete_key?.build();
        _$failedField = 'G_prepend';
        _G_prepend?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gusers_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Guuid extends Guuid {
  @override
  final String value;

  factory _$Guuid([void Function(GuuidBuilder)? updates]) =>
      (new GuuidBuilder()..update(updates))._build();

  _$Guuid._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'Guuid', 'value');
  }

  @override
  Guuid rebuild(void Function(GuuidBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GuuidBuilder toBuilder() => new GuuidBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guuid && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guuid')..add('value', value))
        .toString();
  }
}

class GuuidBuilder implements Builder<Guuid, GuuidBuilder> {
  _$Guuid? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GuuidBuilder();

  GuuidBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guuid other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guuid;
  }

  @override
  void update(void Function(GuuidBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guuid build() => _build();

  _$Guuid _build() {
    final _$result = _$v ??
        new _$Guuid._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'Guuid', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$Guuid_comparison_exp extends Guuid_comparison_exp {
  @override
  final Guuid? G_eq;
  @override
  final Guuid? G_gt;
  @override
  final Guuid? G_gte;
  @override
  final BuiltList<Guuid>? G_in;
  @override
  final bool? G_is_null;
  @override
  final Guuid? G_lt;
  @override
  final Guuid? G_lte;
  @override
  final Guuid? G_neq;
  @override
  final BuiltList<Guuid>? G_nin;

  factory _$Guuid_comparison_exp(
          [void Function(Guuid_comparison_expBuilder)? updates]) =>
      (new Guuid_comparison_expBuilder()..update(updates))._build();

  _$Guuid_comparison_exp._(
      {this.G_eq,
      this.G_gt,
      this.G_gte,
      this.G_in,
      this.G_is_null,
      this.G_lt,
      this.G_lte,
      this.G_neq,
      this.G_nin})
      : super._();

  @override
  Guuid_comparison_exp rebuild(
          void Function(Guuid_comparison_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Guuid_comparison_expBuilder toBuilder() =>
      new Guuid_comparison_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Guuid_comparison_exp &&
        G_eq == other.G_eq &&
        G_gt == other.G_gt &&
        G_gte == other.G_gte &&
        G_in == other.G_in &&
        G_is_null == other.G_is_null &&
        G_lt == other.G_lt &&
        G_lte == other.G_lte &&
        G_neq == other.G_neq &&
        G_nin == other.G_nin;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, G_eq.hashCode), G_gt.hashCode),
                                G_gte.hashCode),
                            G_in.hashCode),
                        G_is_null.hashCode),
                    G_lt.hashCode),
                G_lte.hashCode),
            G_neq.hashCode),
        G_nin.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Guuid_comparison_exp')
          ..add('G_eq', G_eq)
          ..add('G_gt', G_gt)
          ..add('G_gte', G_gte)
          ..add('G_in', G_in)
          ..add('G_is_null', G_is_null)
          ..add('G_lt', G_lt)
          ..add('G_lte', G_lte)
          ..add('G_neq', G_neq)
          ..add('G_nin', G_nin))
        .toString();
  }
}

class Guuid_comparison_expBuilder
    implements Builder<Guuid_comparison_exp, Guuid_comparison_expBuilder> {
  _$Guuid_comparison_exp? _$v;

  GuuidBuilder? _G_eq;
  GuuidBuilder get G_eq => _$this._G_eq ??= new GuuidBuilder();
  set G_eq(GuuidBuilder? G_eq) => _$this._G_eq = G_eq;

  GuuidBuilder? _G_gt;
  GuuidBuilder get G_gt => _$this._G_gt ??= new GuuidBuilder();
  set G_gt(GuuidBuilder? G_gt) => _$this._G_gt = G_gt;

  GuuidBuilder? _G_gte;
  GuuidBuilder get G_gte => _$this._G_gte ??= new GuuidBuilder();
  set G_gte(GuuidBuilder? G_gte) => _$this._G_gte = G_gte;

  ListBuilder<Guuid>? _G_in;
  ListBuilder<Guuid> get G_in => _$this._G_in ??= new ListBuilder<Guuid>();
  set G_in(ListBuilder<Guuid>? G_in) => _$this._G_in = G_in;

  bool? _G_is_null;
  bool? get G_is_null => _$this._G_is_null;
  set G_is_null(bool? G_is_null) => _$this._G_is_null = G_is_null;

  GuuidBuilder? _G_lt;
  GuuidBuilder get G_lt => _$this._G_lt ??= new GuuidBuilder();
  set G_lt(GuuidBuilder? G_lt) => _$this._G_lt = G_lt;

  GuuidBuilder? _G_lte;
  GuuidBuilder get G_lte => _$this._G_lte ??= new GuuidBuilder();
  set G_lte(GuuidBuilder? G_lte) => _$this._G_lte = G_lte;

  GuuidBuilder? _G_neq;
  GuuidBuilder get G_neq => _$this._G_neq ??= new GuuidBuilder();
  set G_neq(GuuidBuilder? G_neq) => _$this._G_neq = G_neq;

  ListBuilder<Guuid>? _G_nin;
  ListBuilder<Guuid> get G_nin => _$this._G_nin ??= new ListBuilder<Guuid>();
  set G_nin(ListBuilder<Guuid>? G_nin) => _$this._G_nin = G_nin;

  Guuid_comparison_expBuilder();

  Guuid_comparison_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_eq = $v.G_eq?.toBuilder();
      _G_gt = $v.G_gt?.toBuilder();
      _G_gte = $v.G_gte?.toBuilder();
      _G_in = $v.G_in?.toBuilder();
      _G_is_null = $v.G_is_null;
      _G_lt = $v.G_lt?.toBuilder();
      _G_lte = $v.G_lte?.toBuilder();
      _G_neq = $v.G_neq?.toBuilder();
      _G_nin = $v.G_nin?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Guuid_comparison_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Guuid_comparison_exp;
  }

  @override
  void update(void Function(Guuid_comparison_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Guuid_comparison_exp build() => _build();

  _$Guuid_comparison_exp _build() {
    _$Guuid_comparison_exp _$result;
    try {
      _$result = _$v ??
          new _$Guuid_comparison_exp._(
              G_eq: _G_eq?.build(),
              G_gt: _G_gt?.build(),
              G_gte: _G_gte?.build(),
              G_in: _G_in?.build(),
              G_is_null: G_is_null,
              G_lt: _G_lt?.build(),
              G_lte: _G_lte?.build(),
              G_neq: _G_neq?.build(),
              G_nin: _G_nin?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_eq';
        _G_eq?.build();
        _$failedField = 'G_gt';
        _G_gt?.build();
        _$failedField = 'G_gte';
        _G_gte?.build();
        _$failedField = 'G_in';
        _G_in?.build();

        _$failedField = 'G_lt';
        _G_lt?.build();
        _$failedField = 'G_lte';
        _G_lte?.build();
        _$failedField = 'G_neq';
        _G_neq?.build();
        _$failedField = 'G_nin';
        _G_nin?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Guuid_comparison_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_bool_exp extends Gwords_bool_exp {
  @override
  final BuiltList<Gwords_bool_exp>? G_and;
  @override
  final Gwords_bool_exp? G_not;
  @override
  final BuiltList<Gwords_bool_exp>? G_or;
  @override
  final Gtimestamptz_comparison_exp? created_at;
  @override
  final Guuid_comparison_exp? created_by;
  @override
  final Gtimestamptz_comparison_exp? deleted_at;
  @override
  final Guuid_comparison_exp? id;
  @override
  final GBoolean_comparison_exp? is_done;
  @override
  final GInt_comparison_exp? times;
  @override
  final Gtimestamptz_comparison_exp? updated_at;
  @override
  final Guuid_comparison_exp? updated_by;
  @override
  final GString_comparison_exp? word;

  factory _$Gwords_bool_exp([void Function(Gwords_bool_expBuilder)? updates]) =>
      (new Gwords_bool_expBuilder()..update(updates))._build();

  _$Gwords_bool_exp._(
      {this.G_and,
      this.G_not,
      this.G_or,
      this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.is_done,
      this.times,
      this.updated_at,
      this.updated_by,
      this.word})
      : super._();

  @override
  Gwords_bool_exp rebuild(void Function(Gwords_bool_expBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_bool_expBuilder toBuilder() =>
      new Gwords_bool_expBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_bool_exp &&
        G_and == other.G_and &&
        G_not == other.G_not &&
        G_or == other.G_or &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        is_done == other.is_done &&
        times == other.times &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        word == other.word;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, G_and.hashCode),
                                                G_not.hashCode),
                                            G_or.hashCode),
                                        created_at.hashCode),
                                    created_by.hashCode),
                                deleted_at.hashCode),
                            id.hashCode),
                        is_done.hashCode),
                    times.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        word.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_bool_exp')
          ..add('G_and', G_and)
          ..add('G_not', G_not)
          ..add('G_or', G_or)
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('is_done', is_done)
          ..add('times', times)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('word', word))
        .toString();
  }
}

class Gwords_bool_expBuilder
    implements Builder<Gwords_bool_exp, Gwords_bool_expBuilder> {
  _$Gwords_bool_exp? _$v;

  ListBuilder<Gwords_bool_exp>? _G_and;
  ListBuilder<Gwords_bool_exp> get G_and =>
      _$this._G_and ??= new ListBuilder<Gwords_bool_exp>();
  set G_and(ListBuilder<Gwords_bool_exp>? G_and) => _$this._G_and = G_and;

  Gwords_bool_expBuilder? _G_not;
  Gwords_bool_expBuilder get G_not =>
      _$this._G_not ??= new Gwords_bool_expBuilder();
  set G_not(Gwords_bool_expBuilder? G_not) => _$this._G_not = G_not;

  ListBuilder<Gwords_bool_exp>? _G_or;
  ListBuilder<Gwords_bool_exp> get G_or =>
      _$this._G_or ??= new ListBuilder<Gwords_bool_exp>();
  set G_or(ListBuilder<Gwords_bool_exp>? G_or) => _$this._G_or = G_or;

  Gtimestamptz_comparison_expBuilder? _created_at;
  Gtimestamptz_comparison_expBuilder get created_at =>
      _$this._created_at ??= new Gtimestamptz_comparison_expBuilder();
  set created_at(Gtimestamptz_comparison_expBuilder? created_at) =>
      _$this._created_at = created_at;

  Guuid_comparison_expBuilder? _created_by;
  Guuid_comparison_expBuilder get created_by =>
      _$this._created_by ??= new Guuid_comparison_expBuilder();
  set created_by(Guuid_comparison_expBuilder? created_by) =>
      _$this._created_by = created_by;

  Gtimestamptz_comparison_expBuilder? _deleted_at;
  Gtimestamptz_comparison_expBuilder get deleted_at =>
      _$this._deleted_at ??= new Gtimestamptz_comparison_expBuilder();
  set deleted_at(Gtimestamptz_comparison_expBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  Guuid_comparison_expBuilder? _id;
  Guuid_comparison_expBuilder get id =>
      _$this._id ??= new Guuid_comparison_expBuilder();
  set id(Guuid_comparison_expBuilder? id) => _$this._id = id;

  GBoolean_comparison_expBuilder? _is_done;
  GBoolean_comparison_expBuilder get is_done =>
      _$this._is_done ??= new GBoolean_comparison_expBuilder();
  set is_done(GBoolean_comparison_expBuilder? is_done) =>
      _$this._is_done = is_done;

  GInt_comparison_expBuilder? _times;
  GInt_comparison_expBuilder get times =>
      _$this._times ??= new GInt_comparison_expBuilder();
  set times(GInt_comparison_expBuilder? times) => _$this._times = times;

  Gtimestamptz_comparison_expBuilder? _updated_at;
  Gtimestamptz_comparison_expBuilder get updated_at =>
      _$this._updated_at ??= new Gtimestamptz_comparison_expBuilder();
  set updated_at(Gtimestamptz_comparison_expBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  Guuid_comparison_expBuilder? _updated_by;
  Guuid_comparison_expBuilder get updated_by =>
      _$this._updated_by ??= new Guuid_comparison_expBuilder();
  set updated_by(Guuid_comparison_expBuilder? updated_by) =>
      _$this._updated_by = updated_by;

  GString_comparison_expBuilder? _word;
  GString_comparison_expBuilder get word =>
      _$this._word ??= new GString_comparison_expBuilder();
  set word(GString_comparison_expBuilder? word) => _$this._word = word;

  Gwords_bool_expBuilder();

  Gwords_bool_expBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_and = $v.G_and?.toBuilder();
      _G_not = $v.G_not?.toBuilder();
      _G_or = $v.G_or?.toBuilder();
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _is_done = $v.is_done?.toBuilder();
      _times = $v.times?.toBuilder();
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _word = $v.word?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_bool_exp other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_bool_exp;
  }

  @override
  void update(void Function(Gwords_bool_expBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_bool_exp build() => _build();

  _$Gwords_bool_exp _build() {
    _$Gwords_bool_exp _$result;
    try {
      _$result = _$v ??
          new _$Gwords_bool_exp._(
              G_and: _G_and?.build(),
              G_not: _G_not?.build(),
              G_or: _G_or?.build(),
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              is_done: _is_done?.build(),
              times: _times?.build(),
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              word: _word?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_and';
        _G_and?.build();
        _$failedField = 'G_not';
        _G_not?.build();
        _$failedField = 'G_or';
        _G_or?.build();
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();
        _$failedField = 'is_done';
        _is_done?.build();
        _$failedField = 'times';
        _times?.build();
        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
        _$failedField = 'word';
        _word?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_bool_exp', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_inc_input extends Gwords_inc_input {
  @override
  final int? times;

  factory _$Gwords_inc_input(
          [void Function(Gwords_inc_inputBuilder)? updates]) =>
      (new Gwords_inc_inputBuilder()..update(updates))._build();

  _$Gwords_inc_input._({this.times}) : super._();

  @override
  Gwords_inc_input rebuild(void Function(Gwords_inc_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_inc_inputBuilder toBuilder() =>
      new Gwords_inc_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_inc_input && times == other.times;
  }

  @override
  int get hashCode {
    return $jf($jc(0, times.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_inc_input')
          ..add('times', times))
        .toString();
  }
}

class Gwords_inc_inputBuilder
    implements Builder<Gwords_inc_input, Gwords_inc_inputBuilder> {
  _$Gwords_inc_input? _$v;

  int? _times;
  int? get times => _$this._times;
  set times(int? times) => _$this._times = times;

  Gwords_inc_inputBuilder();

  Gwords_inc_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _times = $v.times;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_inc_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_inc_input;
  }

  @override
  void update(void Function(Gwords_inc_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_inc_input build() => _build();

  _$Gwords_inc_input _build() {
    final _$result = _$v ?? new _$Gwords_inc_input._(times: times);
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_insert_input extends Gwords_insert_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final bool? is_done;
  @override
  final int? times;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? word;

  factory _$Gwords_insert_input(
          [void Function(Gwords_insert_inputBuilder)? updates]) =>
      (new Gwords_insert_inputBuilder()..update(updates))._build();

  _$Gwords_insert_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.is_done,
      this.times,
      this.updated_at,
      this.updated_by,
      this.word})
      : super._();

  @override
  Gwords_insert_input rebuild(
          void Function(Gwords_insert_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_insert_inputBuilder toBuilder() =>
      new Gwords_insert_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_insert_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        is_done == other.is_done &&
        times == other.times &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        word == other.word;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, created_at.hashCode),
                                    created_by.hashCode),
                                deleted_at.hashCode),
                            id.hashCode),
                        is_done.hashCode),
                    times.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        word.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_insert_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('is_done', is_done)
          ..add('times', times)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('word', word))
        .toString();
  }
}

class Gwords_insert_inputBuilder
    implements Builder<Gwords_insert_input, Gwords_insert_inputBuilder> {
  _$Gwords_insert_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _is_done;
  bool? get is_done => _$this._is_done;
  set is_done(bool? is_done) => _$this._is_done = is_done;

  int? _times;
  int? get times => _$this._times;
  set times(int? times) => _$this._times = times;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _word;
  String? get word => _$this._word;
  set word(String? word) => _$this._word = word;

  Gwords_insert_inputBuilder();

  Gwords_insert_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _is_done = $v.is_done;
      _times = $v.times;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _word = $v.word;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_insert_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_insert_input;
  }

  @override
  void update(void Function(Gwords_insert_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_insert_input build() => _build();

  _$Gwords_insert_input _build() {
    _$Gwords_insert_input _$result;
    try {
      _$result = _$v ??
          new _$Gwords_insert_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              is_done: is_done,
              times: times,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              word: word);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_insert_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_on_conflict extends Gwords_on_conflict {
  @override
  final Gwords_constraint constraint;
  @override
  final BuiltList<Gwords_update_column> update_columns;
  @override
  final Gwords_bool_exp? where;

  factory _$Gwords_on_conflict(
          [void Function(Gwords_on_conflictBuilder)? updates]) =>
      (new Gwords_on_conflictBuilder()..update(updates))._build();

  _$Gwords_on_conflict._(
      {required this.constraint, required this.update_columns, this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        constraint, r'Gwords_on_conflict', 'constraint');
    BuiltValueNullFieldError.checkNotNull(
        update_columns, r'Gwords_on_conflict', 'update_columns');
  }

  @override
  Gwords_on_conflict rebuild(
          void Function(Gwords_on_conflictBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_on_conflictBuilder toBuilder() =>
      new Gwords_on_conflictBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_on_conflict &&
        constraint == other.constraint &&
        update_columns == other.update_columns &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, constraint.hashCode), update_columns.hashCode),
        where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_on_conflict')
          ..add('constraint', constraint)
          ..add('update_columns', update_columns)
          ..add('where', where))
        .toString();
  }
}

class Gwords_on_conflictBuilder
    implements Builder<Gwords_on_conflict, Gwords_on_conflictBuilder> {
  _$Gwords_on_conflict? _$v;

  Gwords_constraint? _constraint;
  Gwords_constraint? get constraint => _$this._constraint;
  set constraint(Gwords_constraint? constraint) =>
      _$this._constraint = constraint;

  ListBuilder<Gwords_update_column>? _update_columns;
  ListBuilder<Gwords_update_column> get update_columns =>
      _$this._update_columns ??= new ListBuilder<Gwords_update_column>();
  set update_columns(ListBuilder<Gwords_update_column>? update_columns) =>
      _$this._update_columns = update_columns;

  Gwords_bool_expBuilder? _where;
  Gwords_bool_expBuilder get where =>
      _$this._where ??= new Gwords_bool_expBuilder();
  set where(Gwords_bool_expBuilder? where) => _$this._where = where;

  Gwords_on_conflictBuilder();

  Gwords_on_conflictBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _constraint = $v.constraint;
      _update_columns = $v.update_columns.toBuilder();
      _where = $v.where?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_on_conflict other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_on_conflict;
  }

  @override
  void update(void Function(Gwords_on_conflictBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_on_conflict build() => _build();

  _$Gwords_on_conflict _build() {
    _$Gwords_on_conflict _$result;
    try {
      _$result = _$v ??
          new _$Gwords_on_conflict._(
              constraint: BuiltValueNullFieldError.checkNotNull(
                  constraint, r'Gwords_on_conflict', 'constraint'),
              update_columns: update_columns.build(),
              where: _where?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'update_columns';
        update_columns.build();
        _$failedField = 'where';
        _where?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_on_conflict', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_order_by extends Gwords_order_by {
  @override
  final Gorder_by? created_at;
  @override
  final Gorder_by? created_by;
  @override
  final Gorder_by? deleted_at;
  @override
  final Gorder_by? id;
  @override
  final Gorder_by? is_done;
  @override
  final Gorder_by? times;
  @override
  final Gorder_by? updated_at;
  @override
  final Gorder_by? updated_by;
  @override
  final Gorder_by? word;

  factory _$Gwords_order_by([void Function(Gwords_order_byBuilder)? updates]) =>
      (new Gwords_order_byBuilder()..update(updates))._build();

  _$Gwords_order_by._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.is_done,
      this.times,
      this.updated_at,
      this.updated_by,
      this.word})
      : super._();

  @override
  Gwords_order_by rebuild(void Function(Gwords_order_byBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_order_byBuilder toBuilder() =>
      new Gwords_order_byBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_order_by &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        is_done == other.is_done &&
        times == other.times &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        word == other.word;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, created_at.hashCode),
                                    created_by.hashCode),
                                deleted_at.hashCode),
                            id.hashCode),
                        is_done.hashCode),
                    times.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        word.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_order_by')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('is_done', is_done)
          ..add('times', times)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('word', word))
        .toString();
  }
}

class Gwords_order_byBuilder
    implements Builder<Gwords_order_by, Gwords_order_byBuilder> {
  _$Gwords_order_by? _$v;

  Gorder_by? _created_at;
  Gorder_by? get created_at => _$this._created_at;
  set created_at(Gorder_by? created_at) => _$this._created_at = created_at;

  Gorder_by? _created_by;
  Gorder_by? get created_by => _$this._created_by;
  set created_by(Gorder_by? created_by) => _$this._created_by = created_by;

  Gorder_by? _deleted_at;
  Gorder_by? get deleted_at => _$this._deleted_at;
  set deleted_at(Gorder_by? deleted_at) => _$this._deleted_at = deleted_at;

  Gorder_by? _id;
  Gorder_by? get id => _$this._id;
  set id(Gorder_by? id) => _$this._id = id;

  Gorder_by? _is_done;
  Gorder_by? get is_done => _$this._is_done;
  set is_done(Gorder_by? is_done) => _$this._is_done = is_done;

  Gorder_by? _times;
  Gorder_by? get times => _$this._times;
  set times(Gorder_by? times) => _$this._times = times;

  Gorder_by? _updated_at;
  Gorder_by? get updated_at => _$this._updated_at;
  set updated_at(Gorder_by? updated_at) => _$this._updated_at = updated_at;

  Gorder_by? _updated_by;
  Gorder_by? get updated_by => _$this._updated_by;
  set updated_by(Gorder_by? updated_by) => _$this._updated_by = updated_by;

  Gorder_by? _word;
  Gorder_by? get word => _$this._word;
  set word(Gorder_by? word) => _$this._word = word;

  Gwords_order_byBuilder();

  Gwords_order_byBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at;
      _created_by = $v.created_by;
      _deleted_at = $v.deleted_at;
      _id = $v.id;
      _is_done = $v.is_done;
      _times = $v.times;
      _updated_at = $v.updated_at;
      _updated_by = $v.updated_by;
      _word = $v.word;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_order_by other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_order_by;
  }

  @override
  void update(void Function(Gwords_order_byBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_order_by build() => _build();

  _$Gwords_order_by _build() {
    final _$result = _$v ??
        new _$Gwords_order_by._(
            created_at: created_at,
            created_by: created_by,
            deleted_at: deleted_at,
            id: id,
            is_done: is_done,
            times: times,
            updated_at: updated_at,
            updated_by: updated_by,
            word: word);
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_pk_columns_input extends Gwords_pk_columns_input {
  @override
  final Guuid id;

  factory _$Gwords_pk_columns_input(
          [void Function(Gwords_pk_columns_inputBuilder)? updates]) =>
      (new Gwords_pk_columns_inputBuilder()..update(updates))._build();

  _$Gwords_pk_columns_input._({required this.id}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'Gwords_pk_columns_input', 'id');
  }

  @override
  Gwords_pk_columns_input rebuild(
          void Function(Gwords_pk_columns_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_pk_columns_inputBuilder toBuilder() =>
      new Gwords_pk_columns_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_pk_columns_input && id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(0, id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_pk_columns_input')
          ..add('id', id))
        .toString();
  }
}

class Gwords_pk_columns_inputBuilder
    implements
        Builder<Gwords_pk_columns_input, Gwords_pk_columns_inputBuilder> {
  _$Gwords_pk_columns_input? _$v;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  Gwords_pk_columns_inputBuilder();

  Gwords_pk_columns_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_pk_columns_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_pk_columns_input;
  }

  @override
  void update(void Function(Gwords_pk_columns_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_pk_columns_input build() => _build();

  _$Gwords_pk_columns_input _build() {
    _$Gwords_pk_columns_input _$result;
    try {
      _$result = _$v ?? new _$Gwords_pk_columns_input._(id: id.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'id';
        id.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_pk_columns_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_set_input extends Gwords_set_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final bool? is_done;
  @override
  final int? times;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? word;

  factory _$Gwords_set_input(
          [void Function(Gwords_set_inputBuilder)? updates]) =>
      (new Gwords_set_inputBuilder()..update(updates))._build();

  _$Gwords_set_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.is_done,
      this.times,
      this.updated_at,
      this.updated_by,
      this.word})
      : super._();

  @override
  Gwords_set_input rebuild(void Function(Gwords_set_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_set_inputBuilder toBuilder() =>
      new Gwords_set_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_set_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        is_done == other.is_done &&
        times == other.times &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        word == other.word;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, created_at.hashCode),
                                    created_by.hashCode),
                                deleted_at.hashCode),
                            id.hashCode),
                        is_done.hashCode),
                    times.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        word.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_set_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('is_done', is_done)
          ..add('times', times)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('word', word))
        .toString();
  }
}

class Gwords_set_inputBuilder
    implements Builder<Gwords_set_input, Gwords_set_inputBuilder> {
  _$Gwords_set_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _is_done;
  bool? get is_done => _$this._is_done;
  set is_done(bool? is_done) => _$this._is_done = is_done;

  int? _times;
  int? get times => _$this._times;
  set times(int? times) => _$this._times = times;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _word;
  String? get word => _$this._word;
  set word(String? word) => _$this._word = word;

  Gwords_set_inputBuilder();

  Gwords_set_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _is_done = $v.is_done;
      _times = $v.times;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _word = $v.word;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_set_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_set_input;
  }

  @override
  void update(void Function(Gwords_set_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_set_input build() => _build();

  _$Gwords_set_input _build() {
    _$Gwords_set_input _$result;
    try {
      _$result = _$v ??
          new _$Gwords_set_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              is_done: is_done,
              times: times,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              word: word);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_set_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_stream_cursor_input extends Gwords_stream_cursor_input {
  @override
  final Gwords_stream_cursor_value_input initial_value;
  @override
  final Gcursor_ordering? ordering;

  factory _$Gwords_stream_cursor_input(
          [void Function(Gwords_stream_cursor_inputBuilder)? updates]) =>
      (new Gwords_stream_cursor_inputBuilder()..update(updates))._build();

  _$Gwords_stream_cursor_input._({required this.initial_value, this.ordering})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        initial_value, r'Gwords_stream_cursor_input', 'initial_value');
  }

  @override
  Gwords_stream_cursor_input rebuild(
          void Function(Gwords_stream_cursor_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_stream_cursor_inputBuilder toBuilder() =>
      new Gwords_stream_cursor_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_stream_cursor_input &&
        initial_value == other.initial_value &&
        ordering == other.ordering;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, initial_value.hashCode), ordering.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_stream_cursor_input')
          ..add('initial_value', initial_value)
          ..add('ordering', ordering))
        .toString();
  }
}

class Gwords_stream_cursor_inputBuilder
    implements
        Builder<Gwords_stream_cursor_input, Gwords_stream_cursor_inputBuilder> {
  _$Gwords_stream_cursor_input? _$v;

  Gwords_stream_cursor_value_inputBuilder? _initial_value;
  Gwords_stream_cursor_value_inputBuilder get initial_value =>
      _$this._initial_value ??= new Gwords_stream_cursor_value_inputBuilder();
  set initial_value(Gwords_stream_cursor_value_inputBuilder? initial_value) =>
      _$this._initial_value = initial_value;

  Gcursor_ordering? _ordering;
  Gcursor_ordering? get ordering => _$this._ordering;
  set ordering(Gcursor_ordering? ordering) => _$this._ordering = ordering;

  Gwords_stream_cursor_inputBuilder();

  Gwords_stream_cursor_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _initial_value = $v.initial_value.toBuilder();
      _ordering = $v.ordering;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_stream_cursor_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_stream_cursor_input;
  }

  @override
  void update(void Function(Gwords_stream_cursor_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_stream_cursor_input build() => _build();

  _$Gwords_stream_cursor_input _build() {
    _$Gwords_stream_cursor_input _$result;
    try {
      _$result = _$v ??
          new _$Gwords_stream_cursor_input._(
              initial_value: initial_value.build(), ordering: ordering);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'initial_value';
        initial_value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_stream_cursor_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_stream_cursor_value_input
    extends Gwords_stream_cursor_value_input {
  @override
  final Gtimestamptz? created_at;
  @override
  final Guuid? created_by;
  @override
  final Gtimestamptz? deleted_at;
  @override
  final Guuid? id;
  @override
  final bool? is_done;
  @override
  final int? times;
  @override
  final Gtimestamptz? updated_at;
  @override
  final Guuid? updated_by;
  @override
  final String? word;

  factory _$Gwords_stream_cursor_value_input(
          [void Function(Gwords_stream_cursor_value_inputBuilder)? updates]) =>
      (new Gwords_stream_cursor_value_inputBuilder()..update(updates))._build();

  _$Gwords_stream_cursor_value_input._(
      {this.created_at,
      this.created_by,
      this.deleted_at,
      this.id,
      this.is_done,
      this.times,
      this.updated_at,
      this.updated_by,
      this.word})
      : super._();

  @override
  Gwords_stream_cursor_value_input rebuild(
          void Function(Gwords_stream_cursor_value_inputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_stream_cursor_value_inputBuilder toBuilder() =>
      new Gwords_stream_cursor_value_inputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_stream_cursor_value_input &&
        created_at == other.created_at &&
        created_by == other.created_by &&
        deleted_at == other.deleted_at &&
        id == other.id &&
        is_done == other.is_done &&
        times == other.times &&
        updated_at == other.updated_at &&
        updated_by == other.updated_by &&
        word == other.word;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, created_at.hashCode),
                                    created_by.hashCode),
                                deleted_at.hashCode),
                            id.hashCode),
                        is_done.hashCode),
                    times.hashCode),
                updated_at.hashCode),
            updated_by.hashCode),
        word.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_stream_cursor_value_input')
          ..add('created_at', created_at)
          ..add('created_by', created_by)
          ..add('deleted_at', deleted_at)
          ..add('id', id)
          ..add('is_done', is_done)
          ..add('times', times)
          ..add('updated_at', updated_at)
          ..add('updated_by', updated_by)
          ..add('word', word))
        .toString();
  }
}

class Gwords_stream_cursor_value_inputBuilder
    implements
        Builder<Gwords_stream_cursor_value_input,
            Gwords_stream_cursor_value_inputBuilder> {
  _$Gwords_stream_cursor_value_input? _$v;

  GtimestamptzBuilder? _created_at;
  GtimestamptzBuilder get created_at =>
      _$this._created_at ??= new GtimestamptzBuilder();
  set created_at(GtimestamptzBuilder? created_at) =>
      _$this._created_at = created_at;

  GuuidBuilder? _created_by;
  GuuidBuilder get created_by => _$this._created_by ??= new GuuidBuilder();
  set created_by(GuuidBuilder? created_by) => _$this._created_by = created_by;

  GtimestamptzBuilder? _deleted_at;
  GtimestamptzBuilder get deleted_at =>
      _$this._deleted_at ??= new GtimestamptzBuilder();
  set deleted_at(GtimestamptzBuilder? deleted_at) =>
      _$this._deleted_at = deleted_at;

  GuuidBuilder? _id;
  GuuidBuilder get id => _$this._id ??= new GuuidBuilder();
  set id(GuuidBuilder? id) => _$this._id = id;

  bool? _is_done;
  bool? get is_done => _$this._is_done;
  set is_done(bool? is_done) => _$this._is_done = is_done;

  int? _times;
  int? get times => _$this._times;
  set times(int? times) => _$this._times = times;

  GtimestamptzBuilder? _updated_at;
  GtimestamptzBuilder get updated_at =>
      _$this._updated_at ??= new GtimestamptzBuilder();
  set updated_at(GtimestamptzBuilder? updated_at) =>
      _$this._updated_at = updated_at;

  GuuidBuilder? _updated_by;
  GuuidBuilder get updated_by => _$this._updated_by ??= new GuuidBuilder();
  set updated_by(GuuidBuilder? updated_by) => _$this._updated_by = updated_by;

  String? _word;
  String? get word => _$this._word;
  set word(String? word) => _$this._word = word;

  Gwords_stream_cursor_value_inputBuilder();

  Gwords_stream_cursor_value_inputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _created_at = $v.created_at?.toBuilder();
      _created_by = $v.created_by?.toBuilder();
      _deleted_at = $v.deleted_at?.toBuilder();
      _id = $v.id?.toBuilder();
      _is_done = $v.is_done;
      _times = $v.times;
      _updated_at = $v.updated_at?.toBuilder();
      _updated_by = $v.updated_by?.toBuilder();
      _word = $v.word;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_stream_cursor_value_input other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_stream_cursor_value_input;
  }

  @override
  void update(void Function(Gwords_stream_cursor_value_inputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_stream_cursor_value_input build() => _build();

  _$Gwords_stream_cursor_value_input _build() {
    _$Gwords_stream_cursor_value_input _$result;
    try {
      _$result = _$v ??
          new _$Gwords_stream_cursor_value_input._(
              created_at: _created_at?.build(),
              created_by: _created_by?.build(),
              deleted_at: _deleted_at?.build(),
              id: _id?.build(),
              is_done: is_done,
              times: times,
              updated_at: _updated_at?.build(),
              updated_by: _updated_by?.build(),
              word: word);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created_at';
        _created_at?.build();
        _$failedField = 'created_by';
        _created_by?.build();
        _$failedField = 'deleted_at';
        _deleted_at?.build();
        _$failedField = 'id';
        _id?.build();

        _$failedField = 'updated_at';
        _updated_at?.build();
        _$failedField = 'updated_by';
        _updated_by?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_stream_cursor_value_input', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$Gwords_updates extends Gwords_updates {
  @override
  final Gwords_inc_input? G_inc;
  @override
  final Gwords_set_input? G_set;
  @override
  final Gwords_bool_exp where;

  factory _$Gwords_updates([void Function(Gwords_updatesBuilder)? updates]) =>
      (new Gwords_updatesBuilder()..update(updates))._build();

  _$Gwords_updates._({this.G_inc, this.G_set, required this.where})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(where, r'Gwords_updates', 'where');
  }

  @override
  Gwords_updates rebuild(void Function(Gwords_updatesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  Gwords_updatesBuilder toBuilder() =>
      new Gwords_updatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Gwords_updates &&
        G_inc == other.G_inc &&
        G_set == other.G_set &&
        where == other.where;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, G_inc.hashCode), G_set.hashCode), where.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'Gwords_updates')
          ..add('G_inc', G_inc)
          ..add('G_set', G_set)
          ..add('where', where))
        .toString();
  }
}

class Gwords_updatesBuilder
    implements Builder<Gwords_updates, Gwords_updatesBuilder> {
  _$Gwords_updates? _$v;

  Gwords_inc_inputBuilder? _G_inc;
  Gwords_inc_inputBuilder get G_inc =>
      _$this._G_inc ??= new Gwords_inc_inputBuilder();
  set G_inc(Gwords_inc_inputBuilder? G_inc) => _$this._G_inc = G_inc;

  Gwords_set_inputBuilder? _G_set;
  Gwords_set_inputBuilder get G_set =>
      _$this._G_set ??= new Gwords_set_inputBuilder();
  set G_set(Gwords_set_inputBuilder? G_set) => _$this._G_set = G_set;

  Gwords_bool_expBuilder? _where;
  Gwords_bool_expBuilder get where =>
      _$this._where ??= new Gwords_bool_expBuilder();
  set where(Gwords_bool_expBuilder? where) => _$this._where = where;

  Gwords_updatesBuilder();

  Gwords_updatesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G_inc = $v.G_inc?.toBuilder();
      _G_set = $v.G_set?.toBuilder();
      _where = $v.where.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Gwords_updates other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$Gwords_updates;
  }

  @override
  void update(void Function(Gwords_updatesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  Gwords_updates build() => _build();

  _$Gwords_updates _build() {
    _$Gwords_updates _$result;
    try {
      _$result = _$v ??
          new _$Gwords_updates._(
              G_inc: _G_inc?.build(),
              G_set: _G_set?.build(),
              where: where.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'G_inc';
        _G_inc?.build();
        _$failedField = 'G_set';
        _G_set?.build();
        _$failedField = 'where';
        where.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'Gwords_updates', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,deprecated_member_use_from_same_package,lines_longer_than_80_chars,no_leading_underscores_for_local_identifiers,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new,unnecessary_lambdas
